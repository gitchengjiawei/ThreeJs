'use strict';var THREE={REVISION:"73"};"function"==typeof define&&define.amd?define("three",THREE):"undefined"!=typeof exports&&"undefined"!=typeof module&&(module.exports=THREE),void 0!==self.requestAnimationFrame&&void 0!==self.cancelAnimationFrame||function(){for(var e=0,t=["ms","moz","webkit","o"],r=0;r<t.length&&!self.requestAnimationFrame;++r)self.requestAnimationFrame=self[t[r]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[t[r]+"CancelAnimationFrame"]||self[t[r]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(t){var r=Date.now(),a=Math.max(0,16-(r-e)),o=self.setTimeout(function(){t(r+a)},a);return e=r+a,o}),void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(e){self.clearTimeout(e)})}(),void 0===self.performance&&(self.performance={}),void 0===self.performance.now&&function(){var e=Date.now();self.performance.now=function(){return Date.now()-e}}(),void 0===Number.EPSILON&&(Number.EPSILON=2.220446049250313e-16),void 0===Math.sign&&(Math.sign=function(e){return 0>e?-1:0<e?1:+e}),void 0===Function.prototype.name&&void 0!==Object.defineProperty&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]}}),THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.MinEquation=103,THREE.MaxEquation=104,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.NeverDepth=0,THREE.AlwaysDepth=1,THREE.LessDepth=2,THREE.LessEqualDepth=3,THREE.EqualDepth=4,THREE.GreaterEqualDepth=5,THREE.GreaterDepth=6,THREE.NotEqualDepth=7,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=300,THREE.CubeReflectionMapping=301,THREE.CubeRefractionMapping=302,THREE.EquirectangularReflectionMapping=303,THREE.EquirectangularRefractionMapping=304,THREE.SphericalReflectionMapping=305,THREE.RepeatWrapping=1E3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.HalfFloatType=1025,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGBEFormat=THREE.RGBAFormat,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.RGB_PVRTC_4BPPV1_Format=2100,THREE.RGB_PVRTC_2BPPV1_Format=2101,THREE.RGBA_PVRTC_4BPPV1_Format=2102,THREE.RGBA_PVRTC_2BPPV1_Format=2103,THREE.LoopOnce=2200,THREE.LoopRepeat=2201,THREE.LoopPingPong=2202,THREE.Projector=function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(e,t){console.warn("THREE.Projector: .projectVector() is now vector.project()."),e.project(t)},this.unprojectVector=function(e,t){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),e.unproject(t)},this.pickingRay=function(){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}},THREE.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElement("canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}},THREE.Color=function(e){return 3===arguments.length?this.fromArray(arguments):this.set(e)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){return e instanceof THREE.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setHex:function(e){return e=Math.floor(e),this.r=(255&e>>16)/255,this.g=(255&e>>8)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(){function e(e,t,r){return 0>r&&(r+=1),1<r&&(r-=1),r<1/6?e+6*(t-e)*r:.5>r?t:r<2/3?e+6*(t-e)*(2/3-r):e}return function(t,r,a){return t=THREE.Math.euclideanModulo(t,1),r=THREE.Math.clamp(r,0,1),a=THREE.Math.clamp(a,0,1),0===r?this.r=this.g=this.b=a:(r=.5>=a?a*(1+r):a+r-a*r,a=2*a-r,this.r=e(a,r,t+1/3),this.g=e(a,r,t),this.b=e(a,r,t-1/3)),this}}(),setStyle:function(t){function r(e){void 0!==e&&1>parseFloat(e)&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var a=Math.min,o;if(o=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){var i=o[2];switch(o[1]){case"rgb":case"rgba":if(o=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=a(255,parseInt(o[1],10))/255,this.g=a(255,parseInt(o[2],10))/255,this.b=a(255,parseInt(o[3],10))/255,r(o[5]),this;if(o=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=a(100,parseInt(o[1],10))/100,this.g=a(100,parseInt(o[2],10))/100,this.b=a(100,parseInt(o[3],10))/100,r(o[5]),this;break;case"hsl":case"hsla":if(o=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i)){var i=parseFloat(o[1])/360,n=parseInt(o[2],10)/100,e=parseInt(o[3],10)/100;return r(o[5]),this.setHSL(i,n,e)}}}else if(o=/^\#([A-Fa-f0-9]+)$/.exec(t)){if(o=o[1],i=o.length,3===i)return this.r=parseInt(o.charAt(0)+o.charAt(0),16)/255,this.g=parseInt(o.charAt(1)+o.charAt(1),16)/255,this.b=parseInt(o.charAt(2)+o.charAt(2),16)/255,this;if(6===i)return this.r=parseInt(o.charAt(0)+o.charAt(1),16)/255,this.g=parseInt(o.charAt(2)+o.charAt(3),16)/255,this.b=parseInt(o.charAt(4)+o.charAt(5),16)/255,this}return t&&0<t.length&&(o=THREE.ColorKeywords[t],void 0===o?console.warn("THREE.Color: Unknown color "+t):this.setHex(o)),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){var r=Math.pow;return void 0===t&&(t=2),this.r=r(e.r,t),this.g=r(e.g,t),this.b=r(e.b,t),this},copyLinearToGamma:function(e,t){var r=Math.pow;void 0===t&&(t=2);var a=0<t?1/t:1;return this.r=r(e.r,a),this.g=r(e.g,a),this.b=r(e.b,a),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){var e=Math.sqrt;return this.r=e(this.r),this.g=e(this.g),this.b=e(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){t=t||{h:0,s:0,l:0};var r=this.r,o=this.g,i=this.b,n=Math.max(r,o,i),e=Math.min(r,o,i),s=(e+n)/2,p;if(e===n)e=p=0;else{var d=n-e,e=.5>=s?d/(n+e):d/(2-n-e);n===r?p=(o-i)/d+(o<i?6:0):n===o?p=(i-r)/d+2:n===i?p=(r-o)/d+4:void 0,p/=6}return t.h=p,t.s=e,t.l=s,t},getStyle:function(){return"rgb("+(0|255*this.r)+","+(0|255*this.g)+","+(0|255*this.b)+")"},offsetHSL:function(e,t,r){var a=this.getHSL();return a.h+=e,a.s+=t,a.l+=r,this.setHSL(a.h,a.s,a.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,r,a){this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0===a?1:a},THREE.Quaternion.prototype={constructor:THREE.Quaternion,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e,this.onChangeCallback()},set:function(e,t,r,a){return this._x=e,this._y=t,this._z=r,this._w=a,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(t,r){var a=Math.sin,o=Math.cos;if(!1==t instanceof THREE.Euler)throw Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var i=o(t._x/2),n=o(t._y/2),s=o(t._z/2),e=a(t._x/2),p=a(t._y/2),d=a(t._z/2),c=t.order;return"XYZ"===c?(this._x=e*n*s+i*p*d,this._y=i*p*s-e*n*d,this._z=i*n*d+e*p*s,this._w=i*n*s-e*p*d):"YXZ"===c?(this._x=e*n*s+i*p*d,this._y=i*p*s-e*n*d,this._z=i*n*d-e*p*s,this._w=i*n*s+e*p*d):"ZXY"===c?(this._x=e*n*s-i*p*d,this._y=i*p*s+e*n*d,this._z=i*n*d+e*p*s,this._w=i*n*s-e*p*d):"ZYX"===c?(this._x=e*n*s-i*p*d,this._y=i*p*s+e*n*d,this._z=i*n*d-e*p*s,this._w=i*n*s+e*p*d):"YZX"===c?(this._x=e*n*s+i*p*d,this._y=i*p*s+e*n*d,this._z=i*n*d-e*p*s,this._w=i*n*s-e*p*d):"XZY"===c&&(this._x=e*n*s-i*p*d,this._y=i*p*s-e*n*d,this._z=i*n*d+e*p*s,this._w=i*n*s+e*p*d),!1!==r&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var r=t/2,a=Math.sin(r);return this._x=e.x*a,this._y=e.y*a,this._z=e.z*a,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var r=Math.sqrt,o=t.elements,i=o[0];t=o[4];var n=o[8],s=o[1],e=o[5],p=o[9],d=o[2],m=o[6],o=o[10],l=i+e+o;return 0<l?(i=.5/r(l+1),this._w=.25/i,this._x=(m-p)*i,this._y=(n-d)*i,this._z=(s-t)*i):i>e&&i>o?(i=2*r(1+i-e-o),this._w=(m-p)/i,this._x=.25*i,this._y=(t+s)/i,this._z=(n+d)/i):e>o?(i=2*r(1+e-i-o),this._w=(n-d)/i,this._x=(t+s)/i,this._y=.25*i,this._z=(p+m)/i):(i=2*r(1+o-i-e),this._w=(s-t)/i,this._x=(n+d)/i,this._y=(p+m)/i,this._z=.25*i),this.onChangeCallback(),this},setFromUnitVectors:function(){var e=Math.abs,t,r;return function(a,o){return void 0===t&&(t=new THREE.Vector3),r=a.dot(o)+1,1E-6>r?(r=0,e(a.x)>e(a.z)?t.set(-a.y,a.x,0):t.set(0,-a.z,a.y)):t.crossVectors(a,o),this._x=t.x,this._y=t.y,this._z=t.z,this._w=r,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._z=this._y=this._x=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e),this.onChangeCallback(),this},multiply:function(e,t){return void 0===t?this.multiplyQuaternions(this,e):(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t))},multiplyQuaternions:function(t,r){var a=t._x,o=t._y,i=t._z,e=t._w,n=r._x,s=r._y,p=r._z,l=r._w;return this._x=a*l+e*n+o*p-i*s,this._y=o*l+e*s+i*n-a*p,this._z=i*l+e*p+a*s-o*n,this._w=e*l-a*n-o*s-i*p,this.onChangeCallback(),this},multiplyVector3:function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(t,r){var a=Math.sin;if(0===r)return this;if(1===r)return this.copy(t);var o=this._x,i=this._y,n=this._z,e=this._w,s=e*t._w+o*t._x+i*t._y+n*t._z;if(0>s?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),1<=s)return this._w=e,this._x=o,this._y=i,this._z=n,this;var p=Math.acos(s),d=Math.sqrt(1-s*s);return .001>Math.abs(d)?(this._w=.5*(e+this._w),this._x=.5*(o+this._x),this._y=.5*(i+this._y),this._z=.5*(n+this._z),this):(s=a((1-r)*p)/d,p=a(r*p)/d,this._w=e*s+this._w*p,this._x=o*s+this._x*p,this._y=i*s+this._y*p,this._z=n*s+this._z*p,this.onChangeCallback(),this)},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},THREE.Quaternion.slerp=function(e,t,r,a){return r.copy(e).slerp(t,a)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,get width(){return this.x},set width(e){this.x=e},get height(){return this.y},set height(e){this.y=e},set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e);}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this):(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this):(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e):this.y=this.x=0,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){var t=Math.min;return this.x=t(this.x,e.x),this.y=t(this.y,e.y),this},max:function(e){var t=Math.max;return this.x=t(this.x,e.x),this.y=t(this.y,e.y),this},clamp:function(e,t){var r=Math.min,a=Math.max;return this.x=a(e.x,r(t.x,this.x)),this.y=a(e.y,r(t.y,this.y)),this},clampScalar:function(){var e,t;return function(r,a){return void 0===e&&(e=new THREE.Vector2,t=new THREE.Vector2),e.set(r,r),t.set(a,a),this.clamp(e,t)}}(),clampLength:function(e,t){var r=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,r))/r),this},floor:function(){var e=Math.floor;return this.x=e(this.x),this.y=e(this.y),this},ceil:function(){var e=Math.ceil;return this.x=e(this.x),this.y=e(this.y),this},round:function(){var e=Math.round;return this.x=e(this.x),this.y=e(this.y),this},roundToZero:function(){var e=Math.ceil,t=Math.floor;return this.x=0>this.x?e(this.x):t(this.x),this.y=0>this.y?e(this.y):t(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){var e=Math.abs;return e(this.x)+e(this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x;return e=this.y-e.y,t*t+e*e},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e),this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromAttribute:function(e,t,r){return void 0===r&&(r=0),t=t*e.itemSize+r,this.x=e.array[t],this.y=e.array[t+1],this},rotateAround:function(t,r){var a=Math.cos(r),o=Math.sin(r),i=this.x-t.x,e=this.y-t.y;return this.x=i*a-e*o+t.x,this.y=i*o+e*a+t.y,this}},THREE.Vector3=function(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e);}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this):(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this):(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0===t?(this.x*=e.x,this.y*=e.y,this.z*=e.z,this):(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t))},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e):this.z=this.y=this.x=0,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e;return function(t){return!1==t instanceof THREE.Euler&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var e;return function(t,r){return void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromAxisAngle(t,r)),this}}(),applyMatrix3:function(e){var t=this.x,r=this.y,o=this.z;return e=e.elements,this.x=e[0]*t+e[3]*r+e[6]*o,this.y=e[1]*t+e[4]*r+e[7]*o,this.z=e[2]*t+e[5]*r+e[8]*o,this},applyMatrix4:function(e){var t=this.x,r=this.y,o=this.z;return e=e.elements,this.x=e[0]*t+e[4]*r+e[8]*o+e[12],this.y=e[1]*t+e[5]*r+e[9]*o+e[13],this.z=e[2]*t+e[6]*r+e[10]*o+e[14],this},applyProjection:function(t){var r=this.x,o=this.y,i=this.z;t=t.elements;var n=1/(t[3]*r+t[7]*o+t[11]*i+t[15]);return this.x=(t[0]*r+t[4]*o+t[8]*i+t[12])*n,this.y=(t[1]*r+t[5]*o+t[9]*i+t[13])*n,this.z=(t[2]*r+t[6]*o+t[10]*i+t[14])*n,this},applyQuaternion:function(t){var r=this.x,o=this.y,i=this.z,n=t.x,e=t.y,s=t.z;t=t.w;var p=t*r+e*i-s*o,d=t*o+s*r-n*i,l=t*i+n*o-e*r,r=-n*r-e*o-s*i;return this.x=p*t+r*-n+d*-s-l*-e,this.y=d*t+r*-e+l*-n-p*-s,this.z=l*t+r*-s+p*-e-d*-n,this},project:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.multiplyMatrices(t.projectionMatrix,e.getInverse(t.matrixWorld)),this.applyProjection(e)}}(),unproject:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.multiplyMatrices(t.matrixWorld,e.getInverse(t.projectionMatrix)),this.applyProjection(e)}}(),transformDirection:function(e){var t=this.x,r=this.y,o=this.z;return e=e.elements,this.x=e[0]*t+e[4]*r+e[8]*o,this.y=e[1]*t+e[5]*r+e[9]*o,this.z=e[2]*t+e[6]*r+e[10]*o,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){var t=Math.min;return this.x=t(this.x,e.x),this.y=t(this.y,e.y),this.z=t(this.z,e.z),this},max:function(e){var t=Math.max;return this.x=t(this.x,e.x),this.y=t(this.y,e.y),this.z=t(this.z,e.z),this},clamp:function(e,t){var r=Math.min,a=Math.max;return this.x=a(e.x,r(t.x,this.x)),this.y=a(e.y,r(t.y,this.y)),this.z=a(e.z,r(t.z,this.z)),this},clampScalar:function(){var e,t;return function(r,a){return void 0===e&&(e=new THREE.Vector3,t=new THREE.Vector3),e.set(r,r,r),t.set(a,a,a),this.clamp(e,t)}}(),clampLength:function(e,t){var r=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,r))/r),this},floor:function(){var e=Math.floor;return this.x=e(this.x),this.y=e(this.y),this.z=e(this.z),this},ceil:function(){var e=Math.ceil;return this.x=e(this.x),this.y=e(this.y),this.z=e(this.z),this},round:function(){var e=Math.round;return this.x=e(this.x),this.y=e(this.y),this.z=e(this.z),this},roundToZero:function(){var e=Math.ceil,t=Math.floor;return this.x=0>this.x?e(this.x):t(this.x),this.y=0>this.y?e(this.y):t(this.y),this.z=0>this.z?e(this.z):t(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){var e=Math.abs;return e(this.x)+e(this.y)+e(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e),this},cross:function(t,r){if(void 0!==r)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,r);var a=this.x,o=this.y,i=this.z;return this.x=o*t.z-i*t.y,this.y=i*t.x-a*t.z,this.z=a*t.y-o*t.x,this},crossVectors:function(t,r){var a=t.x,o=t.y,i=t.z,e=r.x,n=r.y,s=r.z;return this.x=o*s-i*n,this.y=i*e-a*s,this.z=a*n-o*e,this},projectOnVector:function(){var e,t;return function(r){return void 0===e&&(e=new THREE.Vector3),e.copy(r).normalize(),t=this.dot(e),this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){return e=this.dot(e)/(this.length()*e.length()),Math.acos(THREE.Math.clamp(e,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return e=this.z-e.z,t*t+r*r+e*e},setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},setFromMatrixPosition:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setFromMatrixScale:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),r=this.set(e.elements[4],e.elements[5],e.elements[6]).length();return e=this.set(e.elements[8],e.elements[9],e.elements[10]).length(),this.x=t,this.y=r,this.z=e,this},setFromMatrixColumn:function(e,t){var r=4*e,a=t.elements;return this.x=a[r],this.y=a[r+1],this.z=a[r+2],this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromAttribute:function(e,t,r){return void 0===r&&(r=0),t=t*e.itemSize+r,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this}},THREE.Vector4=function(e,t,r,a){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0===a?1:a},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,r,a){return this.x=e,this.y=t,this.z=r,this.w=a,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e);}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0===e.w?1:e.w,this},add:function(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this):(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this):(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e,this.w*=e):this.w=this.z=this.y=this.x=0,this},applyMatrix4:function(t){var r=this.x,o=this.y,i=this.z,n=this.w;return t=t.elements,this.x=t[0]*r+t[4]*o+t[8]*i+t[12]*n,this.y=t[1]*r+t[5]*o+t[9]*i+t[13]*n,this.z=t[2]*r+t[6]*o+t[10]*i+t[14]*n,this.w=t[3]*r+t[7]*o+t[11]*i+t[15]*n,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1E-4>t?(this.x=1,this.z=this.y=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(t){var r=Math.abs,o=Math.sqrt,i,n,s;t=t.elements;var p=t[0];s=t[4];var m=t[8],u=t[1],y=t[5],f=t[9];n=t[2],i=t[6];var x=t[10];return .01>r(s-u)&&.01>r(m-n)&&.01>r(f-i)?.1>r(s+u)&&.1>r(m+n)&&.1>r(f+i)&&.1>r(p+y+x-3)?(this.set(1,0,0,0),this):(t=Math.PI,p=(p+1)/2,y=(y+1)/2,x=(x+1)/2,s=(s+u)/4,m=(m+n)/4,f=(f+i)/4,p>y&&p>x?.01>p?(i=0,s=n=.707106781):(i=o(p),n=s/i,s=m/i):y>x?.01>y?(i=.707106781,n=0,s=.707106781):(n=o(y),i=s/n,s=f/n):.01>x?(n=i=.707106781,s=0):(s=o(x),i=m/s,n=f/s),this.set(i,n,s,t),this):(t=o((i-f)*(i-f)+(m-n)*(m-n)+(u-s)*(u-s)),.001>r(t)&&(t=1),this.x=(i-f)/t,this.y=(m-n)/t,this.z=(u-s)/t,this.w=Math.acos((p+y+x-1)/2),this)},min:function(e){var t=Math.min;return this.x=t(this.x,e.x),this.y=t(this.y,e.y),this.z=t(this.z,e.z),this.w=t(this.w,e.w),this},max:function(e){var t=Math.max;return this.x=t(this.x,e.x),this.y=t(this.y,e.y),this.z=t(this.z,e.z),this.w=t(this.w,e.w),this},clamp:function(e,t){var r=Math.min,a=Math.max;return this.x=a(e.x,r(t.x,this.x)),this.y=a(e.y,r(t.y,this.y)),this.z=a(e.z,r(t.z,this.z)),this.w=a(e.w,r(t.w,this.w)),this},clampScalar:function(){var e,t;return function(r,a){return void 0===e&&(e=new THREE.Vector4,t=new THREE.Vector4),e.set(r,r,r,r),t.set(a,a,a,a),this.clamp(e,t)}}(),floor:function(){var e=Math.floor;return this.x=e(this.x),this.y=e(this.y),this.z=e(this.z),this.w=e(this.w),this},ceil:function(){var e=Math.ceil;return this.x=e(this.x),this.y=e(this.y),this.z=e(this.z),this.w=e(this.w),this},round:function(){var e=Math.round;return this.x=e(this.x),this.y=e(this.y),this.z=e(this.z),this.w=e(this.w),this},roundToZero:function(){var e=Math.ceil,t=Math.floor;return this.x=0>this.x?e(this.x):t(this.x),this.y=0>this.y?e(this.y):t(this.y),this.z=0>this.z?e(this.z):t(this.z),this.w=0>this.w?e(this.w):t(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){var e=Math.abs;return e(this.x)+e(this.y)+e(this.z)+e(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e),this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromAttribute:function(e,t,r){return void 0===r&&(r=0),t=t*e.itemSize+r,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this.w=e.array[t+3],this}},THREE.Euler=function(e,t,r,a){this._x=e||0,this._y=t||0,this._z=r||0,this._order=a||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e,this.onChangeCallback()},set:function(e,t,r,a){return this._x=e,this._y=t,this._z=r,this._order=a||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,r,o){var i=Math.atan2,n=Math.asin,s=Math.abs,c=THREE.Math.clamp,d=t.elements;t=d[0];var u=d[4],g=d[8],y=d[1],h=d[5],l=d[9],f=d[2],m=d[6],d=d[10];return r=r||this._order,"XYZ"===r?(this._y=n(c(g,-1,1)),.99999>s(g)?(this._x=i(-l,d),this._z=i(-u,t)):(this._x=i(m,h),this._z=0)):"YXZ"===r?(this._x=n(-c(l,-1,1)),.99999>s(l)?(this._y=i(g,d),this._z=i(y,h)):(this._y=i(-f,t),this._z=0)):"ZXY"===r?(this._x=n(c(m,-1,1)),.99999>s(m)?(this._y=i(-f,d),this._z=i(-u,h)):(this._y=0,this._z=i(y,t))):"ZYX"===r?(this._y=n(-c(f,-1,1)),.99999>s(f)?(this._x=i(m,d),this._z=i(y,t)):(this._x=0,this._z=i(-u,h))):"YZX"===r?(this._z=n(c(y,-1,1)),.99999>s(y)?(this._x=i(-l,h),this._y=i(-f,t)):(this._x=0,this._y=i(g,d))):"XZY"===r?(this._z=n(-c(u,-1,1)),.99999>s(u)?(this._x=i(m,h),this._y=i(g,t)):(this._x=i(-l,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+r),this._order=r,!1!==o&&this.onChangeCallback(),this},setFromQuaternion:function(){var e;return function(t,r,a){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(e,r,a),this}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},THREE.Line3=function(e,t){this.start=void 0===e?new THREE.Vector3:e,this.end=void 0===t?new THREE.Vector3:t},THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){return(e||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var r=t||new THREE.Vector3;return this.delta(r).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var t=new THREE.Vector3,r=new THREE.Vector3;return function(a,o){t.subVectors(a,this.start),r.subVectors(this.end,this.start);var i=r.dot(r),i=r.dot(t)/i;return o&&(i=THREE.Math.clamp(i,0,1)),i}}(),closestPointToPoint:function(e,t,r){return e=this.closestPointToPointParameter(e,t),r=r||new THREE.Vector3,this.delta(r).multiplyScalar(e).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}},THREE.Box2=function(e,t){this.min=void 0===e?new THREE.Vector2(1/0,1/0):e,this.max=void 0===t?new THREE.Vector2(-Infinity,-Infinity):t},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,r){var a=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(a),this.max.copy(t).add(a),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-Infinity,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return!!(this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y)},getParameter:function(e,t){return(t||new THREE.Vector2).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},THREE.Box3=function(e,t){this.min=void 0===e?new THREE.Vector3(1/0,1/0,1/0):e,this.max=void 0===t?new THREE.Vector3(-Infinity,-Infinity,-Infinity):t},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,r){var a=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(a),this.max.copy(t).add(a),this}}(),setFromObject:function(){var t=new THREE.Vector3;return function(e){var r=this;return e.updateMatrixWorld(!0),this.makeEmpty(),e.traverse(function(a){var o=a.geometry;if(void 0!==o)if(o instanceof THREE.Geometry)for(var i=o.vertices,o=0,n=i.length;o<n;o++)t.copy(i[o]),t.applyMatrix4(a.matrixWorld),r.expandByPoint(t);else if(o instanceof THREE.BufferGeometry&&void 0!==o.attributes.position)for(i=o.attributes.position.array,o=0,n=i.length;o<n;o+=3)t.set(i[o],i[o+1],i[o+2]),t.applyMatrix4(a.matrixWorld),r.expandByPoint(t)}),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-Infinity,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return!!(this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z)},getParameter:function(e,t){return(t||new THREE.Vector3).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},clampPoint:function(e,t){return(t||new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){return t=t||new THREE.Sphere,t.center=this.center(),t.radius=.5*this.size(e).length(),t}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(t,r,a,o,i,e,n,s,p){var l=this.elements;return l[0]=t,l[3]=r,l[6]=a,l[1]=o,l[4]=i,l[7]=e,l[2]=n,l[5]=s,l[8]=p,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return new this.constructor().fromArray(this.elements)},copy:function(e){return e=e.elements,this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToVector3Array:function(){var t;return function(r,a,o){void 0===t&&(t=new THREE.Vector3),void 0===a&&(a=0),void 0===o&&(o=r.length);for(var i=0;i<o;i+=3,a+=3)t.fromArray(r,a),t.applyMatrix3(this),t.toArray(r,a);return r}}(),applyToBuffer:function(){var t;return function(r,a,o){void 0===t&&(t=new THREE.Vector3),void 0===a&&(a=0),void 0===o&&(o=r.length/r.itemSize);for(var i=0;i<o;i++,a++)t.x=r.getX(a),t.y=r.getY(a),t.z=r.getZ(a),t.applyMatrix3(this),r.setXYZ(t.x,t.y,t.z);return r}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var t=this.elements,r=t[0],o=t[1],i=t[2],n=t[3],e=t[4],s=t[5],p=t[6],d=t[7],t=t[8];return r*e*t-r*s*d-o*n*t+o*s*p+i*n*d-i*e*p},getInverse:function(e,t){var r=e.elements,a=this.elements;if(a[0]=r[10]*r[5]-r[6]*r[9],a[1]=-r[10]*r[1]+r[2]*r[9],a[2]=r[6]*r[1]-r[2]*r[5],a[3]=-r[10]*r[4]+r[6]*r[8],a[4]=r[10]*r[0]-r[2]*r[8],a[5]=-r[6]*r[0]+r[2]*r[4],a[6]=r[9]*r[4]-r[5]*r[8],a[7]=-r[9]*r[0]+r[1]*r[8],a[8]=r[5]*r[0]-r[1]*r[4],r=r[0]*a[0]+r[1]*a[3]+r[2]*a[6],0===r){if(t)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/r),this},transpose:function(){var e=this.elements,t;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]}},THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(r,a,o,i,d,e,c,u,h,l,g,m,p,n,y,s){var t=this.elements;return t[0]=r,t[4]=a,t[8]=o,t[12]=i,t[1]=d,t[5]=e,t[9]=c,t[13]=u,t[2]=h,t[6]=l,t[10]=g,t[14]=m,t[3]=p,t[7]=n,t[11]=y,t[15]=s,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return new THREE.Matrix4().fromArray(this.elements)},copy:function(e){return this.elements.set(e.elements),this},extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},copyPosition:function(e){var t=this.elements;return e=e.elements,t[12]=e[12],t[13]=e[13],t[14]=e[14],this},extractBasis:function(e,t,r){var a=this.elements;return e.set(a[0],a[1],a[2]),t.set(a[4],a[5],a[6]),r.set(a[8],a[9],a[10]),this},makeBasis:function(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this},extractRotation:function(){var t;return function(r){void 0===t&&(t=new THREE.Vector3);var a=this.elements;r=r.elements;var o=1/t.set(r[0],r[1],r[2]).length(),i=1/t.set(r[4],r[5],r[6]).length(),e=1/t.set(r[8],r[9],r[10]).length();return a[0]=r[0]*o,a[1]=r[1]*o,a[2]=r[2]*o,a[4]=r[4]*i,a[5]=r[5]*i,a[6]=r[6]*i,a[8]=r[8]*e,a[9]=r[9]*e,a[10]=r[10]*e,this}}(),makeRotationFromEuler:function(t){var r=Math.sin,o=Math.cos;!1==t instanceof THREE.Euler&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var i=this.elements,n=t.x,s=t.y,p=t.z,u=o(n),n=r(n),g=o(s),s=r(s),y=o(p),p=r(p);if("XYZ"===t.order){t=u*y;var h=u*p,f=n*y,x=n*p;i[0]=g*y,i[4]=-g*p,i[8]=s,i[1]=h+f*s,i[5]=t-x*s,i[9]=-n*g,i[2]=x-t*s,i[6]=f+h*s,i[10]=u*g}else"YXZ"===t.order?(t=g*y,h=g*p,f=s*y,x=s*p,i[0]=t+x*n,i[4]=f*n-h,i[8]=u*s,i[1]=u*p,i[5]=u*y,i[9]=-n,i[2]=h*n-f,i[6]=x+t*n,i[10]=u*g):"ZXY"===t.order?(t=g*y,h=g*p,f=s*y,x=s*p,i[0]=t-x*n,i[4]=-u*p,i[8]=f+h*n,i[1]=h+f*n,i[5]=u*y,i[9]=x-t*n,i[2]=-u*s,i[6]=n,i[10]=u*g):"ZYX"===t.order?(t=u*y,h=u*p,f=n*y,x=n*p,i[0]=g*y,i[4]=f*s-h,i[8]=t*s+x,i[1]=g*p,i[5]=x*s+t,i[9]=h*s-f,i[2]=-s,i[6]=n*g,i[10]=u*g):"YZX"===t.order?(t=u*g,h=u*s,f=n*g,x=n*s,i[0]=g*y,i[4]=x-t*p,i[8]=f*p+h,i[1]=p,i[5]=u*y,i[9]=-n*y,i[2]=-s*y,i[6]=h*p+f,i[10]=t-x*p):"XZY"===t.order&&(t=u*g,h=u*s,f=n*g,x=n*s,i[0]=g*y,i[4]=-p,i[8]=s*y,i[1]=t*p+x,i[5]=u*y,i[9]=h*p-f,i[2]=f*p-h,i[6]=n*y,i[10]=x*p+t);return i[3]=0,i[7]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(t){var r=this.elements,o=t.x,i=t.y,n=t.z,s=t.w,p=o+o,u=i+i,y=n+n;t=o*p;var l=o*u,o=o*y,x=i*u,i=i*y,n=n*y,p=s*p,u=s*u,s=s*y;return r[0]=1-(x+n),r[4]=l-s,r[8]=o+u,r[1]=l+s,r[5]=1-(t+n),r[9]=i-p,r[2]=o-u,r[6]=i+p,r[10]=1-(t+x),r[3]=0,r[7]=0,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,this},lookAt:function(){var t,r,o;return function(a,i,e){void 0===t&&(t=new THREE.Vector3),void 0===r&&(r=new THREE.Vector3),void 0===o&&(o=new THREE.Vector3);var n=this.elements;return o.subVectors(a,i).normalize(),0===o.lengthSq()&&(o.z=1),t.crossVectors(e,o).normalize(),0===t.lengthSq()&&(o.x+=1E-4,t.crossVectors(e,o).normalize()),r.crossVectors(o,t),n[0]=t.x,n[4]=r.x,n[8]=o.x,n[1]=t.y,n[5]=r.y,n[9]=o.y,n[2]=t.z,n[6]=r.z,n[10]=o.z,this}}(),multiply:function(e,t){return void 0===t?this.multiplyMatrices(this,e):(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t))},multiplyMatrices:function(r,a){var o=r.elements,i=a.elements,b=this.elements,e=o[0],g=o[4],f=o[8],h=o[12],l=o[1],S=o[5],m=o[9],p=o[13],n=o[2],_=o[6],s=o[10],t=o[14],v=o[3],u=o[7],T=o[11],o=o[15],w=i[0],x=i[4],P=i[8],y=i[12],R=i[1],A=i[5],D=i[9],V=i[13],C=i[2],k=i[6],L=i[10],U=i[14],M=i[3],B=i[7],E=i[11],i=i[15];return b[0]=e*w+g*R+f*C+h*M,b[4]=e*x+g*A+f*k+h*B,b[8]=e*P+g*D+f*L+h*E,b[12]=e*y+g*V+f*U+h*i,b[1]=l*w+S*R+m*C+p*M,b[5]=l*x+S*A+m*k+p*B,b[9]=l*P+S*D+m*L+p*E,b[13]=l*y+S*V+m*U+p*i,b[2]=n*w+_*R+s*C+t*M,b[6]=n*x+_*A+s*k+t*B,b[10]=n*P+_*D+s*L+t*E,b[14]=n*y+_*V+s*U+t*i,b[3]=v*w+u*R+T*C+o*M,b[7]=v*x+u*A+T*k+o*B,b[11]=v*P+u*D+T*L+o*E,b[15]=v*y+u*V+T*U+o*i,this},multiplyToArray:function(e,t,r){var a=this.elements;return this.multiplyMatrices(e,t),r[0]=a[0],r[1]=a[1],r[2]=a[2],r[3]=a[3],r[4]=a[4],r[5]=a[5],r[6]=a[6],r[7]=a[7],r[8]=a[8],r[9]=a[9],r[10]=a[10],r[11]=a[11],r[12]=a[12],r[13]=a[13],r[14]=a[14],r[15]=a[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToVector3Array:function(){var t;return function(r,a,o){void 0===t&&(t=new THREE.Vector3),void 0===a&&(a=0),void 0===o&&(o=r.length);for(var i=0;i<o;i+=3,a+=3)t.fromArray(r,a),t.applyMatrix4(this),t.toArray(r,a);return r}}(),applyToBuffer:function(){var t;return function(r,a,o){void 0===t&&(t=new THREE.Vector3),void 0===a&&(a=0),void 0===o&&(o=r.length/r.itemSize);for(var i=0;i<o;i++,a++)t.x=r.getX(a),t.y=r.getY(a),t.z=r.getZ(a),t.applyMatrix4(this),r.setXYZ(t.x,t.y,t.z);return r}}(),rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},determinant:function(){var t=this.elements,r=t[0],a=t[4],o=t[8],i=t[12],e=t[1],s=t[5],d=t[9],c=t[13],l=t[2],u=t[6],m=t[10],p=t[14];return t[3]*(+i*d*u-o*c*u-i*s*m+a*c*m+o*s*p-a*d*p)+t[7]*(+r*d*p-r*c*m+i*e*m-o*e*p+o*c*l-i*d*l)+t[11]*(+r*c*u-r*s*p-i*e*u+a*e*p+i*s*l-a*c*l)+t[15]*(-o*s*l-r*d*u+r*s*m+o*e*u-a*e*m+a*d*l)},transpose:function(){var e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e},getPosition:function(){var e;return function(){void 0===e&&(e=new THREE.Vector3),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(r,a){var o=this.elements,i=r.elements,y=i[0],e=i[4],g=i[8],f=i[12],h=i[1],l=i[5],x=i[9],m=i[13],p=i[2],n=i[6],b=i[10],s=i[14],t=i[3],v=i[7],u=i[11],i=i[15];if(o[0]=x*s*v-m*b*v+m*n*u-l*s*u-x*n*i+l*b*i,o[4]=f*b*v-g*s*v-f*n*u+e*s*u+g*n*i-e*b*i,o[8]=g*m*v-f*x*v+f*l*u-e*m*u-g*l*i+e*x*i,o[12]=f*x*n-g*m*n-f*l*b+e*m*b+g*l*s-e*x*s,o[1]=m*b*t-x*s*t-m*p*u+h*s*u+x*p*i-h*b*i,o[5]=g*s*t-f*b*t+f*p*u-y*s*u-g*p*i+y*b*i,o[9]=f*x*t-g*m*t-f*h*u+y*m*u+g*h*i-y*x*i,o[13]=g*m*p-f*x*p+f*h*b-y*m*b-g*h*s+y*x*s,o[2]=l*s*t-m*n*t+m*p*v-h*s*v-l*p*i+h*n*i,o[6]=f*n*t-e*s*t-f*p*v+y*s*v+e*p*i-y*n*i,o[10]=e*m*t-f*l*t+f*h*v-y*m*v-e*h*i+y*l*i,o[14]=f*l*p-e*m*p-f*h*n+y*m*n+e*h*s-y*l*s,o[3]=x*n*t-l*b*t-x*p*v+h*b*v+l*p*u-h*n*u,o[7]=e*b*t-g*n*t+g*p*v-y*b*v-e*p*u+y*n*u,o[11]=g*l*t-e*x*t-g*h*v+y*x*v+e*h*u-y*l*u,o[15]=e*x*p-g*l*p+g*h*n-y*x*n-e*h*b+y*l*b,o=y*o[0]+h*o[4]+p*o[8]+t*o[12],0===o){if(a)throw Error("THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0");return console.warn("THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/o),this},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,r=e.x,o=e.y;return e=e.z,t[0]*=r,t[4]*=o,t[8]*=e,t[1]*=r,t[5]*=o,t[9]*=e,t[2]*=r,t[6]*=o,t[10]*=e,t[3]*=r,t[7]*=o,t[11]*=e,this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10]))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,r){var a=Math.cos(r),o=Math.sin(r),i=1-a,e=t.x,n=t.y,s=t.z,p=i*e,l=i*n;return this.set(p*e+a,p*n-o*s,p*s+o*n,0,p*n+o*s,l*n+a,l*s-o*e,0,p*s-o*n,l*s+o*e,i*s*s+a,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},compose:function(e,t,r){return this.makeRotationFromQuaternion(t),this.scale(r),this.setPosition(e),this},decompose:function(){var t,r;return function(a,o,i){void 0===t&&(t=new THREE.Vector3),void 0===r&&(r=new THREE.Matrix4);var e=this.elements,n=t.set(e[0],e[1],e[2]).length(),s=t.set(e[4],e[5],e[6]).length(),p=t.set(e[8],e[9],e[10]).length();0>this.determinant()&&(n=-n),a.x=e[12],a.y=e[13],a.z=e[14],r.elements.set(this.elements),a=1/n;var e=1/s,l=1/p;return r.elements[0]*=a,r.elements[1]*=a,r.elements[2]*=a,r.elements[4]*=e,r.elements[5]*=e,r.elements[6]*=e,r.elements[8]*=l,r.elements[9]*=l,r.elements[10]*=l,o.setFromRotationMatrix(r),i.x=n,i.y=s,i.z=p,this}}(),makeFrustum:function(t,r,a,o,i,e){var n=this.elements;return n[0]=2*i/(r-t),n[4]=0,n[8]=(r+t)/(r-t),n[12]=0,n[1]=0,n[5]=2*i/(o-a),n[9]=(o+a)/(o-a),n[13]=0,n[2]=0,n[6]=0,n[10]=-(e+i)/(e-i),n[14]=-2*e*i/(e-i),n[3]=0,n[7]=0,n[11]=-1,n[15]=0,this},makePerspective:function(t,r,o,i){t=o*Math.tan(THREE.Math.degToRad(.5*t));var n=-t;return this.makeFrustum(n*r,t*r,n,t,o,i)},makeOrthographic:function(t,r,a,o,i,e){var n=this.elements,s=r-t,p=a-o,l=e-i;return n[0]=2/s,n[4]=0,n[8]=0,n[12]=-((r+t)/s),n[1]=0,n[5]=2/p,n[9]=0,n[13]=-((a+o)/p),n[2]=0,n[6]=0,n[10]=-2/l,n[14]=-((e+i)/l),n[3]=0,n[7]=0,n[11]=0,n[15]=1,this},equals:function(e){var t=this.elements;e=e.elements;for(var r=0;16>r;r++)if(t[r]!==e[r])return!1;return!0},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]}},THREE.Ray=function(e,t){this.origin=void 0===e?new THREE.Vector3:e,this.direction=void 0===t?new THREE.Vector3:t},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var r=t||new THREE.Vector3;r.subVectors(e,this.origin);var a=r.dot(this.direction);return 0>a?r.copy(this.origin):r.copy(this.direction).multiplyScalar(a).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(){var e=new THREE.Vector3;return function(t){var r=e.subVectors(t,this.origin).dot(this.direction);return 0>r?this.origin.distanceToSquared(t):(e.copy(this.direction).multiplyScalar(r).add(this.origin),e.distanceToSquared(t))}}(),distanceSqToSegment:function(){var t=Math.min,r=Math.max,o=new THREE.Vector3,a=new THREE.Vector3,i=new THREE.Vector3;return function(s,c,u,g){o.copy(s).add(c).multiplyScalar(.5),a.copy(c).sub(s).normalize(),i.copy(this.origin).sub(o);var y=.5*s.distanceTo(c),f=-this.direction.dot(a),x=i.dot(this.direction),v=-i.dot(a),m=i.lengthSq(),p=Math.abs(1-f*f),n;return 0<p?(s=f*v-x,c=f*x-v,n=y*p,0<=s?c>=-n?c<=n?(y=1/p,s*=y,c*=y,f=s*(s+f*c+2*x)+c*(f*s+c+2*v)+m):(c=y,s=r(0,-(f*c+x)),f=-s*s+c*(c+2*v)+m):(c=-y,s=r(0,-(f*c+x)),f=-s*s+c*(c+2*v)+m):c<=-n?(s=r(0,-(-f*y+x)),c=0<s?-y:t(r(-y,-v),y),f=-s*s+c*(c+2*v)+m):c<=n?(s=0,c=t(r(-y,-v),y),f=c*(c+2*v)+m):(s=r(0,-(f*y+x)),c=0<s?y:t(r(-y,-v),y),f=-s*s+c*(c+2*v)+m)):(c=0<f?-y:y,s=r(0,-(f*c+x)),f=-s*s+c*(c+2*v)+m),u&&u.copy(this.direction).multiplyScalar(s).add(this.origin),g&&g.copy(a).multiplyScalar(c).add(o),f}}(),isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},intersectSphere:function(){var t=new THREE.Vector3;return function(r,a){t.subVectors(r.center,this.origin);var o=t.dot(this.direction),i=t.dot(t)-o*o,n=r.radius*r.radius;return i>n?null:(n=Math.sqrt(n-i),i=o-n,o+=n,0>i&&0>o?null:0>i?this.at(o,a):this.at(i,a))}}(),isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);return!!(0===t||0>e.normal.dot(this.direction)*t)},distanceToPlane:function(e){var t=e.normal.dot(this.direction);return 0===t?0===e.distanceToPoint(this.origin)?0:null:(e=-(this.origin.dot(e.normal)+e.constant)/t,0<=e?e:null)},intersectPlane:function(e,t){var r=this.distanceToPlane(e);return null===r?null:this.at(r,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(t,r){var a,o,i,n,s;o=1/this.direction.x,n=1/this.direction.y,s=1/this.direction.z;var l=this.origin;return(0<=o?(a=(t.min.x-l.x)*o,o*=t.max.x-l.x):(a=(t.max.x-l.x)*o,o*=t.min.x-l.x),0<=n?(i=(t.min.y-l.y)*n,n*=t.max.y-l.y):(i=(t.max.y-l.y)*n,n*=t.min.y-l.y),a>n||i>o)?null:((i>a||a!==a)&&(a=i),(n<o||o!==o)&&(o=n),0<=s?(i=(t.min.z-l.z)*s,s*=t.max.z-l.z):(i=(t.max.z-l.z)*s,s*=t.min.z-l.z),a>s||i>o)?null:((i>a||a!==a)&&(a=i),(s<o||o!==o)&&(o=s),0>o?null:this.at(0<=a?a:o,r))},intersectTriangle:function(){var t=new THREE.Vector3,r=new THREE.Vector3,a=new THREE.Vector3,o=new THREE.Vector3;return function(i,n,s,p,d){if(r.subVectors(n,i),a.subVectors(s,i),o.crossVectors(r,a),n=this.direction.dot(o),0<n){if(p)return null;p=1}else if(0>n)p=-1,n=-n;else return null;return(t.subVectors(this.origin,i),i=p*this.direction.dot(a.crossVectors(t,a)),0>i)?null:(s=p*this.direction.dot(r.cross(t)),0>s||i+s>n)?null:(i=-p*t.dot(o),0>i?null:this.at(i/n,d))}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}},THREE.Sphere=function(e,t){this.center=void 0===e?new THREE.Vector3:e,this.radius=void 0===t?0:t},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var t=new THREE.Box3;return function(r,a){var o=this.center;void 0===a?t.setFromPoints(r).center(o):o.copy(a);for(var i=0,n=0,s=r.length;n<s;n++)i=Math.max(i,o.distanceToSquared(r[n]));return this.radius=Math.sqrt(i),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var r=this.center.distanceToSquared(e),a=t||new THREE.Vector3;return a.copy(e),r>this.radius*this.radius&&(a.sub(this.center).normalize(),a.multiplyScalar(this.radius).add(this.center)),a},getBoundingBox:function(e){return e=e||new THREE.Box3,e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}},THREE.Frustum=function(t,r,a,o,i,e){this.planes=[void 0===t?new THREE.Plane:t,void 0===r?new THREE.Plane:r,void 0===a?new THREE.Plane:a,void 0===o?new THREE.Plane:o,void 0===i?new THREE.Plane:i,void 0===e?new THREE.Plane:e]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(t,r,a,o,i,e){var n=this.planes;return n[0].copy(t),n[1].copy(r),n[2].copy(a),n[3].copy(o),n[4].copy(i),n[5].copy(e),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){for(var t=this.planes,r=0;6>r;r++)t[r].copy(e.planes[r]);return this},setFromMatrix:function(r){var o=this.planes,i=r.elements;r=i[0];var u=i[1],d=i[2],e=i[3],g=i[4],y=i[5],h=i[6],l=i[7],f=i[8],m=i[9],p=i[10],n=i[11],x=i[12],s=i[13],t=i[14],i=i[15];return o[0].setComponents(e-r,l-g,n-f,i-x).normalize(),o[1].setComponents(e+r,l+g,n+f,i+x).normalize(),o[2].setComponents(e+u,l+y,n+m,i+s).normalize(),o[3].setComponents(e-u,l-y,n-m,i-s).normalize(),o[4].setComponents(e-d,l-h,n-p,i-t).normalize(),o[5].setComponents(e+d,l+h,n+p,i+t).normalize(),this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var r=t.geometry;return null===r.boundingSphere&&r.computeBoundingSphere(),e.copy(r.boundingSphere),e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){var t=this.planes,r=e.center;e=-e.radius;for(var o=0;6>o;o++)if(t[o].distanceToPoint(r)<e)return!1;return!0},intersectsBox:function(){var t=new THREE.Vector3,r=new THREE.Vector3;return function(a){for(var o=this.planes,i=0,n;6>i;i++){n=o[i],t.x=0<n.normal.x?a.min.x:a.max.x,r.x=0<n.normal.x?a.max.x:a.min.x,t.y=0<n.normal.y?a.min.y:a.max.y,r.y=0<n.normal.y?a.max.y:a.min.y,t.z=0<n.normal.z?a.min.z:a.max.z,r.z=0<n.normal.z?a.max.z:a.min.z;var s=n.distanceToPoint(t),n=n.distanceToPoint(r);if(0>s&&0>n)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,r=0;6>r;r++)if(0>t[r].distanceToPoint(e))return!1;return!0}},THREE.Plane=function(e,t){this.normal=void 0===e?new THREE.Vector3(1,0,0):e,this.constant=void 0===t?0:t},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,a){return this.normal.set(e,t,r),this.constant=a,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new THREE.Vector3,r=new THREE.Vector3;return function(a,o,i){return o=t.subVectors(i,o).cross(r.subVectors(a,o)).normalize(),this.setFromNormalAndCoplanarPoint(o,a),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start);return e=this.distanceToPoint(e.end),0>t&&0<e||0>e&&0<t},intersectLine:function(){var t=new THREE.Vector3;return function(r,a){var o=a||new THREE.Vector3,i=r.delta(t),e=this.normal.dot(i);if(!(0===e))return e=-(r.start.dot(this.normal)+this.constant)/e,0>e||1<e?void 0:o.copy(i).multiplyScalar(e).add(r.start);else if(0===this.distanceToPoint(r.start))return o.copy(r.start)}}(),coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new THREE.Vector3,r=new THREE.Vector3,a=new THREE.Matrix3;return function(o,i){var e=i||a.getNormalMatrix(o),e=t.copy(this.normal).applyMatrix3(e),n=this.coplanarPoint(r);return n.applyMatrix4(o),this.setFromNormalAndCoplanarPoint(e,n),this}}(),translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}},THREE.Math={generateUUID:function(){var t=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],r=Array(36),a=0,o;return function(){for(var i=0;36>i;i++)8==i||13===i||18===i||23===i?r[i]="-":14===i?r[i]="4":(2>=a&&(a=0|33554432+16777216*Math.random()),o=15&a,a>>=4,r[i]=t[19===i?8|3&o:o]);return r.join("")}}(),clamp:function(e,t,r){return Math.max(t,Math.min(r,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(t,r,a,o,i){return o+(t-r)*(i-o)/(a-r)},smoothstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t),e*e*(3-2*e))},smootherstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t),e*e*e*(e*(6*e-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}(),isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,e++,e}},THREE.Spline=function(t){function r(t,r,o,i,n,e,s){return t=.5*(o-t),i=.5*(i-r),(2*(r-o)+t+i)*s+(-3*(r-o)-2*t-i)*e+t*n+r}var o=Math.floor;this.points=t;var i=[],s={x:0,y:0,z:0},d,c,u,y,x,v,b,S,_;this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return d=(this.points.length-1)*e,c=o(d),u=d-c,i[0]=0===c?c:c-1,i[1]=c,i[2]=c>this.points.length-2?this.points.length-1:c+1,i[3]=c>this.points.length-3?this.points.length-1:c+2,v=this.points[i[0]],b=this.points[i[1]],S=this.points[i[2]],_=this.points[i[3]],y=u*u,x=u*y,s.x=r(v.x,b.x,S.x,_.x,u,y,x),s.y=r(v.y,b.y,S.y,_.y,u,y,x),s.z=r(v.z,b.z,S.z,_.z,u,y,x),s},this.getControlPointsArray=function(){var e=this.points.length,t=[],r,o;for(r=0;r<e;r++)o=this.points[r],t[r]=[o.x,o.y,o.z];return t},this.getLength=function(t){var r=m=m=0,i=new THREE.Vector3,n=new THREE.Vector3,s=[],p=0,m,u,h;for(s[0]=0,t||(t=100),u=this.points.length*t,i.copy(this.points[0]),t=1;t<u;t++)m=t/u,h=this.getPoint(m),n.copy(h),p+=n.distanceTo(i),i.copy(h),m*=this.points.length-1,m=o(m),m!==r&&(s[m]=p,r=m);return s[s.length]=p,{chunks:s,total:p}},this.reparametrizeByArcLength=function(t){var r=[],a=new THREE.Vector3,o=this.getLength(),i,n,s,l,p,m;for(r.push(a.copy(this.points[0]).clone()),i=1;i<this.points.length;i++){for(n=o.chunks[i]-o.chunks[i-1],m=Math.ceil(t*n/o.total),l=(i-1)/(this.points.length-1),p=i/(this.points.length-1),n=1;n<m-1;n++)s=l+1/m*n*(p-l),s=this.getPoint(s),r.push(a.copy(s).clone());r.push(a.copy(this.points[i]).clone())}this.points=r}},THREE.Triangle=function(e,t,r){this.a=void 0===e?new THREE.Vector3:e,this.b=void 0===t?new THREE.Vector3:t,this.c=void 0===r?new THREE.Vector3:r},THREE.Triangle.normal=function(){var t=new THREE.Vector3;return function(r,a,o,i){return i=i||new THREE.Vector3,i.subVectors(o,a),t.subVectors(r,a),i.cross(t),r=i.lengthSq(),0<r?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var t=new THREE.Vector3,r=new THREE.Vector3,a=new THREE.Vector3;return function(o,i,n,s,p){t.subVectors(s,i),r.subVectors(n,i),a.subVectors(o,i),o=t.dot(t),i=t.dot(r),n=t.dot(a);var c=r.dot(r);s=r.dot(a);var m=o*c-i*i;return(p=p||new THREE.Vector3,0==m)?p.set(-2,-1,-1):(m=1/m,c=(c*n-i*s)*m,o=(o*s-i*n)*m,p.set(1-c-o,o,c))}}(),THREE.Triangle.containsPoint=function(){var t=new THREE.Vector3;return function(r,a,o,i){return r=THREE.Triangle.barycoordFromPoint(r,a,o,i,t),0<=r.x&&0<=r.y&&1>=r.x+r.y}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,a){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[a]),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}},THREE.Channels=function(){this.mask=1},THREE.Channels.prototype={constructor:THREE.Channels,set:function(e){this.mask=1<<e},enable:function(e){this.mask|=1<<e},toggle:function(e){this.mask^=1<<e},disable:function(e){this.mask&=~(1<<e)}},THREE.Clock=function(e){this.autoStart=!(void 0!==e)||e,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=self.performance.now(),this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=self.performance.now(),e=.001*(t-this.oldTime);this.oldTime=t,this.elapsedTime+=e}return e}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener,e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var r=this._listeners;return!(void 0===r[e]||-1===r[e].indexOf(t))},removeEventListener:function(e,t){if(void 0!==this._listeners){var r=this._listeners[e];if(void 0!==r){var a=r.indexOf(t);-1!==a&&r.splice(a,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var r=this._listeners[t.type];if(void 0!==r){t.target=this;for(var a=[],o=r.length,i=0;i<o;i++)a[i]=r[i];for(i=0;i<o;i++)a[i].call(this,t)}}}},function(e){function t(e,t){return e.distance-t.distance}function r(e,t,o,i){if(!1!==e.visible&&(e.raycast(t,o),!0===i)){e=e.children,i=0;for(var n=e.length;i<n;i++)r(e[i],t,o,!0)}}e.Raycaster=function(t,r,a,o){this.ray=new e.Ray(t,r),this.near=a||0,this.far=o||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})},e.Raycaster.prototype={constructor:e.Raycaster,linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(t,r){r instanceof e.PerspectiveCamera?(this.ray.origin.setFromMatrixPosition(r.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(r).sub(this.ray.origin).normalize()):r instanceof e.OrthographicCamera?(this.ray.origin.set(t.x,t.y,-1).unproject(r),this.ray.direction.set(0,0,-1).transformDirection(r.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(o,a){var e=[];return r(o,this,e,a),e.sort(t),e},intersectObjects:function(o,a){var e=[];if(!1===Array.isArray(o))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),e;for(var i=0,n=o.length;i<n;i++)r(o[i],this,e,a);return e.sort(t),e}}}(THREE),THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.channels=new THREE.Channels,this.children=[],this.up=THREE.Object3D.DefaultUp.clone();var e=new THREE.Vector3,t=new THREE.Euler,r=new THREE.Quaternion,a=new THREE.Vector3(1,1,1);t.onChange(function(){r.setFromEuler(t,!1)}),r.onChange(function(){t.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:e},rotation:{enumerable:!0,value:t},quaternion:{enumerable:!0,value:r},scale:{enumerable:!0,value:a},modelViewMatrix:{value:new THREE.Matrix4},normalMatrix:{value:new THREE.Matrix3}}),this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=THREE.Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}},THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0),THREE.Object3D.DefaultMatrixAutoUpdate=!0,THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set eulerOrder(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set renderDepth(e){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,r){return e.setFromAxisAngle(t,r),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,r){return e.copy(t).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(r)),this}}(),translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(1<arguments.length){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e instanceof THREE.Object3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(1<arguments.length)for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);t=this.children.indexOf(e),-1!==t&&(e.parent=null,e.dispatchEvent({type:"removed"}),this.children.splice(t,1))},getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(t,r){if(this[t]===r)return this;for(var a=0,o=this.children.length,i;a<o;a++)if(i=this.children[a].getObjectByProperty(t,r),void 0!==i)return i},getWorldPosition:function(e){return e=e||new THREE.Vector3,this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){return r=r||new THREE.Quaternion,this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,r,t),r}}(),getWorldRotation:function(){var e=new THREE.Quaternion;return function(t){return t=t||new THREE.Euler,this.getWorldQuaternion(e),t.setFromQuaternion(e,this.rotation.order,!1)}}(),getWorldScale:function(){var e=new THREE.Vector3,t=new THREE.Quaternion;return function(r){return r=r||new THREE.Vector3,this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,r),r}}(),getWorldDirection:function(){var e=new THREE.Quaternion;return function(t){return t=t||new THREE.Vector3,this.getWorldQuaternion(e),t.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);for(var t=this.children,r=0,a=t.length;r<a;r++)t[r].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var t=this.children,r=0,a=t.length;r<a;r++)t[r].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),(!0===this.matrixWorldNeedsUpdate||!0===e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;t<r;t++)this.children[t].updateMatrixWorld(e)},toJSON:function(t){function r(e){var t=[],r;for(r in e){var a=e[r];delete a.metadata,t.push(a)}return t}var o=void 0===t,i={};o&&(t={geometries:{},materials:{},textures:{},images:{}},i.metadata={version:4.4,type:"Object",generator:"Object3D.toJSON"});var n={};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),n.matrix=this.matrix.toArray(),void 0!==this.geometry&&(void 0===t.geometries[this.geometry.uuid]&&(t.geometries[this.geometry.uuid]=this.geometry.toJSON(t)),n.geometry=this.geometry.uuid),void 0!==this.material&&(void 0===t.materials[this.material.uuid]&&(t.materials[this.material.uuid]=this.material.toJSON(t)),n.material=this.material.uuid),0<this.children.length){n.children=[];for(var e=0;e<this.children.length;e++)n.children.push(this.children[e].toJSON(t).object)}if(o){var o=r(t.geometries),e=r(t.materials),s=r(t.textures);t=r(t.images),0<o.length&&(i.geometries=o),0<e.length&&(i.materials=e),0<s.length&&(i.textures=s),0<t.length&&(i.images=t)}return i.object=n,i},clone:function(e){return new this.constructor().copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.rotationAutoUpdate=e.rotationAutoUpdate,this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var r=0;r<e.children.length;r++)this.add(e.children[r].clone());return this}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Face3=function(t,r,a,o,i,e){this.a=t,this.b=r,this.c=a,this.normal=o instanceof THREE.Vector3?o:new THREE.Vector3,this.vertexNormals=Array.isArray(o)?o:[],this.color=i instanceof THREE.Color?i:new THREE.Color,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=void 0===e?0:e},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){return new this.constructor().copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,r=e.vertexNormals.length;t<r;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(t=0,r=e.vertexColors.length;t<r;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}},THREE.Face4=function(t,r,a,o,i,e,n){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(t,r,a,i,e,n)},THREE.BufferAttribute=function(e,t){this.uuid=THREE.Math.generateUUID(),this.array=e,this.itemSize=t,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0},THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),this.array.length},get count(){return this.array.length/this.itemSize},set needsUpdate(e){!0===e&&this.version++},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.dynamic=e.dynamic,this},copyAt:function(t,r,o){t*=this.itemSize,o*=r.itemSize;for(var i=0,n=this.itemSize;i<n;i++)this.array[t+i]=r.array[o+i];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(t){for(var r=this.array,a=0,o=0,i=t.length,e;o<i;o++)e=t[o],void 0===e&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",o),e=new THREE.Color),r[a++]=e.r,r[a++]=e.g,r[a++]=e.b;return this},copyIndicesArray:function(t){for(var r=this.array,a=0,o=0,i=t.length,e;o<i;o++)e=t[o],r[a++]=e.a,r[a++]=e.b,r[a++]=e.c;return this},copyVector2sArray:function(t){for(var r=this.array,a=0,o=0,i=t.length,e;o<i;o++)e=t[o],void 0===e&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",o),e=new THREE.Vector2),r[a++]=e.x,r[a++]=e.y;return this},copyVector3sArray:function(t){for(var r=this.array,a=0,o=0,i=t.length,e;o<i;o++)e=t[o],void 0===e&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",o),e=new THREE.Vector3),r[a++]=e.x,r[a++]=e.y,r[a++]=e.z;return this},copyVector4sArray:function(t){for(var r=this.array,a=0,o=0,i=t.length,e;o<i;o++)e=t[o],void 0===e&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",o),e=new THREE.Vector4),r[a++]=e.x,r[a++]=e.y,r[a++]=e.z,r[a++]=e.w;return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this},setXYZ:function(e,t,r,o){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=o,this},setXYZW:function(t,r,o,i,n){return t*=this.itemSize,this.array[t+0]=r,this.array[t+1]=o,this.array[t+2]=i,this.array[t+3]=n,this},clone:function(){return new this.constructor().copy(this)}},THREE.Int8Attribute=function(e,t){return new THREE.BufferAttribute(new Int8Array(e),t)},THREE.Uint8Attribute=function(e,t){return new THREE.BufferAttribute(new Uint8Array(e),t)},THREE.Uint8ClampedAttribute=function(e,t){return new THREE.BufferAttribute(new Uint8ClampedArray(e),t)},THREE.Int16Attribute=function(e,t){return new THREE.BufferAttribute(new Int16Array(e),t)},THREE.Uint16Attribute=function(e,t){return new THREE.BufferAttribute(new Uint16Array(e),t)},THREE.Int32Attribute=function(e,t){return new THREE.BufferAttribute(new Int32Array(e),t)},THREE.Uint32Attribute=function(e,t){return new THREE.BufferAttribute(new Uint32Array(e),t)},THREE.Float32Attribute=function(e,t){return new THREE.BufferAttribute(new Float32Array(e),t)},THREE.Float64Attribute=function(e,t){return new THREE.BufferAttribute(new Float64Array(e),t)},THREE.DynamicBufferAttribute=function(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),new THREE.BufferAttribute(e,t).setDynamic(!0)},THREE.InstancedBufferAttribute=function(e,t,r){THREE.BufferAttribute.call(this,e,t),this.meshPerAttribute=r||1},THREE.InstancedBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.InstancedBufferAttribute.prototype.constructor=THREE.InstancedBufferAttribute,THREE.InstancedBufferAttribute.prototype.copy=function(e){return THREE.BufferAttribute.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},THREE.InterleavedBuffer=function(e,t){this.uuid=THREE.Math.generateUUID(),this.array=e,this.stride=t,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0},THREE.InterleavedBuffer.prototype={constructor:THREE.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(e){!0===e&&this.version++},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){this.array=new e.array.constructor(e.array),this.stride=e.stride,this.dynamic=e.dynamic},copyAt:function(t,r,o){t*=this.stride,o*=r.stride;for(var i=0,n=this.stride;i<n;i++)this.array[t+i]=r.array[o+i];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(){return new this.constructor().copy(this)}},THREE.InstancedInterleavedBuffer=function(e,t,r){THREE.InterleavedBuffer.call(this,e,t),this.meshPerAttribute=r||1},THREE.InstancedInterleavedBuffer.prototype=Object.create(THREE.InterleavedBuffer.prototype),THREE.InstancedInterleavedBuffer.prototype.constructor=THREE.InstancedInterleavedBuffer,THREE.InstancedInterleavedBuffer.prototype.copy=function(e){return THREE.InterleavedBuffer.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},THREE.InterleavedBufferAttribute=function(e,t,r){this.uuid=THREE.Math.generateUUID(),this.data=e,this.itemSize=t,this.offset=r},THREE.InterleavedBufferAttribute.prototype={constructor:THREE.InterleavedBufferAttribute,get length(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),this.array.length},get count(){return this.data.array.length/this.data.stride},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this},setXYZ:function(e,t,r,o){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=o,this},setXYZW:function(t,r,o,i,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=r,this.data.array[t+1]=o,this.data.array[t+2]=i,this.data.array[t+3]=n,this}},THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(t){for(var r=new THREE.Matrix3().getNormalMatrix(t),o=0,i=this.vertices.length;o<i;o++)this.vertices[o].applyMatrix4(t);for(o=0,i=this.faces.length;o<i;o++){t=this.faces[o],t.normal.applyMatrix3(r).normalize();for(var n=0,s=t.vertexNormals.length;n<s;n++)t.vertexNormals[n].applyMatrix3(r).normalize()}null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.normalsNeedUpdate=this.verticesNeedUpdate=!0},rotateX:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e;return function(t,r,a){return void 0===e&&(e=new THREE.Matrix4),e.makeTranslation(t,r,a),this.applyMatrix(e),this}}(),scale:function(){var e;return function(t,r,a){return void 0===e&&(e=new THREE.Matrix4),e.makeScale(t,r,a),this.applyMatrix(e),this}}(),lookAt:function(){var e;return function(t){void 0===e&&(e=new THREE.Object3D),e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),fromBufferGeometry:function(r){function a(t,r,a){var i=void 0===u?[]:[f[t].clone(),f[r].clone(),f[a].clone()],n=void 0===y?[]:[o.colors[t].clone(),o.colors[r].clone(),o.colors[a].clone()],i=new THREE.Face3(t,r,a,i,n);o.faces.push(i),void 0!==h&&o.faceVertexUvs[0].push([m[t].clone(),m[r].clone(),m[a].clone()]),void 0!==l&&o.faceVertexUvs[1].push([p[t].clone(),p[r].clone(),p[a].clone()])}var o=this,i=null===r.index?void 0:r.index.array,d=r.attributes,c=d.position.array,u=void 0===d.normal?void 0:d.normal.array,y=void 0===d.color?void 0:d.color.array,h=void 0===d.uv?void 0:d.uv.array,l=void 0===d.uv2?void 0:d.uv2.array;void 0!==l&&(this.faceVertexUvs[1]=[]);for(var f=[],m=[],p=[],n=d=0;d<c.length;d+=3,n+=2)o.vertices.push(new THREE.Vector3(c[d],c[d+1],c[d+2])),void 0!==u&&f.push(new THREE.Vector3(u[d],u[d+1],u[d+2])),void 0!==y&&o.colors.push(new THREE.Color(y[d],y[d+1],y[d+2])),void 0!==h&&m.push(new THREE.Vector2(h[n],h[n+1])),void 0!==l&&p.push(new THREE.Vector2(l[n],l[n+1]));if(void 0===i)for(d=0;d<c.length/3;d+=3)a(d,d+1,d+2);else if(c=r.groups,0<c.length)for(d=0;d<c.length;d++)for(var n=c[d],x=n.start,v=n.count,n=x,x=x+v;n<x;n+=3)a(i[n],i[n+1],i[n+2]);else for(d=0;d<i.length;d+=3)a(i[d],i[d+1],i[d+2]);return this.computeFaceNormals(),null!==r.boundingBox&&(this.boundingBox=r.boundingBox.clone()),null!==r.boundingSphere&&(this.boundingSphere=r.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.translate(e.x,e.y,e.z),e},normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,t=0===t?1:1/t,r=new THREE.Matrix4;return r.set(t,0,0,-t*e.x,0,t,0,-t*e.y,0,0,t,-t*e.z,0,0,0,1),this.applyMatrix(r),this},computeFaceNormals:function(){for(var t=new THREE.Vector3,r=new THREE.Vector3,a=0,o=this.faces.length;a<o;a++){var i=this.faces[a],e=this.vertices[i.a],n=this.vertices[i.b];t.subVectors(this.vertices[i.c],n),r.subVectors(e,n),t.cross(r),t.normalize(),i.normal.copy(t)}},computeVertexNormals:function(t){var r,o,i;for(i=Array(this.vertices.length),r=0,o=this.vertices.length;r<o;r++)i[r]=new THREE.Vector3;if(t){var n=new THREE.Vector3,s=new THREE.Vector3,l,p,m;for(t=0,r=this.faces.length;t<r;t++)o=this.faces[t],l=this.vertices[o.a],p=this.vertices[o.b],m=this.vertices[o.c],n.subVectors(m,p),s.subVectors(l,p),n.cross(s),i[o.a].add(n),i[o.b].add(n),i[o.c].add(n)}else for(t=0,r=this.faces.length;t<r;t++)o=this.faces[t],i[o.a].add(o.normal),i[o.b].add(o.normal),i[o.c].add(o.normal);for(r=0,o=this.vertices.length;r<o;r++)i[r].normalize();for(t=0,r=this.faces.length;t<r;t++)o=this.faces[t],l=o.vertexNormals,3===l.length?(l[0].copy(i[o.a]),l[1].copy(i[o.b]),l[2].copy(i[o.c])):(l[0]=i[o.a].clone(),l[1]=i[o.b].clone(),l[2]=i[o.c].clone())},computeMorphNormals:function(){var t,r,o,i,n;for(o=0,i=this.faces.length;o<i;o++)for(n=this.faces[o],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),t=0,r=n.vertexNormals.length;t<r;t++)n.__originalVertexNormals[t]?n.__originalVertexNormals[t].copy(n.vertexNormals[t]):n.__originalVertexNormals[t]=n.vertexNormals[t].clone();var s=new THREE.Geometry;for(s.faces=this.faces,t=0,r=this.morphTargets.length;t<r;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[],n=this.morphNormals[t].faceNormals;var p=this.morphNormals[t].vertexNormals,m,u;for(o=0,i=this.faces.length;o<i;o++)m=new THREE.Vector3,u={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(m),p.push(u)}for(p=this.morphNormals[t],s.vertices=this.morphTargets[t].vertices,s.computeFaceNormals(),s.computeVertexNormals(),o=0,i=this.faces.length;o<i;o++)n=this.faces[o],m=p.faceNormals[o],u=p.vertexNormals[o],m.copy(n.normal),u.a.copy(n.vertexNormals[0]),u.b.copy(n.vertexNormals[1]),u.c.copy(n.vertexNormals[2])}for(o=0,i=this.faces.length;o<i;o++)n=this.faces[o],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){for(var e=0,t=this.vertices,r=0,o=t.length;r<o;r++)0<r&&(e+=t[r].distanceTo(t[r-1])),this.lineDistances[r]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(r,o,i){if(!1==r instanceof THREE.Geometry)console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",r);else{var u=this.vertices.length,e=this.vertices,y=r.vertices,x=this.faces,h=r.faces,l=this.faceVertexUvs[0],v;r=r.faceVertexUvs[0],void 0===i&&(i=0),void 0!==o&&(v=new THREE.Matrix3().getNormalMatrix(o));for(var S=0,_=y.length,T;S<_;S++)T=y[S].clone(),void 0!==o&&T.applyMatrix4(o),e.push(T);for(S=0,_=h.length;S<_;S++){var y=h[S],M=y.vertexNormals,s=y.vertexColors,T=new THREE.Face3(y.a+u,y.b+u,y.c+u),t;for(T.normal.copy(y.normal),void 0!==v&&T.normal.applyMatrix3(v).normalize(),o=0,e=M.length;o<e;o++)t=M[o].clone(),void 0!==v&&t.applyMatrix3(v).normalize(),T.vertexNormals.push(t);for(T.color.copy(y.color),o=0,e=s.length;o<e;o++)t=s[o],T.vertexColors.push(t.clone());T.materialIndex=y.materialIndex+i,x.push(T)}for(S=0,_=r.length;S<_;S++)if(i=r[S],v=[],void 0!==i){for(o=0,e=i.length;o<e;o++)v.push(i[o].clone());l.push(v)}}},mergeMesh:function(e){!1==e instanceof THREE.Mesh?console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e):(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix))},mergeVertices:function(){var t=Math.round,r={},o=[],i=[],n=10000,s,l,p;for(l=0,p=this.vertices.length;l<p;l++)s=this.vertices[l],s=t(s.x*n)+"_"+t(s.y*n)+"_"+t(s.z*n),void 0===r[s]?(r[s]=l,o.push(this.vertices[l]),i[l]=o.length-1):i[l]=i[r[s]];for(r=[],l=0,p=this.faces.length;l<p;l++)for(n=this.faces[l],n.a=i[n.a],n.b=i[n.b],n.c=i[n.c],n=[n.a,n.b,n.c],s=0;3>s;s++)if(n[s]===n[(s+1)%3]){r.push(l);break}for(l=r.length-1;0<=l;l--)for(n=r[l],this.faces.splice(n,1),i=0,p=this.faceVertexUvs.length;i<p;i++)this.faceVertexUvs[i].splice(n,1);return l=this.vertices.length-o.length,this.vertices=o,l},sortFacesByMaterialIndex:function(){for(var t=this.faces,r=t.length,a=0;a<r;a++)t[a]._id=a;t.sort(function(e,t){return e.materialIndex-t.materialIndex});var o=this.faceVertexUvs[0],i=this.faceVertexUvs[1],e,n;for(o&&o.length===r&&(e=[]),i&&i.length===r&&(n=[]),a=0;a<r;a++){var s=t[a]._id;e&&e.push(o[s]),n&&n.push(i[s])}e&&(this.faceVertexUvs[0]=e),n&&(this.faceVertexUvs[1]=n)},toJSON:function(){function r(e,t,r){return r?e|1<<t:e&~(1<<t)}function a(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0===l[t]?(l[t]=S.length/3,S.push(e.x,e.y,e.z),l[t]):l[t]}function o(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0===m[t]?(m[t]=_.length,_.push(e.getHex()),m[t]):m[t]}function i(e){var t=e.x.toString()+e.y.toString();return void 0===n[t]?(n[t]=p.length/2,p.push(e.x,e.y),n[t]):n[t]}var d={metadata:{version:4.4,type:"Geometry",generator:"Geometry.toJSON"}};if(d.uuid=this.uuid,d.type=this.type,""!==this.name&&(d.name=this.name),void 0!==this.parameters){var e=this.parameters,c;for(c in e)void 0!==e[c]&&(d[c]=e[c]);return d}for(e=[],c=0;c<this.vertices.length;c++){var y=this.vertices[c];e.push(y.x,y.y,y.z)}var y=[],S=[],l={},_=[],m={},p=[],n={};for(c=0;c<this.faces.length;c++){var b=this.faces[c],T=void 0!==this.faceVertexUvs[0][c],M=0<b.normal.length(),E=0<b.vertexNormals.length,u=1!==b.color.r||1!==b.color.g||1!==b.color.b,C=0<b.vertexColors.length,A=0,A=r(A,0,0),A=r(A,1,!1),A=r(A,2,!1),A=r(A,3,T),A=r(A,4,M),A=r(A,5,E),A=r(A,6,u),A=r(A,7,C);y.push(A),y.push(b.a,b.b,b.c),T&&(T=this.faceVertexUvs[0][c],y.push(i(T[0]),i(T[1]),i(T[2]))),M&&y.push(a(b.normal)),E&&(M=b.vertexNormals,y.push(a(M[0]),a(M[1]),a(M[2]))),u&&y.push(o(b.color)),C&&(b=b.vertexColors,y.push(o(b[0]),o(b[1]),o(b[2])))}return d.data={},d.data.vertices=e,d.data.normals=S,0<_.length&&(d.data.colors=_),0<p.length&&(d.data.uvs=[p]),d.data.faces=y,d},clone:function(){return new this.constructor().copy(this)},copy:function(t){this.vertices=[],this.faces=[],this.faceVertexUvs=[[]];for(var r=t.vertices,a=0,o=r.length;a<o;a++)this.vertices.push(r[a].clone());for(r=t.faces,a=0,o=r.length;a<o;a++)this.faces.push(r[a].clone());for(a=0,o=t.faceVertexUvs.length;a<o;a++){r=t.faceVertexUvs[a],void 0===this.faceVertexUvs[a]&&(this.faceVertexUvs[a]=[]);for(var i=0,n=r.length;i<n;i++){for(var s=r[i],p=[],m=0,u=s.length;m<u;m++)p.push(s[m].clone());this.faceVertexUvs[a].push(p)}}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.DirectGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="DirectGeometry",this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingSphere=this.boundingBox=null,this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1},THREE.DirectGeometry.prototype={constructor:THREE.DirectGeometry,computeBoundingBox:THREE.Geometry.prototype.computeBoundingBox,computeBoundingSphere:THREE.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")},computeVertexNormals:function(){console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")},computeGroups:function(t){var r=[],o,i;t=t.faces;for(var n=0,s;n<t.length;n++)s=t[n],s.materialIndex!==i&&(i=s.materialIndex,void 0!==o&&(o.count=3*n-o.start,r.push(o)),o={start:3*n,materialIndex:i});void 0!==o&&(o.count=3*n-o.start,r.push(o)),this.groups=r},fromGeometry:function(r){var a=r.faces,o=r.vertices,i=r.faceVertexUvs,d=i[0]&&0<i[0].length,e=i[1]&&0<i[1].length,c=r.morphTargets,g=c.length;if(0<g){for(var h=[],l=0;l<g;l++)h[l]=[];this.morphTargets.position=h}var y=r.morphNormals,m=y.length;if(0<m){for(var p=[],l=0;l<m;l++)p[l]=[];this.morphTargets.normal=p}for(var n=r.skinIndices,f=r.skinWeights,s=n.length===o.length,t=f.length===o.length,l=0,x;l<a.length;l++){x=a[l],this.vertices.push(o[x.a],o[x.b],o[x.c]);var v=x.vertexNormals;for(3===v.length?this.normals.push(v[0],v[1],v[2]):(v=x.normal,this.normals.push(v,v,v)),v=x.vertexColors,3===v.length?this.colors.push(v[0],v[1],v[2]):(v=x.color,this.colors.push(v,v,v)),!0===d&&(v=i[0][l],void 0===v?(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",l),this.uvs.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)):this.uvs.push(v[0],v[1],v[2])),!0===e&&(v=i[1][l],void 0===v?(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",l),this.uvs2.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)):this.uvs2.push(v[0],v[1],v[2])),v=0;v<g;v++){var b=c[v].vertices;h[v].push(b[x.a],b[x.b],b[x.c])}for(v=0;v<m;v++)b=y[v].vertexNormals[l],p[v].push(b.a,b.b,b.c);s&&this.skinIndices.push(n[x.a],n[x.b],n[x.c]),t&&this.skinWeights.push(f[x.a],f[x.b],f[x.c])}return this.computeGroups(r),this.verticesNeedUpdate=r.verticesNeedUpdate,this.normalsNeedUpdate=r.normalsNeedUpdate,this.colorsNeedUpdate=r.colorsNeedUpdate,this.uvsNeedUpdate=r.uvsNeedUpdate,this.groupsNeedUpdate=r.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.DirectGeometry.prototype),THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingSphere=this.boundingBox=null,this.drawRange={start:0,count:1/0}},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},getIndex:function(){return this.index},setIndex:function(e){this.index=e},addAttribute:function(e,t,r){!1==t instanceof THREE.BufferAttribute&&!1==t instanceof THREE.InterleavedBufferAttribute?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(e,new THREE.BufferAttribute(t,r))):"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t)):this.attributes[e]=t},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){delete this.attributes[e]},get drawcalls(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups},get offsets(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups},addDrawCall:function(e,t,r){void 0!==r&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},addGroup:function(e,t,r){this.groups.push({start:e,count:t,materialIndex:void 0===r?0:r})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToVector3Array(t.array),t.needsUpdate=!0),t=this.attributes.normal,void 0!==t&&(new THREE.Matrix3().getNormalMatrix(e).applyToVector3Array(t.array),t.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere()},rotateX:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e;return function(t,r,a){return void 0===e&&(e=new THREE.Matrix4),e.makeTranslation(t,r,a),this.applyMatrix(e),this}}(),scale:function(){var e;return function(t,r,a){return void 0===e&&(e=new THREE.Matrix4),e.makeScale(t,r,a),this.applyMatrix(e),this}}(),lookAt:function(){var e;return function(t){void 0===e&&(e=new THREE.Object3D),e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.translate(e.x,e.y,e.z),e},setFromObject:function(e){var t=e.geometry;if(e instanceof THREE.Points||e instanceof THREE.Line){e=new THREE.Float32Attribute(3*t.vertices.length,3);var r=new THREE.Float32Attribute(3*t.colors.length,3);this.addAttribute("position",e.copyVector3sArray(t.vertices)),this.addAttribute("color",r.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length&&(e=new THREE.Float32Attribute(t.lineDistances.length,1),this.addAttribute("lineDistance",e.copyArray(t.lineDistances))),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e instanceof THREE.Mesh&&t instanceof THREE.Geometry&&this.fromGeometry(t);return this},updateFromObject:function(e){var t=e.geometry;if(e instanceof THREE.Mesh){var r=t.__directGeometry;if(void 0===r)return this.fromGeometry(t);r.verticesNeedUpdate=t.verticesNeedUpdate,r.normalsNeedUpdate=t.normalsNeedUpdate,r.colorsNeedUpdate=t.colorsNeedUpdate,r.uvsNeedUpdate=t.uvsNeedUpdate,r.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=r}return!0===t.verticesNeedUpdate&&(r=this.attributes.position,void 0!==r&&(r.copyVector3sArray(t.vertices),r.needsUpdate=!0),t.verticesNeedUpdate=!1),!0===t.normalsNeedUpdate&&(r=this.attributes.normal,void 0!==r&&(r.copyVector3sArray(t.normals),r.needsUpdate=!0),t.normalsNeedUpdate=!1),!0===t.colorsNeedUpdate&&(r=this.attributes.color,void 0!==r&&(r.copyColorsArray(t.colors),r.needsUpdate=!0),t.colorsNeedUpdate=!1),t.uvsNeedUpdate&&(r=this.attributes.uv,void 0!==r&&(r.copyVector2sArray(t.uvs),r.needsUpdate=!0),t.uvsNeedUpdate=!1),t.lineDistancesNeedUpdate&&(r=this.attributes.lineDistance,void 0!==r&&(r.copyArray(t.lineDistances),r.needsUpdate=!0),t.lineDistancesNeedUpdate=!1),t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=new THREE.DirectGeometry().fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(t){var r=new Float32Array(3*t.vertices.length);for(var a in this.addAttribute("position",new THREE.BufferAttribute(r,3).copyVector3sArray(t.vertices)),0<t.normals.length&&(r=new Float32Array(3*t.normals.length),this.addAttribute("normal",new THREE.BufferAttribute(r,3).copyVector3sArray(t.normals))),0<t.colors.length&&(r=new Float32Array(3*t.colors.length),this.addAttribute("color",new THREE.BufferAttribute(r,3).copyColorsArray(t.colors))),0<t.uvs.length&&(r=new Float32Array(2*t.uvs.length),this.addAttribute("uv",new THREE.BufferAttribute(r,2).copyVector2sArray(t.uvs))),0<t.uvs2.length&&(r=new Float32Array(2*t.uvs2.length),this.addAttribute("uv2",new THREE.BufferAttribute(r,2).copyVector2sArray(t.uvs2))),0<t.indices.length&&(r=new(65535<t.vertices.length?Uint32Array:Uint16Array)(3*t.indices.length),this.setIndex(new THREE.BufferAttribute(r,1).copyIndicesArray(t.indices))),this.groups=t.groups,t.morphTargets){for(var r=[],o=t.morphTargets[a],i=0,n=o.length;i<n;i++){var s=o[i],l=new THREE.Float32Attribute(3*s.length,3);r.push(l.copyVector3sArray(s))}this.morphAttributes[a]=r}return 0<t.skinIndices.length&&(a=new THREE.Float32Attribute(4*t.skinIndices.length,4),this.addAttribute("skinIndex",a.copyVector4sArray(t.skinIndices))),0<t.skinWeights.length&&(a=new THREE.Float32Attribute(4*t.skinWeights.length,4),this.addAttribute("skinWeight",a.copyVector4sArray(t.skinWeights))),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){var t=new THREE.Vector3;return function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var r=this.attributes.position.array;if(r){var a=this.boundingBox;a.makeEmpty();for(var o=0,i=r.length;o<i;o+=3)t.fromArray(r,o),a.expandByPoint(t)}(void 0===r||0===r.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error("THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.",this)}}(),computeBoundingSphere:function(){var t=new THREE.Box3,r=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var a=this.attributes.position.array;if(a){t.makeEmpty();for(var o=this.boundingSphere.center,i=0,n=a.length;i<n;i+=3)r.fromArray(a,i),t.expandByPoint(r);t.center(o);for(var s=0,i=0,n=a.length;i<n;i+=3)r.fromArray(a,i),s=Math.max(s,o.distanceToSquared(r));this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error("THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.",this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var r=this.index,o=this.attributes,i=this.groups;if(o.position){var c=o.position.array;if(void 0===o.normal)this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(c.length),3));else for(var d=o.normal.array,u=0,y=d.length;u<y;u++)d[u]=0;var d=o.normal.array,x=new THREE.Vector3,m=new THREE.Vector3,p=new THREE.Vector3,n=new THREE.Vector3,b=new THREE.Vector3,s,S,_;if(r){r=r.array,0===i.length&&this.addGroup(0,r.length);for(var T=0,M=i.length;T<M;++T)for(u=i[T],y=u.start,s=u.count,u=y,y+=s;u<y;u+=3)s=3*r[u+0],S=3*r[u+1],_=3*r[u+2],x.fromArray(c,s),m.fromArray(c,S),p.fromArray(c,_),n.subVectors(p,m),b.subVectors(x,m),n.cross(b),d[s]+=n.x,d[s+1]+=n.y,d[s+2]+=n.z,d[S]+=n.x,d[S+1]+=n.y,d[S+2]+=n.z,d[_]+=n.x,d[_+1]+=n.y,d[_+2]+=n.z}else for(u=0,y=c.length;u<y;u+=9)x.fromArray(c,u),m.fromArray(c,u+3),p.fromArray(c,u+6),n.subVectors(p,m),b.subVectors(x,m),n.cross(b),d[u]=n.x,d[u+1]=n.y,d[u+2]=n.z,d[u+3]=n.x,d[u+4]=n.y,d[u+5]=n.z,d[u+6]=n.x,d[u+7]=n.y,d[u+8]=n.z;this.normalizeNormals(),o.normal.needsUpdate=!0}},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},merge:function(t,r){if(!1==t instanceof THREE.BufferGeometry)console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);else{void 0===r&&(r=0);var a=this.attributes,o;for(o in a)if(void 0!==t.attributes[o])for(var i=a[o].array,e=t.attributes[o],n=e.array,s=0,e=e.itemSize*r;s<n.length;s++,e++)i[e]=n[s];return this}},normalizeNormals:function(){for(var t=this.attributes.normal.array,r=0,a=t.length,o,i,n;r<a;r+=3)o=t[r],i=t[r+1],n=t[r+2],o=1/Math.sqrt(o*o+i*i+n*n),t[r]*=o,t[r+1]*=o,t[r+2]*=o},toJSON:function(){var t={metadata:{version:4.4,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var r=this.parameters,a;for(a in r)void 0!==r[a]&&(t[a]=r[a]);return t}t.data={attributes:{}};var o=this.index;for(a in null!==o&&(r=Array.prototype.slice.call(o.array),t.data.index={type:o.array.constructor.name,array:r}),o=this.attributes,o){var i=o[a],r=Array.prototype.slice.call(i.array);t.data.attributes[a]={itemSize:i.itemSize,type:i.array.constructor.name,array:r}}return a=this.groups,0<a.length&&(t.data.groups=JSON.parse(JSON.stringify(a))),a=this.boundingSphere,null!==a&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t},clone:function(){return new this.constructor().copy(this)},copy:function(e){var t=e.index;null!==t&&this.setIndex(t.clone());var t=e.attributes,r;for(r in t)this.addAttribute(r,t[r].clone());for(e=e.groups,r=0,t=e.length;r<t;r++){var o=e[r];this.addGroup(o.start,o.count)}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.BufferGeometry.MaxIndex=65535,THREE.InstancedBufferGeometry=function(){THREE.BufferGeometry.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0},THREE.InstancedBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.InstancedBufferGeometry.prototype.constructor=THREE.InstancedBufferGeometry,THREE.InstancedBufferGeometry.prototype.addGroup=function(e,t,r){this.groups.push({start:e,count:t,instances:r})},THREE.InstancedBufferGeometry.prototype.copy=function(e){var t=e.index;null!==t&&this.setIndex(t.clone());var t=e.attributes,r;for(r in t)this.addAttribute(r,t[r].clone());for(e=e.groups,r=0,t=e.length;r<t;r++){var o=e[r];this.addGroup(o.start,o.count,o.instances)}return this},THREE.EventDispatcher.prototype.apply(THREE.InstancedBufferGeometry.prototype),THREE.AnimationAction=function(t,r,a,o,i){if(void 0===t)throw Error("clip is null");this.clip=t,this.localRoot=null,this.startTime=r||0,this.timeScale=a||1,this.weight=o||1,this.loop=i||THREE.LoopRepeat,this.loopCount=0,this.enabled=!0,this.actionTime=-this.startTime,this.clipTime=0,this.propertyBindings=[]},THREE.AnimationAction.prototype={constructor:THREE.AnimationAction,setLocalRoot:function(e){return this.localRoot=e,this},updateTime:function(e){var t=this.clipTime,r=this.loopCount,o=this.clip.duration;return(this.actionTime+=e,this.loop===THREE.LoopOnce)?(this.loopCount=0,this.clipTime=Math.min(Math.max(this.actionTime,0),o),this.clipTime!==t&&(this.clipTime===o?this.mixer.dispatchEvent({type:"finished",action:this,direction:1}):0===this.clipTime&&this.mixer.dispatchEvent({type:"finished",action:this,direction:-1})),this.clipTime):(this.loopCount=Math.floor(this.actionTime/o),e=this.actionTime-this.loopCount*o,e%=o,this.loop==THREE.LoopPingPong&&1===Math.abs(this.loopCount%2)&&(e=o-e),this.clipTime=e,this.loopCount!==r&&this.mixer.dispatchEvent({type:"loop",action:this,loopDelta:this.loopCount-this.loopCount}),this.clipTime)},syncWith:function(e){return this.actionTime=e.actionTime,this.timeScale=e.timeScale,this},warpToDuration:function(e){return this.timeScale=this.clip.duration/e,this},init:function(e){return this.clipTime=e-this.startTime,this},update:function(e){return this.updateTime(e),this.clip.getAt(this.clipTime)},getTimeScaleAt:function(e){return this.timeScale.getAt?this.timeScale.getAt(e):this.timeScale},getWeightAt:function(e){return this.weight.getAt?this.weight.getAt(e):this.weight}},THREE.AnimationClip=function(e,t,r){if(this.name=e,this.tracks=r,this.duration=void 0===t?-1:t,0>this.duration)for(e=0;e<this.tracks.length;e++)t=this.tracks[e],this.duration=Math.max(t.keys[t.keys.length-1].time);this.trim(),this.optimize(),this.results=[]},THREE.AnimationClip.prototype={constructor:THREE.AnimationClip,getAt:function(e){e=Math.max(0,Math.min(e,this.duration));for(var t=0;t<this.tracks.length;t++)this.results[t]=this.tracks[t].getAt(e);return this.results},trim:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},optimize:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}},THREE.AnimationClip.CreateFromMorphTargetSequence=function(t,r,a){for(var o=r.length,i=[],e=0,n;e<o;e++)n=[],n.push({time:(e+o-1)%o,value:0}),n.push({time:e,value:1}),n.push({time:(e+1)%o,value:0}),n.sort(THREE.KeyframeTrack.keyComparer),0===n[0].time&&n.push({time:o,value:n[0].value}),i.push(new THREE.NumberKeyframeTrack(".morphTargetInfluences["+r[e].name+"]",n).scale(1/a));return new THREE.AnimationClip(t,-1,i)},THREE.AnimationClip.findByName=function(e,t){for(var r=0;r<e.length;r++)if(e[r].name===t)return e[r];return null},THREE.AnimationClip.CreateClipsFromMorphTargetSequences=function(t,r){for(var a={},o=/^([\w-]*?)([\d]+)$/,i=0,n=t.length;i<n;i++){var s=t[i],p=s.name.match(o);if(p&&1<p.length){var c=p[1];(p=a[c])||(a[c]=p=[]),p.push(s)}}for(c in o=[],a)o.push(THREE.AnimationClip.CreateFromMorphTargetSequence(c,a[c],r));return o},THREE.AnimationClip.parse=function(e){for(var t=[],r=0;r<e.tracks.length;r++)t.push(THREE.KeyframeTrack.parse(e.tracks[r]).scale(1/e.fps));return new THREE.AnimationClip(e.name,e.duration,t)},THREE.AnimationClip.parseAnimation=function(t,r,o){if(!t)return console.error("  no animation in JSONLoader data"),null;var i=function(t,r,a,o,i){for(var e=[],n=0,s;n<r.length;n++)s=r[n],void 0!==s[a]&&e.push({time:s.time,value:i(s)});return 0<e.length?new o(t,e):null},d=[],e=t.name||"default",c=t.length||-1,u=t.fps||30;t=t.hierarchy||[];for(var h=0,g;h<t.length;h++)if(g=t[h].keys,g&&0!=g.length)if(g[0].morphTargets){for(var c={},y=0;y<g.length;y++)if(g[y].morphTargets)for(var x=0;x<g[y].morphTargets.length;x++)c[g[y].morphTargets[x]]=-1;for(var v in c){for(var n=[],x=0,b;x<g[y].morphTargets.length;x++)b=g[y],n.push({time:b.time,value:b.morphTarget===v?1:0});d.push(new THREE.NumberKeyframeTrack(o+".morphTargetInfluence["+v+"]",n))}c=c.length*(u||1)}else y=o+".bones["+r[h].name+"]",(x=i(y+".position",g,"pos",THREE.VectorKeyframeTrack,function(e){return new THREE.Vector3().fromArray(e.pos)}))&&d.push(x),(x=i(y+".quaternion",g,"rot",THREE.QuaternionKeyframeTrack,function(e){return e.rot.slerp?e.rot.clone():new THREE.Quaternion().fromArray(e.rot)}))&&d.push(x),(g=i(y+".scale",g,"scl",THREE.VectorKeyframeTrack,function(e){return new THREE.Vector3().fromArray(e.scl)}))&&d.push(g);return 0===d.length?null:new THREE.AnimationClip(e,c,d)},THREE.AnimationMixer=function(e){this.root=e,this.time=0,this.timeScale=1,this.actions=[],this.propertyBindingMap={}},THREE.AnimationMixer.prototype={constructor:THREE.AnimationMixer,addAction:function(t){this.actions.push(t),t.init(this.time),t.mixer=this;for(var r=t.clip.tracks,a=t.localRoot||this.root,o=0;o<r.length;o++){var i=r[o],e=a.uuid+"-"+i.name,n=this.propertyBindingMap[e];void 0===n&&(n=new THREE.PropertyBinding(a,i.name),this.propertyBindingMap[e]=n),t.propertyBindings.push(n),n.referenceCount+=1}},removeAllActions:function(){for(var e=0;e<this.actions.length;e++)this.actions[e].mixer=null;for(var t in this.propertyBindingMap)this.propertyBindingMap[t].unbind();return this.actions=[],this.propertyBindingMap={},this},removeAction:function(t){var r=this.actions.indexOf(t);-1!==r&&(this.actions.splice(r,1),t.mixer=null),r=t.localRoot||this.root,t=t.clip.tracks;for(var o=0;o<t.length;o++){var i=r.uuid+"-"+t[o].name,n=this.propertyBindingMap[i];n.referenceCount-=1,0>=n.referenceCount&&(n.unbind(),delete this.propertyBindingMap[i])}return this},findActionByName:function(e){for(var t=0;t<this.actions.length;t++)if(this.actions[t].name===e)return this.actions[t];return null},play:function(e){return e.startTime=this.time,this.addAction(e),this},fadeOut:function(e,t){var r=[];return r.push({time:this.time,value:1}),r.push({time:this.time+t,value:0}),e.weight=new THREE.NumberKeyframeTrack("weight",r),this},fadeIn:function(e,t){var r=[];return r.push({time:this.time,value:0}),r.push({time:this.time+t,value:1}),e.weight=new THREE.NumberKeyframeTrack("weight",r),this},warp:function(t,r,a,o){var i=[];return i.push({time:this.time,value:r}),i.push({time:this.time+o,value:a}),t.timeScale=new THREE.NumberKeyframeTrack("timeScale",i),this},crossFade:function(t,r,a,o){if(this.fadeOut(t,a),this.fadeIn(r,a),o){o=t.clip.duration/r.clip.duration;var i=1/o;this.warp(t,1,o,a),this.warp(r,i,1,a)}return this},update:function(t){t*=this.timeScale,this.time+=t;for(var r=0;r<this.actions.length;r++){var o=this.actions[r],i=o.getWeightAt(this.time),n=o.getTimeScaleAt(this.time),n=o.update(t*n);if(!(0>=o.weight)&&o.enabled)for(var s=0;s<n.length;s++)o.propertyBindings[s].accumulate(n[s],i)}for(var l in this.propertyBindingMap)this.propertyBindingMap[l].apply();return this}},THREE.EventDispatcher.prototype.apply(THREE.AnimationMixer.prototype),THREE.AnimationUtils={getEqualsFunc:function(e){return e.equals?function(e,t){return e.equals(t)}:function(e,t){return e===t}},clone:function(e){if("object"==typeof e){if(e.clone)return e.clone();console.error("can not figure out how to copy exemplarValue",e)}return e},lerp:function(e,t,r,a){return THREE.AnimationUtils.getLerpFunc(e,a)(e,t,r)},lerp_object:function(e,t,r){return e.lerp(t,r)},slerp_object:function(e,t,r){return e.slerp(t,r)},lerp_number:function(e,t,r){return e*(1-r)+t*r},lerp_boolean:function(e,t,r){return .5>r?e:t},lerp_boolean_immediate:function(e){return e},lerp_string:function(e,t,r){return .5>r?e:t},lerp_string_immediate:function(e){return e},getLerpFunc:function(e,t){if(void 0===e||null===e)throw Error("examplarValue is null");switch(typeof e){case"object":if(e.lerp)return THREE.AnimationUtils.lerp_object;if(e.slerp)return THREE.AnimationUtils.slerp_object;break;case"number":return THREE.AnimationUtils.lerp_number;case"boolean":return t?THREE.AnimationUtils.lerp_boolean:THREE.AnimationUtils.lerp_boolean_immediate;case"string":return t?THREE.AnimationUtils.lerp_string:THREE.AnimationUtils.lerp_string_immediate;}}},THREE.KeyframeTrack=function(e,t){if(void 0===e)throw Error("track name is undefined");if(void 0===t||0===t.length)throw Error("no keys in track named "+e);this.name=e,this.keys=t,this.lastIndex=0,this.validate(),this.optimize()},THREE.KeyframeTrack.prototype={constructor:THREE.KeyframeTrack,getAt:function(e){for(;this.lastIndex<this.keys.length&&e>=this.keys[this.lastIndex].time;)this.lastIndex++;for(;0<this.lastIndex&&e<this.keys[this.lastIndex-1].time;)this.lastIndex--;if(this.lastIndex>=this.keys.length)return this.setResult(this.keys[this.keys.length-1].value),this.result;if(0===this.lastIndex)return this.setResult(this.keys[0].value),this.result;var t=this.keys[this.lastIndex-1];if(this.setResult(t.value),t.constantToNext)return this.result;var r=this.keys[this.lastIndex];return this.result=this.lerpValues(this.result,r.value,(e-t.time)/(r.time-t.time))},shift:function(e){if(0!==e)for(var t=0;t<this.keys.length;t++)this.keys[t].time+=e;return this},scale:function(e){if(1!==e)for(var t=0;t<this.keys.length;t++)this.keys[t].time*=e;return this},trim:function(t,r){for(var a=0,o=1;o<this.keys.length;o++)this.keys[o]<=t&&a++;for(var i=0,o=this.keys.length-2;0<o&&this.keys[o]>=r;o++)i++;return 0<a+i&&(this.keys=this.keys.splice(a,this.keys.length-i-a)),this},validate:function(){var e=null;if(0===this.keys.length)console.error("  track is empty, no keys",this);else{for(var t=0,r;t<this.keys.length;t++){if(r=this.keys[t],!r)return void console.error("  key is null in track",this,t);if("number"!=typeof r.time||isNaN(r.time))return void console.error("  key.time is not a valid number",this,t,r);if(void 0===r.value||null===r.value)return void console.error("  key.value is null in track",this,t,r);if(e&&e.time>r.time)return void console.error("  key.time is less than previous key time, out of order keys",this,t,r,e);e=r}return this}},optimize:function(){var t=[],r=this.keys[0];t.push(r),THREE.AnimationUtils.getEqualsFunc(r.value);for(var a=1;a<this.keys.length-1;a++){var o=this.keys[a],i=this.keys[a+1];r.time===o.time||this.compareValues(r.value,o.value)&&this.compareValues(o.value,i.value)||(r.constantToNext=this.compareValues(r.value,o.value),t.push(o),r=o)}return t.push(this.keys[this.keys.length-1]),this.keys=t,this}},THREE.KeyframeTrack.keyComparer=function(e,t){return e.time-t.time},THREE.KeyframeTrack.parse=function(e){if(void 0===e.type)throw Error("track type undefined, can not parse");return THREE.KeyframeTrack.GetTrackTypeForTypeName(e.type).parse(e)},THREE.KeyframeTrack.GetTrackTypeForTypeName=function(e){switch(e.toLowerCase()){case"vector":case"vector2":case"vector3":case"vector4":return THREE.VectorKeyframeTrack;case"quaternion":return THREE.QuaternionKeyframeTrack;case"integer":case"scalar":case"double":case"float":case"number":return THREE.NumberKeyframeTrack;case"bool":case"boolean":return THREE.BooleanKeyframeTrack;case"string":return THREE.StringKeyframeTrack;}throw Error("Unsupported typeName: "+e)},THREE.PropertyBinding=function(e,t){this.rootNode=e,this.trackName=t,this.referenceCount=0,this.originalValue=null;var r=THREE.PropertyBinding.parseTrackName(t);this.directoryName=r.directoryName,this.nodeName=r.nodeName,this.objectName=r.objectName,this.objectIndex=r.objectIndex,this.propertyName=r.propertyName,this.propertyIndex=r.propertyIndex,this.node=THREE.PropertyBinding.findNode(e,this.nodeName)||e,this.cumulativeValue=null,this.cumulativeWeight=0},THREE.PropertyBinding.prototype={constructor:THREE.PropertyBinding,reset:function(){this.cumulativeValue=null,this.cumulativeWeight=0},accumulate:function(e,t){this.isBound||this.bind(),0===this.cumulativeWeight?0<t&&(null===this.cumulativeValue&&(this.cumulativeValue=THREE.AnimationUtils.clone(e)),this.cumulativeWeight=t):(this.cumulativeValue=this.lerpValue(this.cumulativeValue,e,t/(this.cumulativeWeight+t)),this.cumulativeWeight+=t)},unbind:function(){this.isBound&&(this.setValue(this.originalValue),this.triggerDirty=this.equalsValue=this.lerpValue=this.getValue=this.setValue=null,this.isBound=!1)},bind:function(){if(!this.isBound){var e=this.node;if(e){if(this.objectName){if("materials"===this.objectName){if(!e.material)return void console.error("  can not bind to material as node does not have a material",this);if(!e.material.materials)return void console.error("  can not bind to material.materials as node.material does not have a materials array",this);e=e.material.materials}else if("bones"===this.objectName){if(!e.skeleton)return void console.error("  can not bind to bones as node does not have a skeleton",this);for(var e=e.skeleton.bones,t=0;t<e.length;t++)if(e[t].name===this.objectIndex){this.objectIndex=t;break}}else{if(void 0===e[this.objectName])return void console.error("  can not bind to objectName of node, undefined",this);e=e[this.objectName]}if(void 0!==this.objectIndex){if(void 0===e[this.objectIndex])return void console.error("  trying to bind to objectIndex of objectName, but is undefined:",this,e);e=e[this.objectIndex]}}var r=e[this.propertyName];if(r){if(void 0!==this.propertyIndex){if("morphTargetInfluences"===this.propertyName)for(e.geometry||console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry",this),e.geometry.morphTargets||console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets",this),t=0;t<this.node.geometry.morphTargets.length;t++)if(e.geometry.morphTargets[t].name===this.propertyIndex){this.propertyIndex=t;break}this.setValue=function(e){return!this.equalsValue(r[this.propertyIndex],e)&&(r[this.propertyIndex]=e,!0)},this.getValue=function(){return r[this.propertyIndex]}}else r.copy?(this.setValue=function(e){return!this.equalsValue(r,e)&&(r.copy(e),!0)},this.getValue=function(){return r}):(this.setValue=function(t){return!this.equalsValue(e[this.propertyName],t)&&(e[this.propertyName]=t,!0)},this.getValue=function(){return e[this.propertyName]});void 0===e.needsUpdate?void 0!==e.matrixWorldNeedsUpdate&&(this.triggerDirty=function(){e.matrixWorldNeedsUpdate=!0}):this.triggerDirty=function(){this.node.needsUpdate=!0},this.originalValue=this.getValue(),this.equalsValue=THREE.AnimationUtils.getEqualsFunc(this.originalValue),this.lerpValue=THREE.AnimationUtils.getLerpFunc(this.originalValue,!0),this.isBound=!0}else console.error("  trying to update property for track: "+this.nodeName+"."+this.propertyName+" but it wasn't found.",e)}else console.error("  trying to update node for track: "+this.trackName+" but it wasn't found.")}},apply:function(){if(this.isBound||this.bind(),0<this.cumulativeWeight){if(1>this.cumulativeWeight){var e=1-this.cumulativeWeight;this.cumulativeValue=this.lerpValue(this.cumulativeValue,this.originalValue,e/(this.cumulativeWeight+e))}this.setValue(this.cumulativeValue)&&this.triggerDirty&&this.triggerDirty(),this.cumulativeValue=null,this.cumulativeWeight=0}}},THREE.PropertyBinding.parseTrackName=function(e){var t=/^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_. ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/,r=t.exec(e);if(!r)throw Error("cannot parse trackName at all: "+e);if(r.index===t.lastIndex&&t.lastIndex++,t={directoryName:r[1],nodeName:r[3],objectName:r[5],objectIndex:r[7],propertyName:r[9],propertyIndex:r[11]},null===t.propertyName||0===t.propertyName.length)throw Error("can not parse propertyName from trackName: "+e);return t},THREE.PropertyBinding.findNode=function(t,r){function a(e){for(var t=0,a;t<e.bones.length;t++)if(a=e.bones[t],a.name===r)return a;return null}function o(t){for(var a=0,i;a<t.length;a++)if(i=t[a],i.name===r||i.uuid===r||(i=o(i.children)))return i;return null}if(!r||""===r||"root"===r||"."===r||-1===r||r===t.name||r===t.uuid)return t;if(t.skeleton){var i=a(t.skeleton);if(i)return i}return t.children&&(i=o(t.children))?i:null},THREE.VectorKeyframeTrack=function(e,t){THREE.KeyframeTrack.call(this,e,t),this.result=this.keys[0].value.clone()},THREE.VectorKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype),THREE.VectorKeyframeTrack.prototype.constructor=THREE.VectorKeyframeTrack,THREE.VectorKeyframeTrack.prototype.setResult=function(e){this.result.copy(e)},THREE.VectorKeyframeTrack.prototype.lerpValues=function(e,t,r){return e.lerp(t,r)},THREE.VectorKeyframeTrack.prototype.compareValues=function(e,t){return e.equals(t)},THREE.VectorKeyframeTrack.prototype.clone=function(){for(var e=[],t=0,r;t<this.keys.length;t++)r=this.keys[t],e.push({time:r.time,value:r.value.clone()});return new THREE.VectorKeyframeTrack(this.name,e)},THREE.VectorKeyframeTrack.parse=function(t){for(var r=THREE["Vector"+t.keys[0].value.length],a=[],o=0,i;o<t.keys.length;o++)i=t.keys[o],a.push({value:new r().fromArray(i.value),time:i.time});return new THREE.VectorKeyframeTrack(t.name,a)},THREE.QuaternionKeyframeTrack=function(e,t){THREE.KeyframeTrack.call(this,e,t),this.result=this.keys[0].value.clone()},THREE.QuaternionKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype),THREE.QuaternionKeyframeTrack.prototype.constructor=THREE.QuaternionKeyframeTrack,THREE.QuaternionKeyframeTrack.prototype.setResult=function(e){this.result.copy(e)},THREE.QuaternionKeyframeTrack.prototype.lerpValues=function(e,t,r){return e.slerp(t,r)},THREE.QuaternionKeyframeTrack.prototype.compareValues=function(e,t){return e.equals(t)},THREE.QuaternionKeyframeTrack.prototype.multiply=function(e){for(var t=0;t<this.keys.length;t++)this.keys[t].value.multiply(e);return this},THREE.QuaternionKeyframeTrack.prototype.clone=function(){for(var e=[],t=0,r;t<this.keys.length;t++)r=this.keys[t],e.push({time:r.time,value:r.value.clone()});return new THREE.QuaternionKeyframeTrack(this.name,e)},THREE.QuaternionKeyframeTrack.parse=function(e){for(var t=[],r=0,a;r<e.keys.length;r++)a=e.keys[r],t.push({value:new THREE.Quaternion().fromArray(a.value),time:a.time});return new THREE.QuaternionKeyframeTrack(e.name,t)},THREE.StringKeyframeTrack=function(e,t){THREE.KeyframeTrack.call(this,e,t),this.result=this.keys[0].value},THREE.StringKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype),THREE.StringKeyframeTrack.prototype.constructor=THREE.StringKeyframeTrack,THREE.StringKeyframeTrack.prototype.setResult=function(e){this.result=e},THREE.StringKeyframeTrack.prototype.lerpValues=function(e,t,r){return 1>r?e:t},THREE.StringKeyframeTrack.prototype.compareValues=function(e,t){return e===t},THREE.StringKeyframeTrack.prototype.clone=function(){for(var e=[],t=0,r;t<this.keys.length;t++)r=this.keys[t],e.push({time:r.time,value:r.value});return new THREE.StringKeyframeTrack(this.name,e)},THREE.StringKeyframeTrack.parse=function(e){return new THREE.StringKeyframeTrack(e.name,e.keys)},THREE.BooleanKeyframeTrack=function(e,t){THREE.KeyframeTrack.call(this,e,t),this.result=this.keys[0].value},THREE.BooleanKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype),THREE.BooleanKeyframeTrack.prototype.constructor=THREE.BooleanKeyframeTrack,THREE.BooleanKeyframeTrack.prototype.setResult=function(e){this.result=e},THREE.BooleanKeyframeTrack.prototype.lerpValues=function(e,t,r){return 1>r?e:t},THREE.BooleanKeyframeTrack.prototype.compareValues=function(e,t){return e===t},THREE.BooleanKeyframeTrack.prototype.clone=function(){for(var e=[],t=0,r;t<this.keys.length;t++)r=this.keys[t],e.push({time:r.time,value:r.value});return new THREE.BooleanKeyframeTrack(this.name,e)},THREE.BooleanKeyframeTrack.parse=function(e){return new THREE.BooleanKeyframeTrack(e.name,e.keys)},THREE.NumberKeyframeTrack=function(e,t){THREE.KeyframeTrack.call(this,e,t),this.result=this.keys[0].value},THREE.NumberKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype),THREE.NumberKeyframeTrack.prototype.constructor=THREE.NumberKeyframeTrack,THREE.NumberKeyframeTrack.prototype.setResult=function(e){this.result=e},THREE.NumberKeyframeTrack.prototype.lerpValues=function(e,t,r){return e*(1-r)+t*r},THREE.NumberKeyframeTrack.prototype.compareValues=function(e,t){return e===t},THREE.NumberKeyframeTrack.prototype.clone=function(){for(var e=[],t=0,r;t<this.keys.length;t++)r=this.keys[t],e.push({time:r.time,value:r.value});return new THREE.NumberKeyframeTrack(this.name,e)},THREE.NumberKeyframeTrack.parse=function(e){return new THREE.NumberKeyframeTrack(e.name,e.keys)},THREE.Camera=function(){THREE.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.constructor=THREE.Camera,THREE.Camera.prototype.getWorldDirection=function(){var e=new THREE.Quaternion;return function(t){return t=t||new THREE.Vector3,this.getWorldQuaternion(e),t.set(0,0,-1).applyQuaternion(e)}}(),THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(){return new this.constructor().copy(this)},THREE.Camera.prototype.copy=function(e){return THREE.Object3D.prototype.copy.call(this,e),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this},THREE.CubeCamera=function(t,r,a){THREE.Object3D.call(this),this.type="CubeCamera";var o=new THREE.PerspectiveCamera(90,1,t,r);o.up.set(0,-1,0),o.lookAt(new THREE.Vector3(1,0,0)),this.add(o);var i=new THREE.PerspectiveCamera(90,1,t,r);i.up.set(0,-1,0),i.lookAt(new THREE.Vector3(-1,0,0)),this.add(i);var e=new THREE.PerspectiveCamera(90,1,t,r);e.up.set(0,0,1),e.lookAt(new THREE.Vector3(0,1,0)),this.add(e);var s=new THREE.PerspectiveCamera(90,1,t,r);s.up.set(0,0,-1),s.lookAt(new THREE.Vector3(0,-1,0)),this.add(s);var p=new THREE.PerspectiveCamera(90,1,t,r);p.up.set(0,-1,0),p.lookAt(new THREE.Vector3(0,0,1)),this.add(p);var d=new THREE.PerspectiveCamera(90,1,t,r);d.up.set(0,-1,0),d.lookAt(new THREE.Vector3(0,0,-1)),this.add(d),this.renderTarget=new THREE.WebGLRenderTargetCube(a,a,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(t,r){null===this.parent&&this.updateMatrixWorld();var a=this.renderTarget,l=a.texture.generateMipmaps;a.texture.generateMipmaps=!1,a.activeCubeFace=0,t.render(r,o,a),a.activeCubeFace=1,t.render(r,i,a),a.activeCubeFace=2,t.render(r,e,a),a.activeCubeFace=3,t.render(r,s,a),a.activeCubeFace=4,t.render(r,p,a),a.texture.generateMipmaps=l,a.activeCubeFace=5,t.render(r,d,a),t.setRenderTarget(null)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CubeCamera.prototype.constructor=THREE.CubeCamera,THREE.OrthographicCamera=function(t,r,a,o,i,e){THREE.Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.left=t,this.right=r,this.top=a,this.bottom=o,this.near=void 0===i?.1:i,this.far=void 0===e?2E3:e,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera,THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,a=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(r-e,r+e,a+t,a-t,this.near,this.far)},THREE.OrthographicCamera.prototype.copy=function(e){return THREE.Camera.prototype.copy.call(this,e),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this},THREE.OrthographicCamera.prototype.toJSON=function(e){return e=THREE.Object3D.prototype.toJSON.call(this,e),e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,e},THREE.PerspectiveCamera=function(e,t,r,a){THREE.Camera.call(this),this.type="PerspectiveCamera",this.zoom=1,this.fov=void 0===e?50:e,this.aspect=void 0===t?1:t,this.near=void 0===r?.1:r,this.far=void 0===a?2E3:a,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera,THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(t,r,a,o,i,e){this.fullWidth=t,this.fullHeight=r,this.x=a,this.y=o,this.width=i,this.height=e,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var e=Math.tan,t=Math.abs,r=THREE.Math.radToDeg(2*Math.atan(e(.5*THREE.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var o=this.fullWidth/this.fullHeight,r=e(THREE.Math.degToRad(.5*r))*this.near,i=-r,n=o*i,o=t(o*r-n),i=t(r-i);this.projectionMatrix.makeFrustum(n+this.x*o/this.fullWidth,n+(this.x+this.width)*o/this.fullWidth,r-(this.y+this.height)*i/this.fullHeight,r-this.y*i/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(r,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.copy=function(e){return THREE.Camera.prototype.copy.call(this,e),this.fov=e.fov,this.aspect=e.aspect,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this},THREE.PerspectiveCamera.prototype.toJSON=function(e){return e=THREE.Object3D.prototype.toJSON.call(this,e),e.object.zoom=this.zoom,e.object.fov=this.fov,e.object.aspect=this.aspect,e.object.near=this.near,e.object.far=this.far,e},THREE.Light=function(e){THREE.Object3D.call(this),this.type="Light",this.color=new THREE.Color(e),this.receiveShadow=void 0},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.constructor=THREE.Light,Object.defineProperties(THREE.Light.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow ) instead.")}},shadowBias:{set:function(e){this.shadow.bias=e}},shadowDarkness:{set:function(e){this.shadow.darkness=e}},shadowMapWidth:{set:function(e){this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){this.shadow.mapSize.height=e}}}),THREE.Light.prototype.copy=function(e){return THREE.Object3D.prototype.copy.call(this,e),this.color.copy(e.color),this},THREE.Light.prototype.toJSON=function(e){return e=THREE.Object3D.prototype.toJSON.call(this,e),e.object.color=this.color.getHex(),void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.intensity&&(e.object.intensity=this.intensity),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.exponent&&(e.object.exponent=this.exponent),e},THREE.LightShadow=function(e){this.camera=e,this.bias=0,this.darkness=1,this.mapSize=new THREE.Vector2(512,512),this.matrix=this.map=null},THREE.LightShadow.prototype={constructor:THREE.LightShadow,copy:function(e){this.camera=e.camera.clone(),this.bias=e.bias,this.darkness=e.darkness,this.mapSize.copy(e.mapSize)},clone:function(){return new this.constructor().copy(this)}},THREE.AmbientLight=function(e){THREE.Light.call(this,e),this.type="AmbientLight",this.castShadow=void 0},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.constructor=THREE.AmbientLight,THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.type="DirectionalLight",this.position.set(0,1,0),this.updateMatrix(),this.target=new THREE.Object3D,this.intensity=void 0===t?1:t,this.shadow=new THREE.LightShadow(new THREE.OrthographicCamera(-500,500,500,-500,50,5E3))},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight,THREE.DirectionalLight.prototype.copy=function(e){return THREE.Light.prototype.copy.call(this,e),this.intensity=e.intensity,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this},THREE.HemisphereLight=function(e,t,r){THREE.Light.call(this,e),this.type="HemisphereLight",this.castShadow=void 0,this.position.set(0,1,0),this.updateMatrix(),this.groundColor=new THREE.Color(t),this.intensity=void 0===r?1:r},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight,THREE.HemisphereLight.prototype.copy=function(e){return THREE.Light.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this.intensity=e.intensity,this},THREE.PointLight=function(e,t,r,a){THREE.Light.call(this,e),this.type="PointLight",this.intensity=void 0===t?1:t,this.distance=void 0===r?0:r,this.decay=void 0===a?1:a,this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(90,1,1,500))},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.constructor=THREE.PointLight,THREE.PointLight.prototype.copy=function(e){return THREE.Light.prototype.copy.call(this,e),this.intensity=e.intensity,this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this},THREE.SpotLight=function(t,r,a,o,i,e){THREE.Light.call(this,t),this.type="SpotLight",this.position.set(0,1,0),this.updateMatrix(),this.target=new THREE.Object3D,this.intensity=void 0===r?1:r,this.distance=void 0===a?0:a,this.angle=void 0===o?Math.PI/3:o,this.exponent=void 0===i?10:i,this.decay=void 0===e?1:e,this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(50,1,50,5E3))},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.constructor=THREE.SpotLight,THREE.SpotLight.prototype.copy=function(e){return THREE.Light.prototype.copy.call(this,e),this.intensity=e.intensity,this.distance=e.distance,this.angle=e.angle,this.exponent=e.exponent,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this},THREE.Cache={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},THREE.Loader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,extractUrlBase:function(e){return(e=e.split("/"),1===e.length)?"./":(e.pop(),e.join("/")+"/")},initMaterials:function(t,r,a){for(var o=[],i=0;i<t.length;++i)o[i]=this.createMaterial(t[i],r,a);return o},createMaterial:function(){var t,r,o;return function(a,i,e){function n(t,o,n,p,d){t=i+t;var l=THREE.Loader.Handlers.get(t);return null===l?(r.setCrossOrigin(e),t=r.load(t)):t=l.load(t),void 0!==o&&(t.repeat.fromArray(o),1!==o[0]&&(t.wrapS=THREE.RepeatWrapping),1!==o[1]&&(t.wrapT=THREE.RepeatWrapping)),void 0!==n&&t.offset.fromArray(n),void 0!==p&&("repeat"===p[0]&&(t.wrapS=THREE.RepeatWrapping),"mirror"===p[0]&&(t.wrapS=THREE.MirroredRepeatWrapping),"repeat"===p[1]&&(t.wrapT=THREE.RepeatWrapping),"mirror"===p[1]&&(t.wrapT=THREE.MirroredRepeatWrapping)),void 0!==d&&(t.anisotropy=d),o=THREE.Math.generateUUID(),s[o]=t,o}void 0===t&&(t=new THREE.Color),void 0===r&&(r=new THREE.TextureLoader),void 0===o&&(o=new THREE.MaterialLoader);var s={},p={uuid:THREE.Math.generateUUID(),type:"MeshLambertMaterial"},l;for(l in a){var d=a[l];switch(l){case"DbgColor":p.color=d;break;case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":p.name=d;break;case"blending":p.blending=THREE[d];break;case"colorDiffuse":p.color=t.fromArray(d).getHex();break;case"colorSpecular":p.specular=t.fromArray(d).getHex();break;case"colorEmissive":p.emissive=t.fromArray(d).getHex();break;case"specularCoef":p.shininess=d;break;case"shading":"basic"===d.toLowerCase()&&(p.type="MeshBasicMaterial"),"phong"===d.toLowerCase()&&(p.type="MeshPhongMaterial");break;case"mapDiffuse":p.map=n(d,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapLight":p.lightMap=n(d,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":p.aoMap=n(d,a.mapAORepeat,a.mapAOOffset,a.mapAOWrap,a.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":p.bumpMap=n(d,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);break;case"mapBumpScale":p.bumpScale=d;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":p.normalMap=n(d,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);break;case"mapNormalFactor":p.normalScale=[d,d];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":p.specularMap=n(d,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapAlpha":p.alphaMap=n(d,a.mapAlphaRepeat,a.mapAlphaOffset,a.mapAlphaWrap,a.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":p.side=THREE.BackSide;break;case"doubleSided":p.side=THREE.DoubleSide;break;case"transparency":console.warn("THREE.Loader: transparency has been renamed to opacity"),p.opacity=d;break;case"opacity":case"transparent":case"depthTest":case"depthWrite":case"transparent":case"visible":case"wireframe":p[l]=d;break;case"vertexColors":!0===d&&(p.vertexColors=THREE.VertexColors),"face"===d&&(p.vertexColors=THREE.FaceColors);break;default:console.error("Loader.createMaterial: Unsupported",l,d);}}return"MeshPhongMaterial"!==p.type&&delete p.specular,1>p.opacity&&(p.transparent=!0),o.setTextures(s),o.parse(p)}}()},THREE.Loader.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(t){for(var r=this.handlers,a=0,o=r.length,i;a<o;a+=2)if(i=r[a+1],r[a].test(t))return i;return null}},THREE.XHRLoader=function(e){this.manager=void 0===e?THREE.DefaultLoadingManager:e},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(t,r,o,a){var i=this,e=THREE.Cache.get(t);if(void 0!==e)return r&&setTimeout(function(){r(e)},0),e;var n=new XMLHttpRequest;return n.open("GET",t,!0),n.addEventListener("load",function(e){e=e.target.response,THREE.Cache.add(t,e),r&&r(e),i.manager.itemEnd(t)},!1),void 0!==o&&n.addEventListener("progress",function(e){o(e)},!1),n.addEventListener("error",function(e){a&&a(e),i.manager.itemError(t)},!1),void 0!==this.crossOrigin&&(n.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(n.responseType=this.responseType),void 0!==this.withCredentials&&(n.withCredentials=this.withCredentials),n.send(null),i.manager.itemStart(t),n},setResponseType:function(e){this.responseType=e},setCrossOrigin:function(e){this.crossOrigin=e},setWithCredentials:function(e){this.withCredentials=e}},THREE.ImageLoader=function(e){this.manager=void 0===e?THREE.DefaultLoadingManager:e},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(t,r,o,a){var i=this,e=THREE.Cache.get(t);if(void 0!==e)return i.manager.itemStart(t),r?setTimeout(function(){r(e),i.manager.itemEnd(t)},0):i.manager.itemEnd(t),e;var n=document.createElement("img");return n.addEventListener("load",function(){THREE.Cache.add(t,this),r&&r(this),i.manager.itemEnd(t)},!1),void 0!==o&&n.addEventListener("progress",function(e){o(e)},!1),n.addEventListener("error",function(e){a&&a(e),i.manager.itemError(t)},!1),void 0!==this.crossOrigin&&(n.crossOrigin=this.crossOrigin),i.manager.itemStart(t),n.src=t,n},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.JSONLoader=function(e){"boolean"==typeof e&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),e=void 0),this.manager=void 0===e?THREE.DefaultLoadingManager:e,this.withCredentials=!1},THREE.JSONLoader.prototype={constructor:THREE.JSONLoader,get statusDomElement(){return void 0===this._statusDomElement&&(this._statusDomElement=document.createElement("div")),console.warn("THREE.JSONLoader: .statusDomElement has been removed."),this._statusDomElement},load:function(t,r,a){var o=this,e=this.texturePath&&"string"==typeof this.texturePath?this.texturePath:THREE.Loader.prototype.extractUrlBase(t);a=new THREE.XHRLoader(this.manager),a.setCrossOrigin(this.crossOrigin),a.setWithCredentials(this.withCredentials),a.load(t,function(a){a=JSON.parse(a);var i=a.metadata;if(void 0!==i){if("object"===i.type)return void console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.ObjectLoader instead.");if("scene"===i.type)return void console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.SceneLoader instead.")}a=o.parse(a,e),r(a.geometry,a.materials)})},setCrossOrigin:function(e){this.crossOrigin=e},setTexturePath:function(e){this.texturePath=e},parse:function(e,t){var r=new THREE.Geometry,a=void 0===e.scale?1:1/e.scale;return(function(a){var o=e.faces,i,c,g,y,S,_,T,M,E,C,A,L,w;_=e.vertices;var P=e.normals,R=e.colors,x=0;if(void 0!==e.uvs){for(i=0;i<e.uvs.length;i++)e.uvs[i].length&&x++;for(i=0;i<x;i++)r.faceVertexUvs[i]=[]}for(y=0,S=_.length;y<S;)i=new THREE.Vector3,i.x=_[y++]*a,i.y=_[y++]*a,i.z=_[y++]*a,r.vertices.push(i);for(y=0,S=o.length;y<S;)if(a=o[y++],E=1&a,g=2&a,i=8&a,T=16&a,C=32&a,_=64&a,a&=128,E){if(E=new THREE.Face3,E.a=o[y],E.b=o[y+1],E.c=o[y+3],A=new THREE.Face3,A.a=o[y+1],A.b=o[y+2],A.c=o[y+3],y+=4,g&&(g=o[y++],E.materialIndex=g,A.materialIndex=g),g=r.faces.length,i)for(i=0;i<x;i++)for(L=e.uvs[i],r.faceVertexUvs[i][g]=[],r.faceVertexUvs[i][g+1]=[],c=0;4>c;c++)M=o[y++],w=L[2*M],M=L[2*M+1],w=new THREE.Vector2(w,M),2!==c&&r.faceVertexUvs[i][g].push(w),0!==c&&r.faceVertexUvs[i][g+1].push(w);if(T&&(T=3*o[y++],E.normal.set(P[T++],P[T++],P[T]),A.normal.copy(E.normal)),C)for(i=0;4>i;i++)T=3*o[y++],C=new THREE.Vector3(P[T++],P[T++],P[T]),2!==i&&E.vertexNormals.push(C),0!==i&&A.vertexNormals.push(C);if(_&&(_=o[y++],_=R[_],E.color.setHex(_),A.color.setHex(_)),a)for(i=0;4>i;i++)_=o[y++],_=R[_],2!==i&&E.vertexColors.push(new THREE.Color(_)),0!==i&&A.vertexColors.push(new THREE.Color(_));r.faces.push(E),r.faces.push(A)}else{if(E=new THREE.Face3,E.a=o[y++],E.b=o[y++],E.c=o[y++],g&&(g=o[y++],E.materialIndex=g),g=r.faces.length,i)for(i=0;i<x;i++)for(L=e.uvs[i],r.faceVertexUvs[i][g]=[],c=0;3>c;c++)M=o[y++],w=L[2*M],M=L[2*M+1],w=new THREE.Vector2(w,M),r.faceVertexUvs[i][g].push(w);if(T&&(T=3*o[y++],E.normal.set(P[T++],P[T++],P[T])),C)for(i=0;3>i;i++)T=3*o[y++],C=new THREE.Vector3(P[T++],P[T++],P[T]),E.vertexNormals.push(C);if(_&&(_=o[y++],E.color.setHex(R[_])),a)for(i=0;3>i;i++)_=o[y++],E.vertexColors.push(new THREE.Color(R[_]));r.faces.push(E)}}(a),function(){var t=void 0===e.influencesPerVertex?2:e.influencesPerVertex;if(e.skinWeights)for(var a=0,o=e.skinWeights.length;a<o;a+=t)r.skinWeights.push(new THREE.Vector4(e.skinWeights[a],1<t?e.skinWeights[a+1]:0,2<t?e.skinWeights[a+2]:0,3<t?e.skinWeights[a+3]:0));if(e.skinIndices)for(a=0,o=e.skinIndices.length;a<o;a+=t)r.skinIndices.push(new THREE.Vector4(e.skinIndices[a],1<t?e.skinIndices[a+1]:0,2<t?e.skinIndices[a+2]:0,3<t?e.skinIndices[a+3]:0));r.bones=e.bones,r.bones&&0<r.bones.length&&(r.skinWeights.length!==r.skinIndices.length||r.skinIndices.length!==r.vertices.length)&&console.warn("When skinning, number of vertices ("+r.vertices.length+"), skinIndices ("+r.skinIndices.length+"), and skinWeights ("+r.skinWeights.length+") should match.")}(),function(t){if(void 0!==e.morphTargets)for(var a=0,o=e.morphTargets.length;a<o;a++){r.morphTargets[a]={},r.morphTargets[a].name=e.morphTargets[a].name,r.morphTargets[a].vertices=[];for(var i=r.morphTargets[a].vertices,n=e.morphTargets[a].vertices,s=0,l=n.length,c;s<l;s+=3)c=new THREE.Vector3,c.x=n[s]*t,c.y=n[s+1]*t,c.z=n[s+2]*t,i.push(c)}if(void 0!==e.morphColors&&0<e.morphColors.length)for(console.warn("THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors."),t=r.faces,i=e.morphColors[0].colors,a=0,o=t.length;a<o;a++)t[a].color.fromArray(i,3*a)}(a),function(){var t=[],a=[];void 0!==e.animation&&a.push(e.animation),void 0!==e.animations&&(e.animations.length?a=a.concat(e.animations):a.push(e.animations));for(var o=0,i;o<a.length;o++)i=THREE.AnimationClip.parseAnimation(a[o],r.bones),i&&t.push(i);r.morphTargets&&(a=THREE.AnimationClip.CreateClipsFromMorphTargetSequences(r.morphTargets,10),t=t.concat(a)),0<t.length&&(r.animations=t)}(),r.computeFaceNormals(),r.computeBoundingSphere(),void 0===e.materials||0===e.materials.length)?{geometry:r}:(a=THREE.Loader.prototype.initMaterials(e.materials,t,this.crossOrigin),{geometry:r,materials:a})}},THREE.LoadingManager=function(t,r,a){var o=this,i=!1,n=0,s=0;this.onStart=void 0,this.onLoad=t,this.onProgress=r,this.onError=a,this.itemStart=function(e){s++,!1===i&&void 0!==o.onStart&&o.onStart(e,n,s),i=!0},this.itemEnd=function(e){n++,void 0!==o.onProgress&&o.onProgress(e,n,s),n===s&&(i=!1,void 0!==o.onLoad)&&o.onLoad()},this.itemError=function(e){void 0!==o.onError&&o.onError(e)}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(e){this.manager=void 0===e?THREE.DefaultLoadingManager:e},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(t,r,a,o){var i=this,e=new THREE.XHRLoader(i.manager);e.setCrossOrigin(this.crossOrigin),e.load(t,function(e){r(i.parse(JSON.parse(e)))},a,o)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(t){var r=new THREE.BufferGeometry,o=t.data.index;void 0!==o&&(o=new self[o.type](o.array),r.setIndex(new THREE.BufferAttribute(o,1)));var i=t.data.attributes,n;for(n in i){var s=i[n],o=new self[s.type](s.array);r.addAttribute(n,new THREE.BufferAttribute(o,s.itemSize))}if(n=t.data.groups||t.data.drawcalls||t.data.offsets,void 0!==n)for(o=0,i=n.length;o!==i;++o)s=n[o],r.addGroup(s.start,s.count);return t=t.data.boundingSphere,void 0!==t&&(n=new THREE.Vector3,void 0!==t.center&&n.fromArray(t.center),r.boundingSphere=new THREE.Sphere(n,t.radius)),r}},THREE.MaterialLoader=function(e){this.manager=void 0===e?THREE.DefaultLoadingManager:e,this.textures={}},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(t,r,a,o){var i=this,e=new THREE.XHRLoader(i.manager);e.setCrossOrigin(this.crossOrigin),e.load(t,function(e){r(i.parse(JSON.parse(e)))},a,o)},setCrossOrigin:function(e){this.crossOrigin=e},setTextures:function(e){this.textures=e},getTexture:function(e){var t=this.textures;return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]},parse:function(e){var t=new THREE[e.type];if(t.uuid=e.uuid,void 0!==e.name&&(t.name=e.name),void 0!==e.color&&t.color.setHex(e.color),void 0!==e.emissive&&t.emissive.setHex(e.emissive),void 0!==e.specular&&t.specular.setHex(e.specular),void 0!==e.shininess&&(t.shininess=e.shininess),void 0!==e.uniforms&&(t.uniforms=e.uniforms),void 0!==e.vertexShader&&(t.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(t.fragmentShader=e.fragmentShader),void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors),void 0!==e.shading&&(t.shading=e.shading),void 0!==e.blending&&(t.blending=e.blending),void 0!==e.side&&(t.side=e.side),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.transparent&&(t.transparent=e.transparent),void 0!==e.alphaTest&&(t.alphaTest=e.alphaTest),void 0!==e.depthTest&&(t.depthTest=e.depthTest),void 0!==e.depthWrite&&(t.depthWrite=e.depthWrite),void 0!==e.wireframe&&(t.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(t.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.size&&(t.size=e.size),void 0!==e.sizeAttenuation&&(t.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(t.map=this.getTexture(e.map)),void 0!==e.alphaMap&&(t.alphaMap=this.getTexture(e.alphaMap),t.transparent=!0),void 0!==e.bumpMap&&(t.bumpMap=this.getTexture(e.bumpMap)),void 0!==e.bumpScale&&(t.bumpScale=e.bumpScale),void 0!==e.normalMap&&(t.normalMap=this.getTexture(e.normalMap)),e.normalScale&&(t.normalScale=new THREE.Vector2(e.normalScale,e.normalScale)),void 0!==e.displacementMap&&(t.displacementMap=this.getTexture(e.displacementMap)),void 0!==e.displacementScale&&(t.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(t.displacementBias=e.displacementBias),void 0!==e.specularMap&&(t.specularMap=this.getTexture(e.specularMap)),void 0!==e.envMap&&(t.envMap=this.getTexture(e.envMap),t.combine=THREE.MultiplyOperation),e.reflectivity&&(t.reflectivity=e.reflectivity),void 0!==e.lightMap&&(t.lightMap=this.getTexture(e.lightMap)),void 0!==e.lightMapIntensity&&(t.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(t.aoMap=this.getTexture(e.aoMap)),void 0!==e.aoMapIntensity&&(t.aoMapIntensity=e.aoMapIntensity),void 0!==e.materials)for(var r=0,a=e.materials.length;r<a;r++)t.materials.push(this.parse(e.materials[r]));return t}},THREE.ObjectLoader=function(e){this.manager=void 0===e?THREE.DefaultLoadingManager:e,this.texturePath=""},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(t,r,a,o){""===this.texturePath&&(this.texturePath=t.substring(0,t.lastIndexOf("/")+1));var i=this,e=new THREE.XHRLoader(i.manager);e.setCrossOrigin(this.crossOrigin),e.load(t,function(e){i.parse(JSON.parse(e),r)},a,o)},setTexturePath:function(e){this.texturePath=e},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(t,r){var a=this.parseGeometries(t.geometries),o=this.parseImages(t.images,function(){void 0!==r&&r(i)}),o=this.parseTextures(t.textures,o),o=this.parseMaterials(t.materials,o),i=this.parseObject(t.object,a,o);return t.animations&&(i.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0===r||r(i),i},parseGeometries:function(t){var r={};if(void 0!==t)for(var a=new THREE.JSONLoader,o=new THREE.BufferGeometryLoader,i=0,n=t.length;i<n;i++){var s=t[i],l;switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":l=new THREE[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"CubeGeometry":l=new THREE.BoxGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleBufferGeometry":l=new THREE.CircleBufferGeometry(s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CircleGeometry":l=new THREE.CircleGeometry(s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":l=new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":l=new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"SphereBufferGeometry":l=new THREE.SphereBufferGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":l=new THREE.DodecahedronGeometry(s.radius,s.detail);break;case"IcosahedronGeometry":l=new THREE.IcosahedronGeometry(s.radius,s.detail);break;case"OctahedronGeometry":l=new THREE.OctahedronGeometry(s.radius,s.detail);break;case"TetrahedronGeometry":l=new THREE.TetrahedronGeometry(s.radius,s.detail);break;case"RingGeometry":l=new THREE.RingGeometry(s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":l=new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":l=new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale);break;case"BufferGeometry":l=o.parse(s);break;case"Geometry":l=a.parse(s.data,this.texturePath).geometry;break;default:console.warn("THREE.ObjectLoader: Unsupported geometry type \""+s.type+"\"");continue;}l.uuid=s.uuid,void 0!==s.name&&(l.name=s.name),r[s.uuid]=l}return r},parseMaterials:function(t,r){var a={};if(void 0!==t){var o=new THREE.MaterialLoader;o.setTextures(r);for(var i=0,n=t.length,s;i<n;i++)s=o.parse(t[i]),a[s.uuid]=s}return a},parseAnimations:function(e){for(var t=[],r=0,a;r<e.length;r++)a=THREE.AnimationClip.parse(e[r]),t.push(a);return t},parseImages:function(t,r){function a(e){return o.manager.itemStart(e),n.load(e,function(){o.manager.itemEnd(e)})}var o=this,i={};if(void 0!==t&&0<t.length){var e=new THREE.LoadingManager(r),n=new THREE.ImageLoader(e);n.setCrossOrigin(this.crossOrigin);for(var e=0,s=t.length;e<s;e++){var p=t[e],l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(p.url)?p.url:o.texturePath+p.url;i[p.uuid]=a(l)}}return i},parseTextures:function(t,r){function a(e){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),THREE[e])}var o={};if(void 0!==t)for(var i=0,n=t.length,s;i<n;i++){s=t[i],void 0===s.image&&console.warn("THREE.ObjectLoader: No \"image\" specified for",s.uuid),void 0===r[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);var l=new THREE.Texture(r[s.image]);l.needsUpdate=!0,l.uuid=s.uuid,void 0!==s.name&&(l.name=s.name),void 0!==s.mapping&&(l.mapping=a(s.mapping)),void 0!==s.offset&&(l.offset=new THREE.Vector2(s.offset[0],s.offset[1])),void 0!==s.repeat&&(l.repeat=new THREE.Vector2(s.repeat[0],s.repeat[1])),void 0!==s.minFilter&&(l.minFilter=a(s.minFilter)),void 0!==s.magFilter&&(l.magFilter=a(s.magFilter)),void 0!==s.anisotropy&&(l.anisotropy=s.anisotropy),Array.isArray(s.wrap)&&(l.wrapS=a(s.wrap[0]),l.wrapT=a(s.wrap[1])),o[s.uuid]=l}return o},parseObject:function(){var t=new THREE.Matrix4;return function(r,o,i){function a(e){return void 0===o[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),o[e]}function e(e){if(void 0!==e)return void 0===i[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),i[e]}var n;switch(r.type){case"Scene":n=new THREE.Scene;break;case"PerspectiveCamera":n=new THREE.PerspectiveCamera(r.fov,r.aspect,r.near,r.far);break;case"OrthographicCamera":n=new THREE.OrthographicCamera(r.left,r.right,r.top,r.bottom,r.near,r.far);break;case"AmbientLight":n=new THREE.AmbientLight(r.color);break;case"DirectionalLight":n=new THREE.DirectionalLight(r.color,r.intensity);break;case"PointLight":n=new THREE.PointLight(r.color,r.intensity,r.distance,r.decay);break;case"SpotLight":n=new THREE.SpotLight(r.color,r.intensity,r.distance,r.angle,r.exponent,r.decay);break;case"HemisphereLight":n=new THREE.HemisphereLight(r.color,r.groundColor,r.intensity);break;case"Mesh":n=new THREE.Mesh(a(r.geometry),e(r.material));break;case"LOD":n=new THREE.LOD;break;case"Line":n=new THREE.Line(a(r.geometry),e(r.material),r.mode);break;case"PointCloud":case"Points":n=new THREE.Points(a(r.geometry),e(r.material));break;case"Sprite":n=new THREE.Sprite(e(r.material));break;case"Group":n=new THREE.Group;break;default:n=new THREE.Object3D;}if(n.uuid=r.uuid,void 0!==r.name&&(n.name=r.name),void 0===r.matrix?(void 0!==r.position&&n.position.fromArray(r.position),void 0!==r.rotation&&n.rotation.fromArray(r.rotation),void 0!==r.scale&&n.scale.fromArray(r.scale)):(t.fromArray(r.matrix),t.decompose(n.position,n.quaternion,n.scale)),void 0!==r.castShadow&&(n.castShadow=r.castShadow),void 0!==r.receiveShadow&&(n.receiveShadow=r.receiveShadow),void 0!==r.visible&&(n.visible=r.visible),void 0!==r.userData&&(n.userData=r.userData),void 0!==r.children)for(var s in r.children)n.add(this.parseObject(r.children[s],o,i));if("LOD"===r.type){r=r.levels;for(var p=0,d;p<r.length;p++)d=r[p],s=n.getObjectByProperty("uuid",d.object),void 0!==s&&n.addLevel(s,d.distance)}return n}}()},THREE.TextureLoader=function(e){this.manager=void 0===e?THREE.DefaultLoadingManager:e},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(t,r,a,o){var i=new THREE.Texture,e=new THREE.ImageLoader(this.manager);return e.setCrossOrigin(this.crossOrigin),e.load(t,function(e){i.image=e,i.needsUpdate=!0,void 0!==r&&r(i)},a,o),i},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.CubeTextureLoader=function(e){this.manager=void 0===e?THREE.DefaultLoadingManager:e},THREE.CubeTextureLoader.prototype={constructor:THREE.CubeTextureLoader,load:function(t,r,a,o){function i(i){n.load(t[i],function(t){e.images[i]=t,s++,6===s&&(e.needsUpdate=!0,r&&r(e))},void 0,o)}var e=new THREE.CubeTexture([]),n=new THREE.ImageLoader;n.setCrossOrigin(this.crossOrigin);var s=0;for(a=0;a<t.length;++a)i(a);return e},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(e){this.manager=void 0===e?THREE.DefaultLoadingManager:e,this._parser=null},THREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(t,r,a,o){var i=this,e=new THREE.DataTexture,n=new THREE.XHRLoader(this.manager);return n.setCrossOrigin(this.crossOrigin),n.setResponseType("arraybuffer"),n.load(t,function(t){(t=i._parser(t))&&(void 0===t.image?void 0!==t.data&&(e.image.width=t.width,e.image.height=t.height,e.image.data=t.data):e.image=t.image,e.wrapS=void 0===t.wrapS?THREE.ClampToEdgeWrapping:t.wrapS,e.wrapT=void 0===t.wrapT?THREE.ClampToEdgeWrapping:t.wrapT,e.magFilter=void 0===t.magFilter?THREE.LinearFilter:t.magFilter,e.minFilter=void 0===t.minFilter?THREE.LinearMipMapLinearFilter:t.minFilter,e.anisotropy=void 0===t.anisotropy?1:t.anisotropy,void 0!==t.format&&(e.format=t.format),void 0!==t.type&&(e.type=t.type),void 0!==t.mipmaps&&(e.mipmaps=t.mipmaps),1===t.mipmapCount&&(e.minFilter=THREE.LinearFilter),e.needsUpdate=!0,r&&r(e,t))},a,o),e},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.CompressedTextureLoader=function(e){this.manager=void 0===e?THREE.DefaultLoadingManager:e,this._parser=null},THREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(t,r,a,o){var i=this,e=[],n=new THREE.CompressedTexture;n.image=e;var s=new THREE.XHRLoader(this.manager);if(s.setCrossOrigin(this.crossOrigin),s.setResponseType("arraybuffer"),Array.isArray(t))for(var d=0,c=function(l){s.load(t[l],function(t){t=i._parser(t,!0),e[l]={width:t.width,height:t.height,format:t.format,mipmaps:t.mipmaps},d+=1,6===d&&(1===t.mipmapCount&&(n.minFilter=THREE.LinearFilter),n.format=t.format,n.needsUpdate=!0,r&&r(n))},a,o)},u=0,h=t.length;u<h;++u)c(u);else s.load(t,function(t){if(t=i._parser(t,!0),t.isCubemap)for(var o=t.mipmaps.length/t.mipmapCount,s=0;s<o;s++){e[s]={mipmaps:[]};for(var l=0;l<t.mipmapCount;l++)e[s].mipmaps.push(t.mipmaps[s*t.mipmapCount+l]),e[s].format=t.format,e[s].width=t.width,e[s].height=t.height}else n.image.width=t.width,n.image.height=t.height,n.mipmaps=t.mipmaps;1===t.mipmapCount&&(n.minFilter=THREE.LinearFilter),n.format=t.format,n.needsUpdate=!0,r&&r(n)},a,o);return n},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Material",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null,this.depthFunc=THREE.LessEqualDepth,this.colorWrite=this.depthWrite=this.depthTest=!0,this.precision=null,this.polygonOffset=!1,this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this._needsUpdate=this.visible=!0},THREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){!0===e&&this.update(),this._needsUpdate=e},setValues:function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0===r)console.warn("THREE.Material: '"+t+"' parameter is undefined.");else{var a=this[t];void 0===a?console.warn("THREE."+this.type+": '"+t+"' is not a property of this material."):a instanceof THREE.Color?a.set(r):a instanceof THREE.Vector3&&r instanceof THREE.Vector3?a.copy(r):this[t]="overdraw"===t?+r:r}}},toJSON:function(e){var t={metadata:{version:4.4,type:"Material",generator:"Material.toJSON"}};return t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),this.color instanceof THREE.Color&&(t.color=this.color.getHex()),this.emissive instanceof THREE.Color&&(t.emissive=this.emissive.getHex()),this.specular instanceof THREE.Color&&(t.specular=this.specular.getHex()),void 0!==this.shininess&&(t.shininess=this.shininess),this.map instanceof THREE.Texture&&(t.map=this.map.toJSON(e).uuid),this.alphaMap instanceof THREE.Texture&&(t.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap instanceof THREE.Texture&&(t.lightMap=this.lightMap.toJSON(e).uuid),this.bumpMap instanceof THREE.Texture&&(t.bumpMap=this.bumpMap.toJSON(e).uuid,t.bumpScale=this.bumpScale),this.normalMap instanceof THREE.Texture&&(t.normalMap=this.normalMap.toJSON(e).uuid,t.normalScale=this.normalScale),this.displacementMap instanceof THREE.Texture&&(t.displacementMap=this.displacementMap.toJSON(e).uuid,t.displacementScale=this.displacementScale,t.displacementBias=this.displacementBias),this.specularMap instanceof THREE.Texture&&(t.specularMap=this.specularMap.toJSON(e).uuid),this.envMap instanceof THREE.Texture&&(t.envMap=this.envMap.toJSON(e).uuid,t.reflectivity=this.reflectivity),void 0!==this.size&&(t.size=this.size),void 0!==this.sizeAttenuation&&(t.sizeAttenuation=this.sizeAttenuation),void 0!==this.vertexColors&&this.vertexColors!==THREE.NoColors&&(t.vertexColors=this.vertexColors),void 0!==this.shading&&this.shading!==THREE.SmoothShading&&(t.shading=this.shading),void 0!==this.blending&&this.blending!==THREE.NormalBlending&&(t.blending=this.blending),void 0!==this.side&&this.side!==THREE.FrontSide&&(t.side=this.side),1>this.opacity&&(t.opacity=this.opacity),!0===this.transparent&&(t.transparent=this.transparent),0<this.alphaTest&&(t.alphaTest=this.alphaTest),!0===this.wireframe&&(t.wireframe=this.wireframe),1<this.wireframeLinewidth&&(t.wireframeLinewidth=this.wireframeLinewidth),t},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.name=e.name,this.side=e.side,this.opacity=e.opacity,this.transparent=e.transparent,this.blending=e.blending,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.alphaTest=e.alphaTest,this.overdraw=e.overdraw,this.visible=e.visible,this},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})},get wrapAround(){console.warn("THREE."+this.type+": .wrapAround has been removed.")},set wrapAround(e){console.warn("THREE."+this.type+": .wrapAround has been removed.")},get wrapRGB(){return console.warn("THREE."+this.type+": .wrapRGB has been removed."),new THREE.Color}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.type="LineBasicMaterial",this.color=new THREE.Color(16777215),this.linewidth=1,this.linejoin=this.linecap="round",this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial,THREE.LineBasicMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.vertexColors=e.vertexColors,this.fog=e.fog,this},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.type="LineDashedMaterial",this.color=new THREE.Color(16777215),this.scale=this.linewidth=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial,THREE.LineDashedMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this.vertexColors=e.vertexColors,this.fog=e.fog,this},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.type="MeshBasicMaterial",this.color=new THREE.Color(16777215),this.aoMap=this.map=null,this.aoMapIntensity=1,this.envMap=this.alphaMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial,THREE.MeshBasicMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.fog=e.fog,this.shading=e.shading,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.type="MeshLambertMaterial",this.color=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.envMap=this.alphaMap=this.specularMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial,THREE.MeshLambertMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.emissive.copy(e.emissive),this.map=e.map,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.fog=e.fog,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.type="MeshPhongMaterial",this.color=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.lightMap=this.map=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.bumpMap=this.emissiveMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.envMap=this.alphaMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial,THREE.MeshPhongMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.emissive.copy(e.emissive),this.specular.copy(e.specular),this.shininess=e.shininess,this.metal=e.metal,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissiveMap=e.emissiveMap,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.fog=e.fog,this.shading=e.shading,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.type="MeshDepthMaterial",this.wireframe=this.morphTargets=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial,THREE.MeshDepthMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.type="MeshNormalMaterial",this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial,THREE.MeshNormalMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},THREE.MultiMaterial=function(e){this.uuid=THREE.Math.generateUUID(),this.type="MultiMaterial",this.materials=e instanceof Array?e:[],this.visible=!0},THREE.MultiMaterial.prototype={constructor:THREE.MultiMaterial,toJSON:function(){for(var e={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},t=0,r=this.materials.length;t<r;t++)e.materials.push(this.materials[t].toJSON());return e.visible=this.visible,e},clone:function(){for(var e=new this.constructor,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e.visible=this.visible,e}},THREE.MeshFaceMaterial=THREE.MultiMaterial,THREE.PointsMaterial=function(e){THREE.Material.call(this),this.type="PointsMaterial",this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(e)},THREE.PointsMaterial.prototype=Object.create(THREE.Material.prototype),THREE.PointsMaterial.prototype.constructor=THREE.PointsMaterial,THREE.PointsMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.vertexColors=e.vertexColors,this.fog=e.fog,this},THREE.PointCloudMaterial=function(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new THREE.PointsMaterial(e)},THREE.ParticleBasicMaterial=function(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new THREE.PointsMaterial(e)},THREE.ParticleSystemMaterial=function(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new THREE.PointsMaterial(e)},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=THREE.NoColors,this.derivatives=this.morphNormals=this.morphTargets=this.skinning=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial,THREE.ShaderMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=THREE.UniformsUtils.clone(e.uniforms),this.attributes=e.attributes,this.defines=e.defines,this.shading=e.shading,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.derivatives=e.derivatives,this},THREE.ShaderMaterial.prototype.toJSON=function(e){return e=THREE.Material.prototype.toJSON.call(this,e),e.uniforms=this.uniforms,e.attributes=this.attributes,e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e},THREE.RawShaderMaterial=function(e){THREE.ShaderMaterial.call(this,e),this.type="RawShaderMaterial"},THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial,THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.type="SpriteMaterial",this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(e)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial,THREE.SpriteMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.rotation=e.rotation,this.fog=e.fog,this},THREE.Texture=function(t,r,a,o,i,e,n,s,p){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++}),this.uuid=THREE.Math.generateUUID(),this.sourceFile=this.name="",this.image=void 0===t?THREE.Texture.DEFAULT_IMAGE:t,this.mipmaps=[],this.mapping=void 0===r?THREE.Texture.DEFAULT_MAPPING:r,this.wrapS=void 0===a?THREE.ClampToEdgeWrapping:a,this.wrapT=void 0===o?THREE.ClampToEdgeWrapping:o,this.magFilter=void 0===i?THREE.LinearFilter:i,this.minFilter=void 0===e?THREE.LinearMipMapLinearFilter:e,this.anisotropy=void 0===p?1:p,this.format=void 0===n?THREE.RGBAFormat:n,this.type=void 0===s?THREE.UnsignedByteType:s,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.version=0,this.onUpdate=null},THREE.Texture.DEFAULT_IMAGE=void 0,THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping,THREE.Texture.prototype={constructor:THREE.Texture,set needsUpdate(e){!0===e&&this.version++},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this},toJSON:function(t){if(void 0!==t.textures[this.uuid])return t.textures[this.uuid];var r={metadata:{version:4.4,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy};if(void 0!==this.image){var a=this.image;if(void 0===a.uuid&&(a.uuid=THREE.Math.generateUUID()),void 0===t.images[a.uuid]){var o=t.images,i=a.uuid,e=a.uuid,n;void 0===a.toDataURL?(n=document.createElement("canvas"),n.width=a.width,n.height=a.height,n.getContext("2d").drawImage(a,0,0,a.width,a.height)):n=a,n=2048<n.width||2048<n.height?n.toDataURL("image/jpeg",.6):n.toDataURL("image/png"),o[i]={uuid:e,url:n}}r.image=a.uuid}return t.textures[this.uuid]=r},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){var t=Math.ceil,r=Math.abs,a=Math.floor;if(this.mapping===THREE.UVMapping){if(e.multiply(this.repeat),e.add(this.offset),0>e.x||1<e.x)switch(this.wrapS){case THREE.RepeatWrapping:e.x-=a(e.x);break;case THREE.ClampToEdgeWrapping:e.x=0>e.x?0:1;break;case THREE.MirroredRepeatWrapping:1===r(a(e.x)%2)?e.x=t(e.x)-e.x:e.x-=a(e.x);}if(0>e.y||1<e.y)switch(this.wrapT){case THREE.RepeatWrapping:e.y-=a(e.y);break;case THREE.ClampToEdgeWrapping:e.y=0>e.y?0:1;break;case THREE.MirroredRepeatWrapping:1===r(a(e.y)%2)?e.y=t(e.y)-e.y:e.y-=a(e.y);}this.flipY&&(e.y=1-e.y)}}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CanvasTexture=function(t,r,a,o,i,e,n,s,p){THREE.Texture.call(this,t,r,a,o,i,e,n,s,p),this.needsUpdate=!0},THREE.CanvasTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CanvasTexture.prototype.constructor=THREE.CanvasTexture,THREE.CubeTexture=function(t,r,a,o,i,e,n,s,p){r=void 0===r?THREE.CubeReflectionMapping:r,THREE.Texture.call(this,t,r,a,o,i,e,n,s,p),this.images=t,this.flipY=!1},THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CubeTexture.prototype.constructor=THREE.CubeTexture,THREE.CubeTexture.prototype.copy=function(e){return THREE.Texture.prototype.copy.call(this,e),this.images=e.images,this},THREE.CompressedTexture=function(t,r,a,o,i,e,n,s,p,l,d){THREE.Texture.call(this,null,e,n,s,p,l,o,i,d),this.image={width:r,height:a},this.mipmaps=t,this.generateMipmaps=this.flipY=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture,THREE.DataTexture=function(t,r,a,o,i,e,n,s,p,l,d){THREE.Texture.call(this,null,e,n,s,p,l,o,i,d),this.image={data:t,width:r,height:a},this.magFilter=void 0===p?THREE.NearestFilter:p,this.minFilter=void 0===l?THREE.NearestFilter:l,this.generateMipmaps=this.flipY=!1},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.constructor=THREE.DataTexture,THREE.VideoTexture=function(t,r,a,o,i,e,n,s,p){function l(){requestAnimationFrame(l),t.readyState===t.HAVE_ENOUGH_DATA&&(d.needsUpdate=!0)}THREE.Texture.call(this,t,r,a,o,i,e,n,s,p),this.generateMipmaps=!1;var d=this;l()},THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype),THREE.VideoTexture.prototype.constructor=THREE.VideoTexture,THREE.Group=function(){THREE.Object3D.call(this),this.type="Group"},THREE.Group.prototype=Object.create(THREE.Object3D.prototype),THREE.Group.prototype.constructor=THREE.Group,THREE.Points=function(e,t){THREE.Object3D.call(this),this.type="Points",this.geometry=void 0===e?new THREE.Geometry:e,this.material=void 0===t?new THREE.PointsMaterial({color:16777215*Math.random()}):t},THREE.Points.prototype=Object.create(THREE.Object3D.prototype),THREE.Points.prototype.constructor=THREE.Points,THREE.Points.prototype.raycast=function(){var t=new THREE.Matrix4,r=new THREE.Ray;return function(o,i){function a(t,a){var e=r.distanceSqToPoint(t);if(e<c){var n=r.closestPointToPoint(t);n.applyMatrix4(s.matrixWorld);var l=o.ray.origin.distanceTo(n);l<o.near||l>o.far||i.push({distance:l,distanceToRay:Math.sqrt(e),point:n.clone(),index:a,face:null,object:s})}}var s=this,e=s.geometry,d=o.params.Points.threshold;if(t.getInverse(this.matrixWorld),r.copy(o.ray).applyMatrix4(t),null===e.boundingBox||!1!==r.isIntersectionBox(e.boundingBox)){var d=d/((this.scale.x+this.scale.y+this.scale.z)/3),c=d*d,d=new THREE.Vector3;if(e instanceof THREE.BufferGeometry){var l=e.index,e=e.attributes.position.array;if(null!==l)for(var u=l.array,l=0,g=u.length,p;l<g;l++)p=u[l],d.fromArray(e,3*p),a(d,p);else for(l=0,u=e.length/3;l<u;l++)d.fromArray(e,3*l),a(d,l)}else for(d=e.vertices,l=0,u=d.length;l<u;l++)a(d[l],l)}}}(),THREE.Points.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},THREE.PointCloud=function(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new THREE.Points(e,t)},THREE.ParticleSystem=function(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new THREE.Points(e,t)},THREE.Line=function(e,t,r){return 1===r?(console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new THREE.LineSegments(e,t)):void(THREE.Object3D.call(this),this.type="Line",this.geometry=void 0===e?new THREE.Geometry:e,this.material=void 0===t?new THREE.LineBasicMaterial({color:16777215*Math.random()}):t)},THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.constructor=THREE.Line,THREE.Line.prototype.raycast=function(){var r=new THREE.Matrix4,a=new THREE.Ray,o=new THREE.Sphere;return function(i,d){var e=i.linePrecision,e=e*e,c=this.geometry;if(null===c.boundingSphere&&c.computeBoundingSphere(),o.copy(c.boundingSphere),o.applyMatrix4(this.matrixWorld),!1!==i.ray.isIntersectionSphere(o)){r.getInverse(this.matrixWorld),a.copy(i.ray).applyMatrix4(r);var u=new THREE.Vector3,y=new THREE.Vector3,x=new THREE.Vector3,v=new THREE.Vector3,m=this instanceof THREE.LineSegments?2:1;if(c instanceof THREE.BufferGeometry){var p=c.index,b=c.attributes;if(null!==p)for(var c=p.array,b=b.position.array,p=0,S=c.length-1,_;p<S;p+=m)_=c[p+1],u.fromArray(b,3*c[p]),y.fromArray(b,3*_),_=a.distanceSqToSegment(u,y,v,x),_>e||(v.applyMatrix4(this.matrixWorld),_=i.ray.origin.distanceTo(v),_<i.near||_>i.far||d.push({distance:_,point:x.clone().applyMatrix4(this.matrixWorld),index:p,face:null,faceIndex:null,object:this}));else for(b=b.position.array,p=0,S=b.length/3-1;p<S;p+=m)u.fromArray(b,3*p),y.fromArray(b,3*p+3),_=a.distanceSqToSegment(u,y,v,x),_>e||(v.applyMatrix4(this.matrixWorld),_=i.ray.origin.distanceTo(v),_<i.near||_>i.far||d.push({distance:_,point:x.clone().applyMatrix4(this.matrixWorld),index:p,face:null,faceIndex:null,object:this}))}else if(c instanceof THREE.Geometry)for(u=c.vertices,y=u.length,p=0;p<y-1;p+=m)_=a.distanceSqToSegment(u[p],u[p+1],v,x),_>e||(v.applyMatrix4(this.matrixWorld),_=i.ray.origin.distanceTo(v),_<i.near||_>i.far||d.push({distance:_,point:x.clone().applyMatrix4(this.matrixWorld),index:p,face:null,faceIndex:null,object:this}))}}}(),THREE.Line.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},THREE.LineStrip=0,THREE.LinePieces=1,THREE.LineSegments=function(e,t){THREE.Line.call(this,e,t),this.type="LineSegments"},THREE.LineSegments.prototype=Object.create(THREE.Line.prototype),THREE.LineSegments.prototype.constructor=THREE.LineSegments,THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.type="Mesh",this.geometry=void 0===e?new THREE.Geometry:e,this.material=void 0===t?new THREE.MeshBasicMaterial({color:16777215*Math.random()}):t,this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.constructor=THREE.Mesh,THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0===this.morphTargetDictionary[e]?(console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0):this.morphTargetDictionary[e]},THREE.Mesh.prototype.raycast=function(){function r(t,r,a,o,i,e,n){return THREE.Triangle.barycoordFromPoint(t,r,a,o,s),i.multiplyScalar(s.x),e.multiplyScalar(s.y),n.multiplyScalar(s.z),i.add(e).add(n),i.clone()}function a(r,a,o,i,n,e,s){var l=r.material;return null===(l.side===THREE.BackSide?o.intersectTriangle(e,n,i,!0,s):o.intersectTriangle(i,n,e,l.side!==THREE.DoubleSide,s))?null:(t.copy(s),t.applyMatrix4(r.matrixWorld),o=a.ray.origin.distanceTo(t),o<a.near||o>a.far?null:{distance:o,point:t.clone(),object:r})}function o(t,o,i,e,s,l,d,p){return y.fromArray(e,3*l),f.fromArray(e,3*d),h.fromArray(e,3*p),(t=a(t,o,i,y,f,h,_))&&(s&&(b.fromArray(s,2*l),n.fromArray(s,2*d),S.fromArray(s,2*p),t.uv=r(_,y,f,h,b,n,S)),t.face=new THREE.Face3(l,d,p,THREE.Triangle.normal(y,f,h)),t.faceIndex=l),t}var i=new THREE.Matrix4,d=new THREE.Ray,e=new THREE.Sphere,y=new THREE.Vector3,f=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3,m=new THREE.Vector3,b=new THREE.Vector2,n=new THREE.Vector2,S=new THREE.Vector2,s=new THREE.Vector3,_=new THREE.Vector3,t=new THREE.Vector3;return function(s,p){var t=this.geometry,u=this.material;if(void 0!==u){null===t.boundingSphere&&t.computeBoundingSphere();var g=this.matrixWorld;if(e.copy(t.boundingSphere),e.applyMatrix4(g),!1!==s.ray.isIntersectionSphere(e)&&(i.getInverse(g),d.copy(s.ray).applyMatrix4(i),null===t.boundingBox||!1!==d.isIntersectionBox(t.boundingBox))){var v,w;if(t instanceof THREE.BufferGeometry){var u=t.index,g=t.attributes,t=g.position.array,P,D;if(void 0!==g.uv&&(v=g.uv.array),null!==u)for(var g=u.array,V=0,k=g.length;V<k;V+=3)(u=g[V],P=g[V+1],D=g[V+2],w=o(this,s,d,t,v,u,P,D))&&(w.faceIndex=Math.floor(V/3),p.push(w));else for(V=0,k=t.length;V<k;V+=9)(u=V/3,P=u+1,D=u+2,w=o(this,s,d,t,v,u,P,D))&&(w.index=u,p.push(w))}else if(t instanceof THREE.Geometry){var g=u instanceof THREE.MeshFaceMaterial,V=!0===g?u.materials:null,k=t.vertices,U,I;P=t.faces,D=t.faceVertexUvs[0],0<D.length&&(v=D);for(var W=0,j=P.length,X;W<j;W++)if(X=P[W],w=!0===g?V[X.materialIndex]:u,void 0!==w){if(D=k[X.a],U=k[X.b],I=k[X.c],!0===w.morphTargets){w=t.morphTargets;var q=this.morphTargetInfluences;y.set(0,0,0),f.set(0,0,0),h.set(0,0,0);for(var Y=0,K=w.length,H;Y<K;Y++)if(H=q[Y],0!==H){var Z=w[Y].vertices;y.addScaledVector(l.subVectors(Z[X.a],D),H),f.addScaledVector(c.subVectors(Z[X.b],U),H),h.addScaledVector(m.subVectors(Z[X.c],I),H)}y.add(D),f.add(U),h.add(I),D=y,U=f,I=h}(w=a(this,s,d,D,U,I,_))&&(v&&(q=v[W],b.copy(q[0]),n.copy(q[1]),S.copy(q[2]),w.uv=r(_,D,U,I,b,n,S)),w.face=X,w.faceIndex=W,p.push(w))}}}}}}(),THREE.Mesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},THREE.Bone=function(e){THREE.Object3D.call(this),this.type="Bone",this.skin=e},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.constructor=THREE.Bone,THREE.Bone.prototype.copy=function(e){return THREE.Object3D.prototype.copy.call(this,e),this.skin=e.skin,this},THREE.Skeleton=function(e,t,r){if(this.useVertexTexture=void 0===r||r,this.identityMatrix=new THREE.Matrix4,e=e||[],this.bones=e.slice(0),this.useVertexTexture?(e=Math.sqrt(4*this.bones.length),e=THREE.Math.nextPowerOfTwo(Math.ceil(e)),this.boneTextureHeight=this.boneTextureWidth=e=Math.max(e,4),this.boneMatrices=new Float32Array(4*(this.boneTextureWidth*this.boneTextureHeight)),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType)):this.boneMatrices=new Float32Array(16*this.bones.length),void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else for(console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[],t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new THREE.Matrix4)},THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var e=0,t=this.bones.length,r;e<t;e++)r=new THREE.Matrix4,this.bones[e]&&r.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(r)},THREE.Skeleton.prototype.pose=function(){for(var e=0,t=this.bones.length,r;e<t;e++)(r=this.bones[e])&&r.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,t=this.bones.length;e<t;e++)(r=this.bones[e])&&(r.parent?(r.matrix.getInverse(r.parent.matrixWorld),r.matrix.multiply(r.matrixWorld)):r.matrix.copy(r.matrixWorld),r.matrix.decompose(r.position,r.quaternion,r.scale))},THREE.Skeleton.prototype.update=function(){var e=new THREE.Matrix4;return function(){for(var t=0,r=this.bones.length;t<r;t++)e.multiplyMatrices(this.bones[t]?this.bones[t].matrixWorld:this.identityMatrix,this.boneInverses[t]),e.flattenToArrayOffset(this.boneMatrices,16*t);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.Skeleton.prototype.clone=function(){return new THREE.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)},THREE.SkinnedMesh=function(t,r,o){if(THREE.Mesh.call(this,t,r),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new THREE.Matrix4,this.bindMatrixInverse=new THREE.Matrix4,t=[],this.geometry&&void 0!==this.geometry.bones){for(var i=0,n=this.geometry.bones.length,s;i<n;++i)s=this.geometry.bones[i],r=new THREE.Bone(this),t.push(r),r.name=s.name,r.position.fromArray(s.pos),r.quaternion.fromArray(s.rotq),void 0!==s.scl&&r.scale.fromArray(s.scl);for(i=0,n=this.geometry.bones.length;i<n;++i)s=this.geometry.bones[i],-1!==s.parent&&null!==s.parent?t[s.parent].add(t[i]):this.add(t[i])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new THREE.Skeleton(t,void 0,o),this.matrixWorld)},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh,THREE.SkinnedMesh.prototype.bind=function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],r=1/t.lengthManhattan();1/0==r?t.set(1):t.multiplyScalar(r)}},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unrecognized bindMode: "+this.bindMode)},THREE.SkinnedMesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material,this.useVertexTexture).copy(this)},THREE.LOD=function(){THREE.Object3D.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}})},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.constructor=THREE.LOD,THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var r=this.levels,a=0;a<r.length&&!(t<r[a].distance);a++);r.splice(a,0,{distance:t,object:e}),this.add(e)},THREE.LOD.prototype.getObjectForDistance=function(e){for(var t=this.levels,r=1,a=t.length;r<a&&!(e<t[r].distance);r++);return t[r-1].object},THREE.LOD.prototype.raycast=function(){var e=new THREE.Vector3;return function(t,r){e.setFromMatrixPosition(this.matrixWorld);var a=t.ray.origin.distanceTo(e);this.getObjectForDistance(a).raycast(t,r)}}(),THREE.LOD.prototype.update=function(){var t=new THREE.Vector3,r=new THREE.Vector3;return function(a){var o=this.levels;if(1<o.length){t.setFromMatrixPosition(a.matrixWorld),r.setFromMatrixPosition(this.matrixWorld),a=t.distanceTo(r),o[0].object.visible=!0;for(var i=1,n=o.length;i<n&&a>=o[i].distance;i++)o[i-1].object.visible=!1,o[i].object.visible=!0;for(;i<n;i++)o[i].object.visible=!1}}}(),THREE.LOD.prototype.copy=function(e){THREE.Object3D.prototype.copy.call(this,e,!1),e=e.levels;for(var t=0,r=e.length,o;t<r;t++)o=e[t],this.addLevel(o.object.clone(),o.distance);return this},THREE.LOD.prototype.toJSON=function(t){t=THREE.Object3D.prototype.toJSON.call(this,t),t.object.levels=[];for(var r=this.levels,o=0,i=r.length,n;o<i;o++)n=r[o],t.object.levels.push({object:n.object.uuid,distance:n.distance});return t},THREE.Sprite=function(){var e=new Uint16Array([0,1,2,0,2,3]),t=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),r=new Float32Array([0,0,1,0,1,1,0,1]),o=new THREE.BufferGeometry;return o.setIndex(new THREE.BufferAttribute(e,1)),o.addAttribute("position",new THREE.BufferAttribute(t,3)),o.addAttribute("uv",new THREE.BufferAttribute(r,2)),function(e){THREE.Object3D.call(this),this.type="Sprite",this.geometry=o,this.material=void 0===e?new THREE.SpriteMaterial:e}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.constructor=THREE.Sprite,THREE.Sprite.prototype.raycast=function(){var e=new THREE.Vector3;return function(t,r){e.setFromMatrixPosition(this.matrixWorld);var a=t.ray.distanceSqToPoint(e);a>this.scale.x*this.scale.y||r.push({distance:Math.sqrt(a),point:this.position,face:null,object:this})}}(),THREE.Sprite.prototype.clone=function(){return new this.constructor(this.material).copy(this)},THREE.Particle=THREE.Sprite,THREE.LensFlare=function(t,r,a,o,i){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==t&&this.add(t,r,a,o,i)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.constructor=THREE.LensFlare,THREE.LensFlare.prototype.add=function(t,r,a,o,i,n){void 0===r&&(r=-1),void 0===a&&(a=0),void 0===n&&(n=1),void 0===i&&(i=new THREE.Color(16777215)),void 0===o&&(o=THREE.NormalBlending),a=Math.min(a,Math.max(0,a)),this.lensFlares.push({texture:t,size:r,distance:a,x:0,y:0,z:0,scale:1,rotation:0,opacity:n,color:i,blending:o})},THREE.LensFlare.prototype.updateLensFlares=function(){var t=this.lensFlares.length,r=2*-this.positionScreen.x,o=2*-this.positionScreen.y,e,i;for(e=0;e<t;e++)i=this.lensFlares[e],i.x=this.positionScreen.x+r*i.distance,i.y=this.positionScreen.y+o*i.distance,i.wantedRotation=.25*(i.x*Math.PI),i.rotation+=.25*(i.wantedRotation-i.rotation)},THREE.LensFlare.prototype.copy=function(e){THREE.Object3D.prototype.copy.call(this,e),this.positionScreen.copy(e.positionScreen),this.customUpdateCallback=e.customUpdateCallback;for(var t=0,r=e.lensFlares.length;t<r;t++)this.lensFlares.push(e.lensFlares[t]);return this},THREE.Scene=function(){THREE.Object3D.call(this),this.type="Scene",this.overrideMaterial=this.fog=null,this.autoUpdate=!0},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.constructor=THREE.Scene,THREE.Scene.prototype.copy=function(e){return THREE.Object3D.prototype.copy.call(this,e),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},THREE.Fog=function(e,t,r){this.name="",this.color=new THREE.Color(e),this.near=void 0===t?1:t,this.far=void 0===r?1E3:r},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0===t?25e-5:t},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.ShaderChunk={},THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n",THREE.ShaderChunk.aomap_fragment="#ifdef USE_AOMAP\n\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n#endif\n",THREE.ShaderChunk.aomap_pars_fragment="#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif",THREE.ShaderChunk.begin_vertex="\nvec3 transformed = vec3( position );\n",THREE.ShaderChunk.beginnormal_vertex="\nvec3 objectNormal = vec3( normal );\n",THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n",THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif",THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif",THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n\tvColor.xyz = color.xyz;\n\n#endif",THREE.ShaderChunk.common="#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\n\n}\n\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\n\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\n\n\tif ( decayExponent > 0.0 ) {\n\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n}\n\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\n\n\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n}\n\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\n\n\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\n\n\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\n\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * G * D;\n\n}\n\nvec3 inputToLinear( in vec3 a ) {\n\n\t#ifdef GAMMA_INPUT\n\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\n\n\t#else\n\n\t\treturn a;\n\n\t#endif\n\n}\n\nvec3 linearToOutput( in vec3 a ) {\n\n\t#ifdef GAMMA_OUTPUT\n\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\n\n\t#else\n\n\t\treturn a;\n\n\t#endif\n\n}\n",THREE.ShaderChunk.defaultnormal_vertex="#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n",THREE.ShaderChunk.displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n\n#endif\n",THREE.ShaderChunk.displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n",THREE.ShaderChunk.emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\n\n\ttotalEmissiveLight *= emissiveColor.rgb;\n\n#endif\n",THREE.ShaderChunk.emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n",THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#else\n\t\tfloat flipNormal = 1.0;\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\n\tenvColor.xyz = inputToLinear( envColor.xyz );\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\n#endif\n",THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t#else\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n#endif",THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif",THREE.ShaderChunk.hemilight_fragment="#if MAX_HEMI_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\ttotalAmbientLight += lightColor;\n\n\t}\n\n#endif\n\n",THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n#endif\n",THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif",THREE.ShaderChunk.lights_lambert_pars_vertex="#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n",THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vec3( 0.0 );\n\n#endif\n\nvec3 normal = normalize( transformedNormal );\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = pointLightColor[ i ];\n\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = spotLightColor[ i ];\n\n\t\tvec3 lightPosition = spotLightPosition[ i ];\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\n\n\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n\t\t\tattenuation *= spotEffect;\n\n\n\t\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\n\n\t\t\t#endif\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = directionalLightColor[ i ];\n\n\t\tvec3 lightDir = directionalLightDirection[ i ];\n\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tvLightFront += lightColor * saturate( dotProduct );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\n\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\n\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n\t\t#endif\n\n\t}\n\n#endif\n",THREE.ShaderChunk.lights_phong_fragment="vec3 viewDir = normalize( vViewPosition );\n\nvec3 totalDiffuseLight = vec3( 0.0 );\nvec3 totalSpecularLight = vec3( 0.0 );\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = pointLightColor[ i ];\n\n\t\tvec3 lightPosition = pointLightPosition[ i ];\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\n\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\n\n\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\n\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = spotLightColor[ i ];\n\n\t\tvec3 lightPosition = spotLightPosition[ i ];\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\n\n\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n\t\t\tattenuation *= spotEffect;\n\n\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\n\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\n\n\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = directionalLightColor[ i ];\n\n\t\tvec3 lightDir = directionalLightDirection[ i ];\n\n\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\n\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\n\n\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\n\n\t}\n\n#endif\n",THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n",THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\n#endif\n",THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif\n",THREE.ShaderChunk.linear_to_gamma_fragment="\n\toutgoingLight = linearToOutput( outgoingLight );\n",THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif",THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\n\n\tdiffuseColor *= texelColor;\n\n#endif\n",THREE.ShaderChunk.map_pars_fragment="#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif",THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\n#endif\n",THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n\n#endif\n",THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n#endif\n",THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif",THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.normal_phong_fragment="#ifndef FLAT_SHADED\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n\t#endif\n\n#else\n\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n",THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n",THREE.ShaderChunk.project_vertex="#ifdef USE_SKINNING\n\n\tvec4 mvPosition = modelViewMatrix * skinned;\n\n#else\n\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n",THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n\tfor ( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tfloat texelSizeY =  1.0 / shadowMapSize[ i ].y;\n\n\t\tfloat shadow = 0.0;\n\n#if defined( POINT_LIGHT_SHADOWS )\n\n\t\tbool isPointLight = shadowDarkness[ i ] < 0.0;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tfloat realShadowDarkness = abs( shadowDarkness[ i ] );\n\n\t\t\tvec3 lightToPosition = vShadowCoord[ i ].xyz;\n\n\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tfloat dp = length( lightToPosition );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\n\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tconst float Dr = 1.25;\n\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tconst float Dr = 2.25;\n\t#endif\n\n\t\t\tfloat os = Dr *  2.0 * texelSizeY;\n\n\t\t\tconst vec3 Gsd = vec3( - 1, 0, 1 );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\tshadow *= realShadowDarkness * ( 1.0 / 21.0 );\n\n\t#else \n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tfloat dp = length( lightToPosition );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\tshadow *= realShadowDarkness;\n\n\t#endif\n\n\t\t} else {\n\n#endif \n\t\t\tfloat texelSizeX =  1.0 / shadowMapSize[ i ].x;\n\n\t\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\n\t\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\t\tbool inFrustum = all( inFrustumVec );\n\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\t\tbool frustumTest = all( frustumTestVec );\n\n\t\t\tif ( frustumTest ) {\n\n\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\n\t\t\t\t/*\n\t\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\n\t\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\t\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\t\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\t\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\t\t\t\tshadow += 1.0;\n\t\t\t\t\t}\n\t\t\t\t\tshadow /= 9.0;\n\t\t\t\t*/\n\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t\tconst float ShadowDelta = 1.0 / 9.0;\n\n\t\t\t\tfloat xPixelOffset = texelSizeX;\n\t\t\t\tfloat yPixelOffset = texelSizeY;\n\n\t\t\t\tfloat dx0 = - 1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = - 1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\n\t\t\t\tfloat fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tshadow *= shadowDarkness[ i ];\n\n\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t\tfloat xPixelOffset = texelSizeX;\n\t\t\t\tfloat yPixelOffset = texelSizeY;\n\n\t\t\t\tfloat dx0 = - 1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = - 1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\n\t\t\t\tdepthKernel[ 0 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[ 0 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[ 0 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[ 1 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[ 1 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[ 1 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[ 2 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[ 2 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[ 2 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[ 0 ] = vec3( lessThan( depthKernel[ 0 ], shadowZ ) );\n\t\t\t\tshadowKernel[ 0 ] *= vec3( 0.25 );\n\n\t\t\t\tshadowKernel[ 1 ] = vec3( lessThan( depthKernel[ 1 ], shadowZ ) );\n\t\t\t\tshadowKernel[ 1 ] *= vec3( 0.25 );\n\n\t\t\t\tshadowKernel[ 2 ] = vec3( lessThan( depthKernel[ 2 ], shadowZ ) );\n\t\t\t\tshadowKernel[ 2 ] *= vec3( 0.25 );\n\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[ i ].xy );\n\n\t\t\t\tshadowKernel[ 0 ] = mix( shadowKernel[ 1 ], shadowKernel[ 0 ], fractionalCoord.x );\n\t\t\t\tshadowKernel[ 1 ] = mix( shadowKernel[ 2 ], shadowKernel[ 1 ], fractionalCoord.x );\n\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[ 0 ][ 1 ], shadowKernel[ 0 ][ 0 ], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[ 0 ][ 2 ], shadowKernel[ 0 ][ 1 ], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[ 1 ][ 1 ], shadowKernel[ 1 ][ 0 ], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[ 1 ][ 2 ], shadowKernel[ 1 ][ 1 ], fractionalCoord.y );\n\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) ) * shadowDarkness[ i ];\n\n\t#else \n\t\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\tshadow = shadowDarkness[ i ];\n\n\t#endif\n\n\t\t\t}\n\n#ifdef SHADOWMAP_DEBUG\n\n\t\t\tif ( inFrustum ) {\n\n\t\t\t\tif ( i == 0 ) {\n\n\t\t\t\t\toutgoingLight *= vec3( 1.0, 0.5, 0.0 );\n\n\t\t\t\t} else if ( i == 1 ) {\n\n\t\t\t\t\toutgoingLight *= vec3( 0.0, 1.0, 0.8 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\toutgoingLight *= vec3( 0.0, 0.5, 1.0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n#endif\n\n#if defined( POINT_LIGHT_SHADOWS )\n\n\t\t}\n\n#endif\n\n\t\tshadowMask = shadowMask * vec3( 1.0 - shadow );\n\n\t}\n\n#endif\n",THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n\t#if defined(POINT_LIGHT_SHADOWS)\n\n\n\t\tvoid adjustShadowValue1K( const float testDepth, const vec4 textureData, const float bias, inout float shadowValue ) {\n\n\t\t\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\t\tif ( testDepth >= dot( textureData, bitSh ) * 1000.0 + bias )\n\t\t\t\tshadowValue += 1.0;\n\n\t\t}\n\n\n\t\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\n\t\t\tvec3 absV = abs( v );\n\n\n\t\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\t\tabsV *= scaleToCube;\n\n\n\t\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\n\n\t\t\tvec2 planar = v.xy;\n\n\t\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\t\tif ( absV.z >= almostOne ) {\n\n\t\t\t\tif ( v.z > 0.0 )\n\t\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\t\tfloat signX = sign( v.x );\n\t\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\t\tfloat signY = sign( v.y );\n\t\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t\t}\n\n\n\t\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t\t}\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n#endif",THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\tfor ( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif",THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n",THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n#endif\n",THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif",THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif",THREE.ShaderChunk.uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif",THREE.ShaderChunk.uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n#endif",THREE.ShaderChunk.uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = uv2;\n\n#endif",THREE.ShaderChunk.uv_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n\tvarying vec2 vUv;\n\n#endif",THREE.ShaderChunk.uv_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n",THREE.ShaderChunk.uv_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#else\n\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n\t#endif\n\n#endif\n",THREE.UniformsUtils={merge:function(t){for(var r={},a=0;a<t.length;a++){var o=this.clone(t[a]),i;for(i in o)r[i]=o[i]}return r},clone:function(t){var r={},a;for(a in t)for(var o in r[a]={},t[a]){var i=t[a][o];r[a][o]=i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix3||i instanceof THREE.Matrix4||i instanceof THREE.Texture?i.clone():Array.isArray(i)?i.slice():i}return r}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98}},aomap:{aoMap:{type:"t",value:null},aoMapIntensity:{type:"f",value:1}},lightmap:{lightMap:{type:"t",value:null},lightMapIntensity:{type:"f",value:1}},emissivemap:{emissiveMap:{type:"t",value:null}},bumpmap:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},displacementmap:{displacementMap:{type:"t",value:null},displacementScale:{type:"f",value:1},displacementBias:{type:"f",value:0}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},pointLightDecay:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]},spotLightDecay:{type:"fv1",value:[]}},points:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.aomap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tvec3 totalAmbientLight = vec3( 1.0 );\n\tvec3 shadowMask = vec3( 1.0 );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.aomap_fragment,THREE.ShaderChunk.shadowmap_fragment,"\toutgoingLight = diffuseColor.rgb * totalAmbientLight * shadowMask;",THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nuniform vec3 ambientLightColor;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tvec3 totalAmbientLight = ambientLightColor;\n\tvec3 shadowMask = vec3( 1.0 );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.shadowmap_fragment,"\t#ifdef DOUBLE_SIDED\n\t\tif ( gl_FrontFacing )\n\t\t\toutgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;\n\t\telse\n\t\t\toutgoingLight += diffuseColor.rgb * ( vLightBack * shadowMask + totalAmbientLight ) + emissive;\n\t#else\n\t\toutgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;\n\t#endif",THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.displacementmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.displacementmap_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = - mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.aomap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.emissivemap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tvec3 totalAmbientLight = ambientLightColor;\n\tvec3 totalEmissiveLight = emissive;\n\tvec3 shadowMask = vec3( 1.0 );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.normal_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.hemilight_fragment,THREE.ShaderChunk.aomap_fragment,THREE.ShaderChunk.emissivemap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.shadowmap_fragment,"totalDiffuseLight *= shadowMask;\ntotalSpecularLight *= shadowMask;\n#ifdef METAL\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\n#else\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\n#endif",THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},points:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.points,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( psColor, opacity );\n\tvec3 shadowMask = vec3( 1.0 );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.shadowmap_fragment,"\toutgoingLight = diffuseColor.rgb * shadowMask;",THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,"\toutgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\n\tgl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\nvec3 direction = normalize( vWorldPosition );\nvec2 sampleUV;\nsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\nsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\ngl_FragColor = texture2D( tEquirect, sampleUV );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n\t#else\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n\t#endif\n}"].join("\n")},distanceRGBA:{uniforms:{lightPos:{type:"v3",value:new THREE.Vector3(0,0,0)}},vertexShader:["varying vec4 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.worldpos_vertex,"vWorldPosition = worldPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 lightPos;\nvarying vec4 vWorldPosition;",THREE.ShaderChunk.common,"vec4 pack1K ( float depth ) {\n   depth /= 1000.0;\n   const vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = fract( depth * bitSh );\n\tres -= res.xxyz * bitMsk;\n\treturn res; \n}\nfloat unpack1K ( vec4 color ) {\n\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\treturn dot( color, bitSh ) * 1000.0;\n}\nvoid main () {\n\tgl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );\n}"].join("\n")}},THREE.WebGLRenderer=function(o){function i(e,t,r,o){!0===R&&(e*=o,t*=o,r*=o),Re.clearColor(e,t,r,o)}function b(){S.init(),Re.viewport(ve,be,Se,_e),i(oe.r,oe.g,oe.b,U)}function c(){fe=ue=null,ye="",ge=-1,Y=!0,S.reset()}function d(e){e.preventDefault(),c(),b(),ke.clear()}function _(e){e=e.target,e.removeEventListener("dispose",_);a:{var t=ke.get(e);if(e.image&&t.__image__webglTextureCube)Re.deleteTexture(t.__image__webglTextureCube);else{if(void 0===t.__webglInit)break a;Re.deleteTexture(t.__webglTexture)}ke.delete(e)}we.textures--}function P(e){e=e.target,e.removeEventListener("dispose",P);var t=ke.get(e),r=ke.get(e.texture);if(e&&void 0!==r.__webglTexture){if(Re.deleteTexture(r.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(r=0;6>r;r++)Re.deleteFramebuffer(t.__webglFramebuffer[r]),Re.deleteRenderbuffer(t.__webglRenderbuffer[r]);else Re.deleteFramebuffer(t.__webglFramebuffer),Re.deleteRenderbuffer(t.__webglRenderbuffer);ke.delete(e.texture),ke.delete(e)}we.textures--}function f(e){e=e.target,e.removeEventListener("dispose",f),h(e),ke.delete(e)}function h(e){var t=ke.get(e).program;e.program=void 0,void 0!==t&&W.releaseProgram(t)}function g(e,t){return t[0]-e[0]}function l(e,t){return e.object.renderOrder===t.object.renderOrder?e.material.id===t.material.id?e.z===t.z?e.id-t.id:e.z-t.z:e.material.id-t.material.id:e.object.renderOrder-t.object.renderOrder}function m(e,t){return e.object.renderOrder===t.object.renderOrder?e.z===t.z?e.id-t.id:t.z-e.z:e.object.renderOrder-t.object.renderOrder}function p(t,r,a,o,i){var e;a.transparent?(o=le,e=++Z):(o=ne,e=++se),e=o[e],void 0===e?(e={id:t.id,object:t,geometry:r,material:a,z:Ae.z,group:i},o.push(e)):(e.id=t.id,e.object=t,e.geometry=r,e.material=a,e.z=Ae.z,e.group=i)}function n(t,r){if(!1!==t.visible){if(0!=(t.channels.mask&r.channels.mask))if(t instanceof THREE.Light)ie.push(t);else if(t instanceof THREE.Sprite)de.push(t);else if(t instanceof THREE.LensFlare)ce.push(t);else if(t instanceof THREE.ImmediateRenderObject)!0===me.sortObjects&&(Ae.setFromMatrixPosition(t.matrixWorld),Ae.applyProjection(Ce)),p(t,null,t.material,Ae.z,null);else if((t instanceof THREE.Mesh||t instanceof THREE.Line||t instanceof THREE.Points)&&(t instanceof THREE.SkinnedMesh&&t.skeleton.update(),!1===t.frustumCulled||!0===Ee.intersectsObject(t))){var a=t.material;if(!0===a.visible){!0===me.sortObjects&&(Ae.setFromMatrixPosition(t.matrixWorld),Ae.applyProjection(Ce));var o=I.update(t);if(a instanceof THREE.MeshFaceMaterial)for(var i=o.groups,e=a.materials,a=0,s=i.length;a<s;a++){var m=i[a],u=e[m.materialIndex];!0===u.visible&&p(t,o,u,Ae.z,m)}else p(t,o,a,Ae.z,null)}}for(o=t.children,a=0,s=o.length;a<s;a++)n(o[a],r)}}function k(r,a,o,i,s){for(var e=0,p=r.length;e<p;e++){var d=r[e],c=d.object,l=d.geometry,u=void 0===s?d.material:s,d=d.group;if(c.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,c.matrixWorld),c.normalMatrix.getNormalMatrix(c.modelViewMatrix),c instanceof THREE.ImmediateRenderObject){j(u);var n=t(a,o,i,u,c);ye="",c.render(function(e){me.renderBufferImmediate(e,n,u)})}else me.renderBufferDirect(a,o,i,l,u,c,d)}}function j(e){e.side===THREE.DoubleSide?S.disable(Re.CULL_FACE):S.enable(Re.CULL_FACE),S.setFlipSided(e.side===THREE.BackSide),!0===e.transparent?S.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha):S.setBlending(THREE.NoBlending),S.setDepthFunc(e.depthFunc),S.setDepthTest(e.depthTest),S.setDepthWrite(e.depthWrite),S.setColorWrite(e.colorWrite),S.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)}function t(r,o,i,l,_){xe=0;var A=ke.get(l);if(l.needsUpdate||!A.program){a:{var L=ke.get(l),z=W.getParameters(l,o,i,_),j=W.getProgramCode(l,z),re=L.program,ae=!0;if(void 0===re)l.addEventListener("dispose",f);else if(re.code!==j)h(l);else if(void 0!==z.shaderID)break a;else ae=!1;if(ae&&(z.shaderID?(re=THREE.ShaderLib[z.shaderID],L.__webglShader={name:l.type,uniforms:THREE.UniformsUtils.clone(re.uniforms),vertexShader:re.vertexShader,fragmentShader:re.fragmentShader}):L.__webglShader={name:l.type,uniforms:l.uniforms,vertexShader:l.vertexShader,fragmentShader:l.fragmentShader},l.__webglShader=L.__webglShader,re=W.acquireProgram(l,z,j),L.program=re,l.program=re),z=re.getAttributes(),l.morphTargets)for(j=l.numSupportedMorphTargets=0;j<me.maxMorphTargets;j++)0<=z["morphTarget"+j]&&l.numSupportedMorphTargets++;if(l.morphNormals)for(j=l.numSupportedMorphNormals=0;j<me.maxMorphNormals;j++)0<=z["morphNormal"+j]&&l.numSupportedMorphNormals++;L.uniformsList=[];var z=L.program.getUniforms(),oe;for(oe in L.__webglShader.uniforms)(j=z[oe])&&L.uniformsList.push([L.__webglShader.uniforms[oe],j])}l.needsUpdate=!1}if(j=re=ae=!1,L=A.program,oe=L.getUniforms(),z=A.__webglShader.uniforms,L.id!==ue&&(Re.useProgram(L.program),ue=L.id,j=re=ae=!0),l.id!==ge&&(-1===ge&&(j=!0),ge=l.id,re=!0),(ae||r!==fe)&&(Re.uniformMatrix4fv(oe.projectionMatrix,!1,r.projectionMatrix.elements),Ve.logarithmicDepthBuffer&&Re.uniform1f(oe.logDepthBufFC,2/(Math.log(r.far+1)/Math.LN2)),r!==fe&&(fe=r),(l instanceof THREE.ShaderMaterial||l instanceof THREE.MeshPhongMaterial||l.envMap)&&void 0!==oe.cameraPosition&&(Ae.setFromMatrixPosition(r.matrixWorld),Re.uniform3f(oe.cameraPosition,Ae.x,Ae.y,Ae.z)),(l instanceof THREE.MeshPhongMaterial||l instanceof THREE.MeshLambertMaterial||l instanceof THREE.MeshBasicMaterial||l instanceof THREE.ShaderMaterial||l.skinning)&&void 0!==oe.viewMatrix&&Re.uniformMatrix4fv(oe.viewMatrix,!1,r.matrixWorldInverse.elements)),l.skinning&&(_.bindMatrix&&void 0!==oe.bindMatrix&&Re.uniformMatrix4fv(oe.bindMatrix,!1,_.bindMatrix.elements),_.bindMatrixInverse&&void 0!==oe.bindMatrixInverse&&Re.uniformMatrix4fv(oe.bindMatrixInverse,!1,_.bindMatrixInverse.elements),Ve.floatVertexTextures&&_.skeleton&&_.skeleton.useVertexTexture?(void 0!==oe.boneTexture&&(ae=u(),Re.uniform1i(oe.boneTexture,ae),me.setTexture(_.skeleton.boneTexture,ae)),void 0!==oe.boneTextureWidth&&Re.uniform1i(oe.boneTextureWidth,_.skeleton.boneTextureWidth),void 0!==oe.boneTextureHeight&&Re.uniform1i(oe.boneTextureHeight,_.skeleton.boneTextureHeight)):_.skeleton&&_.skeleton.boneMatrices&&void 0!==oe.boneGlobalMatrices&&Re.uniformMatrix4fv(oe.boneGlobalMatrices,!1,_.skeleton.boneMatrices)),re){if(i&&l.fog&&(z.fogColor.value=i.color,i instanceof THREE.Fog?(z.fogNear.value=i.near,z.fogFar.value=i.far):i instanceof THREE.FogExp2&&(z.fogDensity.value=i.density)),l instanceof THREE.MeshPhongMaterial||l instanceof THREE.MeshLambertMaterial||l.lights){if(Y){var j=!0,ie=ae=0,ne=0,se=Le,le=r.matrixWorldInverse,E=se.directional.colors,B=se.directional.positions,K=se.point.colors,O=se.point.positions,N=se.point.distances,M=se.point.decays,G=se.spot.colors,J=se.spot.positions,H=se.spot.distances,Q=se.spot.directions,I=se.spot.anglesCos,pe=se.spot.exponents,T=se.spot.decays,R=se.hemi.skyColors,Z=se.hemi.groundColors,de=se.hemi.positions,S=0,ce=0,he=0,ye=0,ve=0,be=0,Se=0,_e=0,Te=Me=0,Me,Ee,Ce,we;for(i=we=Te=0,re=o.length;i<re;i++)Me=o[i],Ee=Me.color,Ce=Me.intensity,we=Me.distance,Me instanceof THREE.AmbientLight?Me.visible&&(ae+=Ee.r,ie+=Ee.g,ne+=Ee.b):Me instanceof THREE.DirectionalLight?(ve+=1,Me.visible&&(V.setFromMatrixPosition(Me.matrixWorld),Ae.setFromMatrixPosition(Me.target.matrixWorld),V.sub(Ae),V.transformDirection(le),Me=3*S,B[Me+0]=V.x,B[Me+1]=V.y,B[Me+2]=V.z,w(E,Me,Ee,Ce),S+=1)):Me instanceof THREE.PointLight?(be+=1,Me.visible&&(Te=3*ce,w(K,Te,Ee,Ce),Ae.setFromMatrixPosition(Me.matrixWorld),Ae.applyMatrix4(le),O[Te+0]=Ae.x,O[Te+1]=Ae.y,O[Te+2]=Ae.z,N[ce]=we,M[ce]=0===Me.distance?0:Me.decay,ce+=1)):Me instanceof THREE.SpotLight?(Se+=1,Me.visible&&(Te=3*he,w(G,Te,Ee,Ce),V.setFromMatrixPosition(Me.matrixWorld),Ae.copy(V).applyMatrix4(le),J[Te+0]=Ae.x,J[Te+1]=Ae.y,J[Te+2]=Ae.z,H[he]=we,Ae.setFromMatrixPosition(Me.target.matrixWorld),V.sub(Ae),V.transformDirection(le),Q[Te+0]=V.x,Q[Te+1]=V.y,Q[Te+2]=V.z,I[he]=Math.cos(Me.angle),pe[he]=Me.exponent,T[he]=0===Me.distance?0:Me.decay,he+=1)):Me instanceof THREE.HemisphereLight&&(_e+=1,Me.visible&&(V.setFromMatrixPosition(Me.matrixWorld),V.transformDirection(le),we=3*ye,de[we+0]=V.x,de[we+1]=V.y,de[we+2]=V.z,Ee=Me.color,Me=Me.groundColor,w(R,we,Ee,Ce),w(Z,we,Me,Ce),ye+=1));for(i=3*S,re=ee(E.length,3*ve);i<re;i++)E[i]=0;for(i=3*ce,re=ee(K.length,3*be);i<re;i++)K[i]=0;for(i=3*he,re=ee(G.length,3*Se);i<re;i++)G[i]=0;for(i=3*ye,re=ee(R.length,3*_e);i<re;i++)R[i]=0;for(i=3*ye,re=ee(Z.length,3*_e);i<re;i++)Z[i]=0;se.directional.length=S,se.point.length=ce,se.spot.length=he,se.hemi.length=ye,se.ambient[0]=ae,se.ambient[1]=ie,se.ambient[2]=ne,Y=!1}j?(j=Le,z.ambientLightColor.value=j.ambient,z.directionalLightColor.value=j.directional.colors,z.directionalLightDirection.value=j.directional.positions,z.pointLightColor.value=j.point.colors,z.pointLightPosition.value=j.point.positions,z.pointLightDistance.value=j.point.distances,z.pointLightDecay.value=j.point.decays,z.spotLightColor.value=j.spot.colors,z.spotLightPosition.value=j.spot.positions,z.spotLightDistance.value=j.spot.distances,z.spotLightDirection.value=j.spot.directions,z.spotLightAngleCos.value=j.spot.anglesCos,z.spotLightExponent.value=j.spot.exponents,z.spotLightDecay.value=j.spot.decays,z.hemisphereLightSkyColor.value=j.hemi.skyColors,z.hemisphereLightGroundColor.value=j.hemi.groundColors,z.hemisphereLightDirection.value=j.hemi.positions,e(z,!0)):e(z,!1)}if(l instanceof THREE.MeshBasicMaterial||l instanceof THREE.MeshLambertMaterial||l instanceof THREE.MeshPhongMaterial){z.opacity.value=l.opacity,z.diffuse.value=l.color,l.emissive&&(z.emissive.value=l.emissive),z.map.value=l.map,z.specularMap.value=l.specularMap,z.alphaMap.value=l.alphaMap,l.aoMap&&(z.aoMap.value=l.aoMap,z.aoMapIntensity.value=l.aoMapIntensity);var Pe;l.map?Pe=l.map:l.specularMap?Pe=l.specularMap:l.displacementMap?Pe=l.displacementMap:l.normalMap?Pe=l.normalMap:l.bumpMap?Pe=l.bumpMap:l.alphaMap?Pe=l.alphaMap:l.emissiveMap&&(Pe=l.emissiveMap),void 0!==Pe&&(Pe instanceof THREE.WebGLRenderTarget&&(Pe=Pe.texture),j=Pe.offset,Pe=Pe.repeat,z.offsetRepeat.value.set(j.x,j.y,Pe.x,Pe.y)),z.envMap.value=l.envMap,z.flipEnvMap.value=l.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,z.reflectivity.value=l.reflectivity,z.refractionRatio.value=l.refractionRatio}if(l instanceof THREE.LineBasicMaterial?(z.diffuse.value=l.color,z.opacity.value=l.opacity):l instanceof THREE.LineDashedMaterial?(z.diffuse.value=l.color,z.opacity.value=l.opacity,z.dashSize.value=l.dashSize,z.totalSize.value=l.dashSize+l.gapSize,z.scale.value=l.scale):l instanceof THREE.PointsMaterial?(z.psColor.value=l.color,z.opacity.value=l.opacity,z.size.value=l.size,z.scale.value=te.height/2,z.map.value=l.map,null!==l.map&&(r=l.map.offset,Pe=l.map.repeat,z.offsetRepeat.value.set(r.x,r.y,Pe.x,Pe.y))):l instanceof THREE.MeshPhongMaterial?(z.specular.value=l.specular,z.shininess.value=ee(l.shininess,1E-4),l.lightMap&&(z.lightMap.value=l.lightMap,z.lightMapIntensity.value=l.lightMapIntensity),l.emissiveMap&&(z.emissiveMap.value=l.emissiveMap),l.bumpMap&&(z.bumpMap.value=l.bumpMap,z.bumpScale.value=l.bumpScale),l.normalMap&&(z.normalMap.value=l.normalMap,z.normalScale.value.copy(l.normalScale)),l.displacementMap&&(z.displacementMap.value=l.displacementMap,z.displacementScale.value=l.displacementScale,z.displacementBias.value=l.displacementBias)):l instanceof THREE.MeshDepthMaterial?(z.mNear.value=r.near,z.mFar.value=r.far,z.opacity.value=l.opacity):l instanceof THREE.MeshNormalMaterial&&(z.opacity.value=l.opacity),_.receiveShadow&&!l._shadowPass&&z.shadowMatrix)for(r=l=0,Pe=o.length;r<Pe;r++)j=o[r],!0===j.castShadow&&(j instanceof THREE.PointLight||j instanceof THREE.SpotLight||j instanceof THREE.DirectionalLight)&&(i=j.shadow,j instanceof THREE.PointLight?(Ae.setFromMatrixPosition(j.matrixWorld).negate(),i.matrix.identity().setPosition(Ae),z.shadowDarkness.value[l]=-i.darkness):z.shadowDarkness.value[l]=i.darkness,z.shadowMatrix.value[l]=i.matrix,z.shadowMap.value[l]=i.map,z.shadowMapSize.value[l]=i.mapSize,z.shadowBias.value[l]=i.bias,l++);for(o=A.uniformsList,A=0,l=o.length;A<l;A++)if(r=o[A][0],!1!==r.needsUpdate)switch(z=r.type,i=r.value,Pe=o[A][1],z){case"1i":Re.uniform1i(Pe,i);break;case"1f":Re.uniform1f(Pe,i);break;case"2f":Re.uniform2f(Pe,i[0],i[1]);break;case"3f":Re.uniform3f(Pe,i[0],i[1],i[2]);break;case"4f":Re.uniform4f(Pe,i[0],i[1],i[2],i[3]);break;case"1iv":Re.uniform1iv(Pe,i);break;case"3iv":Re.uniform3iv(Pe,i);break;case"1fv":Re.uniform1fv(Pe,i);break;case"2fv":Re.uniform2fv(Pe,i);break;case"3fv":Re.uniform3fv(Pe,i);break;case"4fv":Re.uniform4fv(Pe,i);break;case"Matrix3fv":Re.uniformMatrix3fv(Pe,!1,i);break;case"Matrix4fv":Re.uniformMatrix4fv(Pe,!1,i);break;case"i":Re.uniform1i(Pe,i);break;case"f":Re.uniform1f(Pe,i);break;case"v2":Re.uniform2f(Pe,i.x,i.y);break;case"v3":Re.uniform3f(Pe,i.x,i.y,i.z);break;case"v4":Re.uniform4f(Pe,i.x,i.y,i.z,i.w);break;case"c":Re.uniform3f(Pe,i.r,i.g,i.b);break;case"iv1":Re.uniform1iv(Pe,i);break;case"iv":Re.uniform3iv(Pe,i);break;case"fv1":Re.uniform1fv(Pe,i);break;case"fv":Re.uniform3fv(Pe,i);break;case"v2v":for(void 0===r._array&&(r._array=new Float32Array(2*i.length)),re=z=0,j=i.length;z<j;z++,re+=2)r._array[re+0]=i[z].x,r._array[re+1]=i[z].y;Re.uniform2fv(Pe,r._array);break;case"v3v":for(void 0===r._array&&(r._array=new Float32Array(3*i.length)),re=z=0,j=i.length;z<j;z++,re+=3)r._array[re+0]=i[z].x,r._array[re+1]=i[z].y,r._array[re+2]=i[z].z;Re.uniform3fv(Pe,r._array);break;case"v4v":for(void 0===r._array&&(r._array=new Float32Array(4*i.length)),re=z=0,j=i.length;z<j;z++,re+=4)r._array[re+0]=i[z].x,r._array[re+1]=i[z].y,r._array[re+2]=i[z].z,r._array[re+3]=i[z].w;Re.uniform4fv(Pe,r._array);break;case"m3":Re.uniformMatrix3fv(Pe,!1,i.elements);break;case"m3v":for(void 0===r._array&&(r._array=new Float32Array(9*i.length)),z=0,j=i.length;z<j;z++)i[z].flattenToArrayOffset(r._array,9*z);Re.uniformMatrix3fv(Pe,!1,r._array);break;case"m4":Re.uniformMatrix4fv(Pe,!1,i.elements);break;case"m4v":for(void 0===r._array&&(r._array=new Float32Array(16*i.length)),z=0,j=i.length;z<j;z++)i[z].flattenToArrayOffset(r._array,16*z);Re.uniformMatrix4fv(Pe,!1,r._array);break;case"t":if(re=u(),Re.uniform1i(Pe,re),!i)continue;i instanceof THREE.CubeTexture||Array.isArray(i.image)&&6===i.image.length?y(i,re):i instanceof THREE.WebGLRenderTargetCube?D(i.texture,re):i instanceof THREE.WebGLRenderTarget?me.setTexture(i.texture,re):me.setTexture(i,re);break;case"tv":for(void 0===r._array&&(r._array=[]),z=0,j=r.value.length;z<j;z++)r._array[z]=u();for(Re.uniform1iv(Pe,r._array),z=0,j=r.value.length;z<j;z++)i=r.value[z],re=r._array[z],i&&(i instanceof THREE.CubeTexture||i.image instanceof Array&&6===i.image.length?y(i,re):i instanceof THREE.WebGLRenderTarget?me.setTexture(i.texture,re):i instanceof THREE.WebGLRenderTargetCube?D(i.texture,re):me.setTexture(i,re));break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+z);}}return Re.uniformMatrix4fv(oe.modelViewMatrix,!1,_.modelViewMatrix.elements),oe.normalMatrix&&Re.uniformMatrix3fv(oe.normalMatrix,!1,_.normalMatrix.elements),void 0!==oe.modelMatrix&&Re.uniformMatrix4fv(oe.modelMatrix,!1,_.matrixWorld.elements),L}function e(e,t){e.ambientLightColor.needsUpdate=t,e.directionalLightColor.needsUpdate=t,e.directionalLightDirection.needsUpdate=t,e.pointLightColor.needsUpdate=t,e.pointLightPosition.needsUpdate=t,e.pointLightDistance.needsUpdate=t,e.pointLightDecay.needsUpdate=t,e.spotLightColor.needsUpdate=t,e.spotLightPosition.needsUpdate=t,e.spotLightDistance.needsUpdate=t,e.spotLightDirection.needsUpdate=t,e.spotLightAngleCos.needsUpdate=t,e.spotLightExponent.needsUpdate=t,e.spotLightDecay.needsUpdate=t,e.hemisphereLightSkyColor.needsUpdate=t,e.hemisphereLightGroundColor.needsUpdate=t,e.hemisphereLightDirection.needsUpdate=t}function u(){var e=xe;return e>=Ve.maxTextures&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+Ve.maxTextures),xe+=1,e}function w(e,t,r,a){e[t+0]=r.r*a,e[t+1]=r.g*a,e[t+2]=r.b*a}function v(e,t,r){r?(Re.texParameteri(e,Re.TEXTURE_WRAP_S,C(t.wrapS)),Re.texParameteri(e,Re.TEXTURE_WRAP_T,C(t.wrapT)),Re.texParameteri(e,Re.TEXTURE_MAG_FILTER,C(t.magFilter)),Re.texParameteri(e,Re.TEXTURE_MIN_FILTER,C(t.minFilter))):(Re.texParameteri(e,Re.TEXTURE_WRAP_S,Re.CLAMP_TO_EDGE),Re.texParameteri(e,Re.TEXTURE_WRAP_T,Re.CLAMP_TO_EDGE),t.wrapS===THREE.ClampToEdgeWrapping&&t.wrapT===THREE.ClampToEdgeWrapping||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",t),Re.texParameteri(e,Re.TEXTURE_MAG_FILTER,F(t.magFilter)),Re.texParameteri(e,Re.TEXTURE_MIN_FILTER,F(t.minFilter)),t.minFilter!==THREE.NearestFilter&&t.minFilter!==THREE.LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",t)),(r=De.get("EXT_texture_filter_anisotropic"))&&(t.type!==THREE.FloatType||null!==De.get("OES_texture_float_linear"))&&(t.type!==THREE.HalfFloatType||null!==De.get("OES_texture_half_float_linear"))&&(1<t.anisotropy||ke.get(t).__currentAnisotropy)&&(Re.texParameterf(e,r.TEXTURE_MAX_ANISOTROPY_EXT,N(t.anisotropy,me.getMaxAnisotropy())),ke.get(t).__currentAnisotropy=t.anisotropy)}function s(e,t){if(e.width>t||e.height>t){var r=t/ee(e.width,e.height),a=document.createElement("canvas");return a.width=z(e.width*r),a.height=z(e.height*r),a.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,a.width,a.height),console.warn("THREE.WebGLRenderer: image is too big ("+e.width+"x"+e.height+"). Resized to "+a.width+"x"+a.height,e),a}return e}function x(e){return THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height)}function y(t,r){var a=ke.get(t);if(6===t.image.length)if(0<t.version&&a.__version!==t.version){a.__image__webglTextureCube||(t.addEventListener("dispose",_),a.__image__webglTextureCube=Re.createTexture(),we.textures++),S.activeTexture(Re.TEXTURE0+r),S.bindTexture(Re.TEXTURE_CUBE_MAP,a.__image__webglTextureCube),Re.pixelStorei(Re.UNPACK_FLIP_Y_WEBGL,t.flipY);for(var o=t instanceof THREE.CompressedTexture,i=t.image[0]instanceof THREE.DataTexture,e=[],d=0;6>d;d++)e[d]=!me.autoScaleCubemaps||o||i?i?t.image[d].image:t.image[d]:s(t.image[d],Ve.maxCubemapSize);var c=x(e[0]),u=C(t.format),l=C(t.type);for(v(Re.TEXTURE_CUBE_MAP,t,c),d=0;6>d;d++)if(o)for(var n=e[d].mipmaps,g=0,y=n.length,f;g<y;g++)f=n[g],t.format!==THREE.RGBAFormat&&t.format!==THREE.RGBFormat?-1<S.getCompressedTextureFormats().indexOf(u)?S.compressedTexImage2D(Re.TEXTURE_CUBE_MAP_POSITIVE_X+d,g,u,f.width,f.height,0,f.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()"):S.texImage2D(Re.TEXTURE_CUBE_MAP_POSITIVE_X+d,g,u,f.width,f.height,0,u,l,f.data);else i?S.texImage2D(Re.TEXTURE_CUBE_MAP_POSITIVE_X+d,0,u,e[d].width,e[d].height,0,u,l,e[d].data):S.texImage2D(Re.TEXTURE_CUBE_MAP_POSITIVE_X+d,0,u,u,l,e[d]);t.generateMipmaps&&c&&Re.generateMipmap(Re.TEXTURE_CUBE_MAP),a.__version=t.version,t.onUpdate&&t.onUpdate(t)}else S.activeTexture(Re.TEXTURE0+r),S.bindTexture(Re.TEXTURE_CUBE_MAP,a.__image__webglTextureCube)}function D(e,t){S.activeTexture(Re.TEXTURE0+t),S.bindTexture(Re.TEXTURE_CUBE_MAP,ke.get(e).__webglTexture)}function A(e,t,r){Re.bindFramebuffer(Re.FRAMEBUFFER,e),Re.framebufferTexture2D(Re.FRAMEBUFFER,Re.COLOR_ATTACHMENT0,r,ke.get(t.texture).__webglTexture,0)}function B(e,t){Re.bindRenderbuffer(Re.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(Re.renderbufferStorage(Re.RENDERBUFFER,Re.DEPTH_COMPONENT16,t.width,t.height),Re.framebufferRenderbuffer(Re.FRAMEBUFFER,Re.DEPTH_ATTACHMENT,Re.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(Re.renderbufferStorage(Re.RENDERBUFFER,Re.DEPTH_STENCIL,t.width,t.height),Re.framebufferRenderbuffer(Re.FRAMEBUFFER,Re.DEPTH_STENCIL_ATTACHMENT,Re.RENDERBUFFER,e)):Re.renderbufferStorage(Re.RENDERBUFFER,Re.RGBA4,t.width,t.height)}function F(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?Re.NEAREST:Re.LINEAR}function C(e){var t;if(e===THREE.RepeatWrapping)return Re.REPEAT;if(e===THREE.ClampToEdgeWrapping)return Re.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return Re.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return Re.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return Re.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return Re.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return Re.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return Re.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return Re.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return Re.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return Re.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return Re.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return Re.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return Re.BYTE;if(e===THREE.ShortType)return Re.SHORT;if(e===THREE.UnsignedShortType)return Re.UNSIGNED_SHORT;if(e===THREE.IntType)return Re.INT;if(e===THREE.UnsignedIntType)return Re.UNSIGNED_INT;if(e===THREE.FloatType)return Re.FLOAT;if(t=De.get("OES_texture_half_float"),null!==t&&e===THREE.HalfFloatType)return t.HALF_FLOAT_OES;if(e===THREE.AlphaFormat)return Re.ALPHA;if(e===THREE.RGBFormat)return Re.RGB;if(e===THREE.RGBAFormat)return Re.RGBA;if(e===THREE.LuminanceFormat)return Re.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return Re.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return Re.FUNC_ADD;if(e===THREE.SubtractEquation)return Re.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return Re.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return Re.ZERO;if(e===THREE.OneFactor)return Re.ONE;if(e===THREE.SrcColorFactor)return Re.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return Re.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return Re.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return Re.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return Re.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return Re.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return Re.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return Re.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return Re.SRC_ALPHA_SATURATE;if(t=De.get("WEBGL_compressed_texture_s3tc"),null!==t){if(e===THREE.RGB_S3TC_DXT1_Format)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t=De.get("WEBGL_compressed_texture_pvrtc"),null!==t){if(e===THREE.RGB_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===THREE.RGB_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===THREE.RGBA_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===THREE.RGBA_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t=De.get("EXT_blend_minmax"),null!==t){if(e===THREE.MinEquation)return t.MIN_EXT;if(e===THREE.MaxEquation)return t.MAX_EXT}return 0}var N=Math.min,z=Math.floor,ee=Math.max;console.log("THREE.WebGLRenderer",THREE.REVISION),o=o||{};var te=void 0===o.canvas?document.createElement("canvas"):o.canvas,L=void 0===o.context?null:o.context,q=te.width,Q=te.height,J=1,re=void 0!==o.alpha&&o.alpha,ae=!(void 0!==o.depth)||o.depth,T=!(void 0!==o.stencil)||o.stencil,H=void 0!==o.antialias&&o.antialias,R=!(void 0!==o.premultipliedAlpha)||o.premultipliedAlpha,G=void 0!==o.preserveDrawingBuffer&&o.preserveDrawingBuffer,oe=new THREE.Color(0),U=0,ie=[],ne=[],se=-1,le=[],Z=-1,pe=new Float32Array(8),de=[],ce=[];this.domElement=te,this.context=null,this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.gammaFactor=2,this.gammaOutput=this.gammaInput=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0;var me=this,ue=null,he=null,ge=-1,ye="",fe=null,xe=0,ve=0,be=0,Se=te.width,_e=te.height,Te=0,Me=0,Ee=new THREE.Frustum,Ce=new THREE.Matrix4,Ae=new THREE.Vector3,V=new THREE.Vector3,Y=!0,Le={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[],decays:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[],decays:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},we={geometries:0,textures:0},Pe={calls:0,vertices:0,faces:0,points:0};this.info={render:Pe,memory:we,programs:null};var Re;try{if(re={alpha:re,depth:ae,stencil:T,antialias:H,premultipliedAlpha:R,preserveDrawingBuffer:G},Re=L||te.getContext("webgl",re)||te.getContext("experimental-webgl",re),null===Re){if(null!==te.getContext("webgl"))throw"Error creating WebGL context with your selected attributes.";throw"Error creating WebGL context."}te.addEventListener("webglcontextlost",d,!1)}catch(e){console.error("THREE.WebGLRenderer: "+e)}var De=new THREE.WebGLExtensions(Re);De.get("OES_texture_float"),De.get("OES_texture_float_linear"),De.get("OES_texture_half_float"),De.get("OES_texture_half_float_linear"),De.get("OES_standard_derivatives"),De.get("ANGLE_instanced_arrays"),De.get("OES_element_index_uint")&&(THREE.BufferGeometry.MaxIndex=4294967296);var Ve=new THREE.WebGLCapabilities(Re,De,o),S=new THREE.WebGLState(Re,De,C),ke=new THREE.WebGLProperties,I=new THREE.WebGLObjects(Re,ke,this.info),W=new THREE.WebGLPrograms(this,Ve);this.info.programs=W.programs;var Ue=new THREE.WebGLBufferRenderer(Re,De,Pe),Be=new THREE.WebGLIndexedBufferRenderer(Re,De,Pe);b(),this.context=Re,this.capabilities=Ve,this.extensions=De,this.state=S;var Fe=new THREE.WebGLShadowMap(this,ie,I);this.shadowMap=Fe;var $=new THREE.SpritePlugin(this,de),Ge=new THREE.LensFlarePlugin(this,ce);this.getContext=function(){return Re},this.getContextAttributes=function(){return Re.getContextAttributes()},this.forceContextLoss=function(){De.get("WEBGL_lose_context").loseContext()},this.getMaxAnisotropy=function(){var e;return function(){if(void 0!==e)return e;var t=De.get("EXT_texture_filter_anisotropic");return e=null===t?0:Re.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}}(),this.getPrecision=function(){return Ve.precision},this.getPixelRatio=function(){return J},this.setPixelRatio=function(e){void 0!==e&&(J=e)},this.getSize=function(){return{width:q,height:Q}},this.setSize=function(e,t,r){q=e,Q=t,te.width=e*J,te.height=t*J,!1!==r&&(te.style.width=e+"px",te.style.height=t+"px"),this.setViewport(0,0,e,t)},this.setViewport=function(e,t,r,a){ve=e*J,be=t*J,Se=r*J,_e=a*J,Re.viewport(ve,be,Se,_e)},this.getViewport=function(e){e.x=ve/J,e.y=be/J,e.z=Se/J,e.w=_e/J},this.setScissor=function(e,t,r,a){Re.scissor(e*J,t*J,r*J,a*J)},this.enableScissorTest=function(e){S.setScissorTest(e)},this.getClearColor=function(){return oe},this.setClearColor=function(e,t){oe.set(e),U=void 0===t?1:t,i(oe.r,oe.g,oe.b,U)},this.getClearAlpha=function(){return U},this.setClearAlpha=function(e){U=e,i(oe.r,oe.g,oe.b,U)},this.clear=function(e,t,r){var a=0;(void 0===e||e)&&(a|=Re.COLOR_BUFFER_BIT),(void 0===t||t)&&(a|=Re.DEPTH_BUFFER_BIT),(void 0===r||r)&&(a|=Re.STENCIL_BUFFER_BIT),Re.clear(a)},this.clearColor=function(){Re.clear(Re.COLOR_BUFFER_BIT)},this.clearDepth=function(){Re.clear(Re.DEPTH_BUFFER_BIT)},this.clearStencil=function(){Re.clear(Re.STENCIL_BUFFER_BIT)},this.clearTarget=function(e,t,r,a){this.setRenderTarget(e),this.clear(t,r,a)},this.resetGLState=c,this.dispose=function(){te.removeEventListener("webglcontextlost",d,!1)},this.renderBufferImmediate=function(t,r,a){S.initAttributes();var o=ke.get(t);if(t.hasPositions&&!o.position&&(o.position=Re.createBuffer()),t.hasNormals&&!o.normal&&(o.normal=Re.createBuffer()),t.hasUvs&&!o.uv&&(o.uv=Re.createBuffer()),t.hasColors&&!o.color&&(o.color=Re.createBuffer()),r=r.getAttributes(),t.hasPositions&&(Re.bindBuffer(Re.ARRAY_BUFFER,o.position),Re.bufferData(Re.ARRAY_BUFFER,t.positionArray,Re.DYNAMIC_DRAW),S.enableAttribute(r.position),Re.vertexAttribPointer(r.position,3,Re.FLOAT,!1,0,0)),t.hasNormals){if(Re.bindBuffer(Re.ARRAY_BUFFER,o.normal),"MeshPhongMaterial"!==a.type&&a.shading===THREE.FlatShading)for(var i=0,n=3*t.count;i<n;i+=9){var s=t.normalArray,p=(s[i+0]+s[i+3]+s[i+6])/3,d=(s[i+1]+s[i+4]+s[i+7])/3,c=(s[i+2]+s[i+5]+s[i+8])/3;s[i+0]=p,s[i+1]=d,s[i+2]=c,s[i+3]=p,s[i+4]=d,s[i+5]=c,s[i+6]=p,s[i+7]=d,s[i+8]=c}Re.bufferData(Re.ARRAY_BUFFER,t.normalArray,Re.DYNAMIC_DRAW),S.enableAttribute(r.normal),Re.vertexAttribPointer(r.normal,3,Re.FLOAT,!1,0,0)}t.hasUvs&&a.map&&(Re.bindBuffer(Re.ARRAY_BUFFER,o.uv),Re.bufferData(Re.ARRAY_BUFFER,t.uvArray,Re.DYNAMIC_DRAW),S.enableAttribute(r.uv),Re.vertexAttribPointer(r.uv,2,Re.FLOAT,!1,0,0)),t.hasColors&&a.vertexColors!==THREE.NoColors&&(Re.bindBuffer(Re.ARRAY_BUFFER,o.color),Re.bufferData(Re.ARRAY_BUFFER,t.colorArray,Re.DYNAMIC_DRAW),S.enableAttribute(r.color),Re.vertexAttribPointer(r.color,3,Re.FLOAT,!1,0,0)),S.disableUnusedAttributes(),Re.drawArrays(Re.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(r,o,i,y,v,e,f){j(v);var _=t(r,o,i,v,e),T=!1;if(r=y.id+"_"+_.id+"_"+v.wireframe,r!==ye&&(ye=r,T=!0),o=e.morphTargetInfluences,void 0!==o){for(r=[],i=0,T=o.length;i<T;i++){var M=o[i];r.push([M,i])}r.sort(g),8<r.length&&(r.length=8);var E=y.morphAttributes;for(i=0,T=r.length;i<T;i++)M=r[i],pe[i]=M[0],0===M[0]?(!0===v.morphTargets&&y.removeAttribute("morphTarget"+i),!0===v.morphNormals&&y.removeAttribute("morphNormal"+i)):(o=M[1],!0===v.morphTargets&&E.position&&y.addAttribute("morphTarget"+i,E.position[o]),!0===v.morphNormals&&E.normal&&y.addAttribute("morphNormal"+i,E.normal[o]));r=_.getUniforms(),null!==r.morphTargetInfluences&&Re.uniform1fv(r.morphTargetInfluences,pe),T=!0}if(o=y.index,i=y.attributes.position,!0===v.wireframe&&(o=I.getWireframeAttribute(y)),null===o?r=Ue:(r=Be,r.setIndex(o)),T){a:{var T=void 0,C;if(y instanceof THREE.InstancedBufferGeometry&&(C=De.get("ANGLE_instanced_arrays"),null===C)){console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");break a}void 0===T&&(T=0),S.initAttributes();var M=y.attributes,_=_.getAttributes(),E=v.defaultAttributeValues,A;for(A in _){var L=_[A];if(0<=L){var s=M[A];if(void 0!==s){var P=s.itemSize,R=I.getAttributeBuffer(s);if(s instanceof THREE.InterleavedBufferAttribute){var x=s.data,V=x.stride,s=s.offset;x instanceof THREE.InstancedInterleavedBuffer?(S.enableAttributeAndDivisor(L,x.meshPerAttribute,C),void 0===y.maxInstancedCount&&(y.maxInstancedCount=x.meshPerAttribute*x.count)):S.enableAttribute(L),Re.bindBuffer(Re.ARRAY_BUFFER,R),Re.vertexAttribPointer(L,P,Re.FLOAT,!1,V*x.array.BYTES_PER_ELEMENT,(T*V+s)*x.array.BYTES_PER_ELEMENT)}else s instanceof THREE.InstancedBufferAttribute?(S.enableAttributeAndDivisor(L,s.meshPerAttribute,C),void 0===y.maxInstancedCount&&(y.maxInstancedCount=s.meshPerAttribute*s.count)):S.enableAttribute(L),Re.bindBuffer(Re.ARRAY_BUFFER,R),Re.vertexAttribPointer(L,P,Re.FLOAT,!1,0,4*(T*P))}else if(void 0!==E&&(P=E[A],void 0!==P))switch(P.length){case 2:Re.vertexAttrib2fv(L,P);break;case 3:Re.vertexAttrib3fv(L,P);break;case 4:Re.vertexAttrib4fv(L,P);break;default:Re.vertexAttrib1fv(L,P);}}}S.disableUnusedAttributes()}null!==o&&Re.bindBuffer(Re.ELEMENT_ARRAY_BUFFER,I.getAttributeBuffer(o))}C=1/0,null===o?void 0!==i&&(C=i.count):C=o.count,A=y.drawRange.start,o=y.drawRange.count,i=null===f?0:f.start,T=null===f?1/0:f.count,f=ee(0,A,i),C=N(0+C,A+o,i+T)-1,C=ee(0,C-f+1),e instanceof THREE.Mesh?(!0===v.wireframe?(S.setLineWidth(v.wireframeLinewidth*J),r.setMode(Re.LINES)):r.setMode(Re.TRIANGLES),y instanceof THREE.InstancedBufferGeometry&&0<y.maxInstancedCount?r.renderInstances(y):r.render(f,C)):e instanceof THREE.Line?(y=v.linewidth,void 0===y&&(y=1),S.setLineWidth(y*J),e instanceof THREE.LineSegments?r.setMode(Re.LINES):r.setMode(Re.LINE_STRIP),r.render(f,C)):e instanceof THREE.Points&&(r.setMode(Re.POINTS),r.render(f,C))},this.render=function(t,r,o,i){if(!1==r instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var s=t.fog;ye="",ge=-1,fe=null,Y=!0,!0===t.autoUpdate&&t.updateMatrixWorld(),null===r.parent&&r.updateMatrixWorld(),r.matrixWorldInverse.getInverse(r.matrixWorld),Ce.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),Ee.setFromMatrix(Ce),ie.length=0,Z=se=-1,de.length=0,ce.length=0,n(t,r),ne.length=se+1,le.length=Z+1,!0===me.sortObjects&&(ne.sort(l),le.sort(m)),Fe.render(t),Pe.calls=0,Pe.vertices=0,Pe.faces=0,Pe.points=0,this.setRenderTarget(o),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),t.overrideMaterial?(i=t.overrideMaterial,k(ne,r,ie,s,i),k(le,r,ie,s,i)):(S.setBlending(THREE.NoBlending),k(ne,r,ie,s),k(le,r,ie,s)),$.render(t,r),Ge.render(t,r,Te,Me),o&&(t=o.texture,r=x(o),t.generateMipmaps&&r&&t.minFilter!==THREE.NearestFilter&&t.minFilter!==THREE.LinearFilter&&(t=o instanceof THREE.WebGLRenderTargetCube?Re.TEXTURE_CUBE_MAP:Re.TEXTURE_2D,o=ke.get(o.texture).__webglTexture,S.bindTexture(t,o),Re.generateMipmap(t),S.bindTexture(t,null))),S.setDepthTest(!0),S.setDepthWrite(!0),S.setColorWrite(!0)}},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?S.disable(Re.CULL_FACE):(t===THREE.FrontFaceDirectionCW?Re.frontFace(Re.CW):Re.frontFace(Re.CCW),e===THREE.CullFaceBack?Re.cullFace(Re.BACK):e===THREE.CullFaceFront?Re.cullFace(Re.FRONT):Re.cullFace(Re.FRONT_AND_BACK),S.enable(Re.CULL_FACE))},this.setTexture=function(t,r){var a=ke.get(t);if(0<t.version&&a.__version!==t.version){var o=t.image;if(void 0===o)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",t);else if(!1===o.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",t);else{if(void 0===a.__webglInit&&(a.__webglInit=!0,t.addEventListener("dispose",_),a.__webglTexture=Re.createTexture(),we.textures++),S.activeTexture(Re.TEXTURE0+r),S.bindTexture(Re.TEXTURE_2D,a.__webglTexture),Re.pixelStorei(Re.UNPACK_FLIP_Y_WEBGL,t.flipY),Re.pixelStorei(Re.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),Re.pixelStorei(Re.UNPACK_ALIGNMENT,t.unpackAlignment),t.image=s(t.image,Ve.maxTextureSize),(t.wrapS!==THREE.ClampToEdgeWrapping||t.wrapT!==THREE.ClampToEdgeWrapping||t.minFilter!==THREE.NearestFilter&&t.minFilter!==THREE.LinearFilter)&&!1===x(t.image)){if(o=t.image,o instanceof HTMLImageElement||o instanceof HTMLCanvasElement){var i=document.createElement("canvas");i.width=THREE.Math.nearestPowerOfTwo(o.width),i.height=THREE.Math.nearestPowerOfTwo(o.height),i.getContext("2d").drawImage(o,0,0,i.width,i.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+o.width+"x"+o.height+"). Resized to "+i.width+"x"+i.height,o),o=i}t.image=o}var p=t.image,o=x(p),i=C(t.format),c=C(t.type);v(Re.TEXTURE_2D,t,o);var m=t.mipmaps;if(t instanceof THREE.DataTexture){if(0<m.length&&o){for(var u=0,h=m.length;u<h;u++)p=m[u],S.texImage2D(Re.TEXTURE_2D,u,i,p.width,p.height,0,i,c,p.data);t.generateMipmaps=!1}else S.texImage2D(Re.TEXTURE_2D,0,i,p.width,p.height,0,i,c,p.data);}else if(t instanceof THREE.CompressedTexture)for(u=0,h=m.length;u<h;u++)p=m[u],t.format!==THREE.RGBAFormat&&t.format!==THREE.RGBFormat?-1<S.getCompressedTextureFormats().indexOf(i)?S.compressedTexImage2D(Re.TEXTURE_2D,u,i,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):S.texImage2D(Re.TEXTURE_2D,u,i,p.width,p.height,0,i,c,p.data);else if(0<m.length&&o){for(u=0,h=m.length;u<h;u++)p=m[u],S.texImage2D(Re.TEXTURE_2D,u,i,i,c,p);t.generateMipmaps=!1}else S.texImage2D(Re.TEXTURE_2D,0,i,i,c,t.image);t.generateMipmaps&&o&&Re.generateMipmap(Re.TEXTURE_2D),a.__version=t.version,t.onUpdate&&t.onUpdate(t)}}else S.activeTexture(Re.TEXTURE0+r),S.bindTexture(Re.TEXTURE_2D,a.__webglTexture)},this.setRenderTarget=function(t){var r=t instanceof THREE.WebGLRenderTargetCube;if(t&&void 0===ke.get(t).__webglFramebuffer){var a=ke.get(t),o=ke.get(t.texture);void 0===t.depthBuffer&&(t.depthBuffer=!0),void 0===t.stencilBuffer&&(t.stencilBuffer=!0),t.addEventListener("dispose",P),o.__webglTexture=Re.createTexture(),we.textures++;var i=x(t),n=C(t.texture.format),s=C(t.texture.type);if(r){for(a.__webglFramebuffer=[],a.__webglRenderbuffer=[],S.bindTexture(Re.TEXTURE_CUBE_MAP,o.__webglTexture),v(Re.TEXTURE_CUBE_MAP,t.texture,i),o=0;6>o;o++)a.__webglFramebuffer[o]=Re.createFramebuffer(),a.__webglRenderbuffer[o]=Re.createRenderbuffer(),S.texImage2D(Re.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,n,t.width,t.height,0,n,s,null),A(a.__webglFramebuffer[o],t,Re.TEXTURE_CUBE_MAP_POSITIVE_X+o),B(a.__webglRenderbuffer[o],t);t.texture.generateMipmaps&&i&&Re.generateMipmap(Re.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=Re.createFramebuffer(),a.__webglRenderbuffer=t.shareDepthFrom?t.shareDepthFrom.__webglRenderbuffer:Re.createRenderbuffer(),S.bindTexture(Re.TEXTURE_2D,o.__webglTexture),v(Re.TEXTURE_2D,t.texture,i),S.texImage2D(Re.TEXTURE_2D,0,n,t.width,t.height,0,n,s,null),A(a.__webglFramebuffer,t,Re.TEXTURE_2D),t.shareDepthFrom?t.depthBuffer&&!t.stencilBuffer?Re.framebufferRenderbuffer(Re.FRAMEBUFFER,Re.DEPTH_ATTACHMENT,Re.RENDERBUFFER,a.__webglRenderbuffer):t.depthBuffer&&t.stencilBuffer&&Re.framebufferRenderbuffer(Re.FRAMEBUFFER,Re.DEPTH_STENCIL_ATTACHMENT,Re.RENDERBUFFER,a.__webglRenderbuffer):B(a.__webglRenderbuffer,t),t.texture.generateMipmaps&&i&&Re.generateMipmap(Re.TEXTURE_2D);r?S.bindTexture(Re.TEXTURE_CUBE_MAP,null):S.bindTexture(Re.TEXTURE_2D,null),Re.bindRenderbuffer(Re.RENDERBUFFER,null),Re.bindFramebuffer(Re.FRAMEBUFFER,null)}t?(a=ke.get(t),o=r?a.__webglFramebuffer[t.activeCubeFace]:a.__webglFramebuffer,a=t.width,i=t.height,s=n=0):(o=null,a=Se,i=_e,n=ve,s=be),o!==he&&(Re.bindFramebuffer(Re.FRAMEBUFFER,o),Re.viewport(n,s,a,i),he=o),r&&(o=ke.get(t.texture),Re.framebufferTexture2D(Re.FRAMEBUFFER,Re.COLOR_ATTACHMENT0,Re.TEXTURE_CUBE_MAP_POSITIVE_X+t.activeCubeFace,o.__webglTexture,0)),Te=a,Me=i},this.readRenderTargetPixels=function(t,r,a,o,i,e){if(!1==t instanceof THREE.WebGLRenderTarget)console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");else{var n=ke.get(t).__webglFramebuffer;if(n){var s=!1;n!==he&&(Re.bindFramebuffer(Re.FRAMEBUFFER,n),s=!0);try{var l=t.texture;l.format!==THREE.RGBAFormat&&C(l.format)!==Re.getParameter(Re.IMPLEMENTATION_COLOR_READ_FORMAT)?console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."):l.type===THREE.UnsignedByteType||C(l.type)===Re.getParameter(Re.IMPLEMENTATION_COLOR_READ_TYPE)||l.type===THREE.FloatType&&De.get("WEBGL_color_buffer_float")||l.type===THREE.HalfFloatType&&De.get("EXT_color_buffer_half_float")?Re.checkFramebufferStatus(Re.FRAMEBUFFER)===Re.FRAMEBUFFER_COMPLETE?Re.readPixels(r,a,o,i,C(l.format),C(l.type),e):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."):console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.")}finally{s&&Re.bindFramebuffer(Re.FRAMEBUFFER,he)}}}},this.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),De.get("OES_texture_float")},this.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),De.get("OES_texture_half_float")},this.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),De.get("OES_standard_derivatives")},this.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),De.get("WEBGL_compressed_texture_s3tc")},this.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),De.get("WEBGL_compressed_texture_pvrtc")},this.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),De.get("EXT_blend_minmax")},this.supportsVertexTextures=function(){return Ve.vertexTextures},this.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),De.get("ANGLE_instanced_arrays")},this.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},this.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},this.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},this.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Object.defineProperties(this,{shadowMapEnabled:{get:function(){return Fe.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),Fe.enabled=e}},shadowMapType:{get:function(){return Fe.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),Fe.type=e}},shadowMapCullFace:{get:function(){return Fe.cullFace},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),Fe.cullFace=e}},shadowMapDebug:{get:function(){return Fe.debug},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug."),Fe.debug=e}}})},THREE.WebGLRenderTarget=function(e,t,r){this.uuid=THREE.Math.generateUUID(),this.width=e,this.height=t,r=r||{},void 0===r.minFilter&&(r.minFilter=THREE.LinearFilter),this.texture=new THREE.Texture(void 0,void 0,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy),this.depthBuffer=!(void 0!==r.depthBuffer)||r.depthBuffer,this.stencilBuffer=!(void 0!==r.stencilBuffer)||r.stencilBuffer,this.shareDepthFrom=void 0===r.shareDepthFrom?null:r.shareDepthFrom},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,get wrapS(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set wrapS(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e},get wrapT(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set wrapT(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e},get magFilter(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set magFilter(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e},get minFilter(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set minFilter(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e},get anisotropy(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set anisotropy(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e},get offset(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set offset(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e},get repeat(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set repeat(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e},get format(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set format(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e},get type(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set type(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e},get generateMipmaps(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set generateMipmaps(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e},setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.dispose())},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.shareDepthFrom=e.shareDepthFrom,this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(e,t,r){THREE.WebGLRenderTarget.call(this,e,t,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube,THREE.WebGLBufferRenderer=function(e,t,r){var o;this.setMode=function(e){o=e},this.render=function(t,a){e.drawArrays(o,t,a),r.calls++,r.vertices+=a,o===e.TRIANGLES&&(r.faces+=a/3)},this.renderInstances=function(e){var r=t.get("ANGLE_instanced_arrays");if(null===r)console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");else{var a=e.attributes.position;a instanceof THREE.InterleavedBufferAttribute?r.drawArraysInstancedANGLE(o,0,a.data.count,e.maxInstancedCount):r.drawArraysInstancedANGLE(o,0,a.count,e.maxInstancedCount)}}},THREE.WebGLIndexedBufferRenderer=function(t,r,a){var o,i,n;this.setMode=function(e){o=e},this.setIndex=function(e){e.array instanceof Uint32Array&&r.get("OES_element_index_uint")?(i=t.UNSIGNED_INT,n=4):(i=t.UNSIGNED_SHORT,n=2)},this.render=function(e,r){t.drawElements(o,r,i,e*n),a.calls++,a.vertices+=r,o===t.TRIANGLES&&(a.faces+=r/3)},this.renderInstances=function(e){var t=r.get("ANGLE_instanced_arrays");null===t?console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."):t.drawElementsInstancedANGLE(o,e.index.array.length,i,0,e.maxInstancedCount)}},THREE.WebGLExtensions=function(e){var t={};this.get=function(r){if(void 0!==t[r])return t[r];var a;return a="EXT_texture_filter_anisotropic"===r?e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic"):"WEBGL_compressed_texture_s3tc"===r?e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"):"WEBGL_compressed_texture_pvrtc"===r?e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"):e.getExtension(r),null===a&&console.warn("THREE.WebGLRenderer: "+r+" extension not supported."),t[r]=a}},THREE.WebGLCapabilities=function(e,t,r){function a(t){if("highp"===t){if(0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision)return"highp";t="mediump"}return"mediump"===t&&0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision?"mediump":"lowp"}this.getMaxPrecision=a,this.precision=void 0===r.precision?"highp":r.precision,this.logarithmicDepthBuffer=void 0!==r.logarithmicDepthBuffer&&r.logarithmicDepthBuffer,this.maxTextures=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxCubemapSize=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxAttributes=e.getParameter(e.MAX_VERTEX_ATTRIBS),this.maxVertexUniforms=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),this.maxVaryings=e.getParameter(e.MAX_VARYING_VECTORS),this.maxFragmentUniforms=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),this.vertexTextures=0<this.maxVertexTextures,this.floatFragmentTextures=!!t.get("OES_texture_float"),this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures,r=a(this.precision),r!==this.precision&&(console.warn("THREE.WebGLRenderer:",this.precision,"not supported, using",r,"instead."),this.precision=r),this.logarithmicDepthBuffer&&(this.logarithmicDepthBuffer=!!t.get("EXT_frag_depth"))},THREE.WebGLGeometries=function(t,r,o){function i(e){e=e.target;var t=s[e.id].attributes,p;for(p in t)n(t[p]);e.removeEventListener("dispose",i),delete s[e.id],p=r.get(e),p.wireframe&&n(p.wireframe),o.memory.geometries--}function n(e){var a;a=e instanceof THREE.InterleavedBufferAttribute?r.get(e.data).__webglBuffer:r.get(e).__webglBuffer,void 0!==a&&(t.deleteBuffer(a),e instanceof THREE.InterleavedBufferAttribute?r.delete(e.data):r.delete(e))}var s={};this.get=function(t){var r=t.geometry;if(void 0!==s[r.id])return s[r.id];r.addEventListener("dispose",i);var a;return r instanceof THREE.BufferGeometry?a=r:r instanceof THREE.Geometry&&(void 0===r._bufferGeometry&&(r._bufferGeometry=new THREE.BufferGeometry().setFromObject(t)),a=r._bufferGeometry),s[r.id]=a,o.memory.geometries++,a}},THREE.WebGLObjects=function(r,o,t){function a(t,a){var i=t instanceof THREE.InterleavedBufferAttribute?t.data:t,e=o.get(i);void 0===e.__webglBuffer?(e.__webglBuffer=r.createBuffer(),r.bindBuffer(a,e.__webglBuffer),r.bufferData(a,i.array,i.dynamic?r.DYNAMIC_DRAW:r.STATIC_DRAW),e.version=i.version):e.version!==i.version&&(r.bindBuffer(a,e.__webglBuffer),!1===i.dynamic||-1===i.updateRange.count?r.bufferSubData(a,0,i.array):0===i.updateRange.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(r.bufferSubData(a,i.updateRange.offset*i.array.BYTES_PER_ELEMENT,i.array.subarray(i.updateRange.offset,i.updateRange.offset+i.updateRange.count)),i.updateRange.count=0),e.version=i.version)}function i(e,t,r){if(t>r){var a=t;t=r,r=a}return a=e[t],void 0===a?(e[t]=[r],!0):-1===a.indexOf(r)&&(a.push(r),!0)}var n=new THREE.WebGLGeometries(r,o,t);this.getAttributeBuffer=function(e){return e instanceof THREE.InterleavedBufferAttribute?o.get(e.data).__webglBuffer:o.get(e).__webglBuffer},this.getWireframeAttribute=function(e){var d=o.get(e);if(void 0!==d.wireframe)return d.wireframe;var u=[],h=e.index,g=e.attributes;if(e=g.position,null!==h)for(var g={},h=h.array,y=0,f=h.length;y<f;y+=3){var x=h[y+0],v=h[y+1],b=h[y+2];i(g,x,v)&&u.push(x,v),i(g,v,b)&&u.push(v,b),i(g,b,x)&&u.push(b,x)}else for(h=g.position.array,y=0,f=h.length/3-1;y<f;y+=3)x=y+0,v=y+1,b=y+2,u.push(x,v,v,b,b,x);return u=new THREE.BufferAttribute(new(65535<e.count?Uint32Array:Uint16Array)(u),1),a(u,r.ELEMENT_ARRAY_BUFFER),d.wireframe=u},this.update=function(t){var o=n.get(t);t.geometry instanceof THREE.Geometry&&o.updateFromObject(t),t=o.index;var i=o.attributes;for(var s in null!==t&&a(t,r.ELEMENT_ARRAY_BUFFER),i)a(i[s],r.ARRAY_BUFFER);for(s in t=o.morphAttributes,t)for(var i=t[s],l=0,d=i.length;l<d;l++)a(i[l],r.ARRAY_BUFFER);return o}},THREE.WebGLProgram=function(){function r(e){var t=[],r;for(r in e){var a=e[r];!1!==a&&t.push("#define "+r+" "+a)}return t.join("\n")}function a(e){return""!==e}var o=0;return function(i,c,e,g){var y=i.context,h=e.defines,x=e.__webglShader.vertexShader,b=e.__webglShader.fragmentShader,S="SHADOWMAP_TYPE_BASIC";g.shadowMapType===THREE.PCFShadowMap?S="SHADOWMAP_TYPE_PCF":g.shadowMapType===THREE.PCFSoftShadowMap&&(S="SHADOWMAP_TYPE_PCF_SOFT");var _="ENVMAP_TYPE_CUBE",T="ENVMAP_MODE_REFLECTION",M="ENVMAP_BLENDING_MULTIPLY";if(g.envMap){switch(e.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:_="ENVMAP_TYPE_CUBE";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:_="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:_="ENVMAP_TYPE_SPHERE";}switch(e.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:T="ENVMAP_MODE_REFRACTION";}switch(e.combine){case THREE.MultiplyOperation:M="ENVMAP_BLENDING_MULTIPLY";break;case THREE.MixOperation:M="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:M="ENVMAP_BLENDING_ADD";}}var E=0<i.gammaFactor?i.gammaFactor:1,t=r(h),v=y.createProgram();e instanceof THREE.RawShaderMaterial?i=h="":(h=["precision "+g.precision+" float;","precision "+g.precision+" int;","#define SHADER_NAME "+e.__webglShader.name,t,g.supportsVertexTextures?"#define VERTEX_TEXTURES":"",i.gammaInput?"#define GAMMA_INPUT":"",i.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+E,"#define MAX_DIR_LIGHTS "+g.maxDirLights,"#define MAX_POINT_LIGHTS "+g.maxPointLights,"#define MAX_SPOT_LIGHTS "+g.maxSpotLights,"#define MAX_HEMI_LIGHTS "+g.maxHemiLights,"#define MAX_SHADOWS "+g.maxShadows,"#define MAX_BONES "+g.maxBones,g.map?"#define USE_MAP":"",g.envMap?"#define USE_ENVMAP":"",g.envMap?"#define "+T:"",g.lightMap?"#define USE_LIGHTMAP":"",g.aoMap?"#define USE_AOMAP":"",g.emissiveMap?"#define USE_EMISSIVEMAP":"",g.bumpMap?"#define USE_BUMPMAP":"",g.normalMap?"#define USE_NORMALMAP":"",g.displacementMap&&g.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",g.specularMap?"#define USE_SPECULARMAP":"",g.alphaMap?"#define USE_ALPHAMAP":"",g.vertexColors?"#define USE_COLOR":"",g.flatShading?"#define FLAT_SHADED":"",g.skinning?"#define USE_SKINNING":"",g.useVertexTexture?"#define BONE_TEXTURE":"",g.morphTargets?"#define USE_MORPHTARGETS":"",g.morphNormals&&!1===g.flatShading?"#define USE_MORPHNORMALS":"",g.doubleSided?"#define DOUBLE_SIDED":"",g.flipSided?"#define FLIP_SIDED":"",g.shadowMapEnabled?"#define USE_SHADOWMAP":"",g.shadowMapEnabled?"#define "+S:"",g.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",0<g.pointLightShadows?"#define POINT_LIGHT_SHADOWS":"",g.sizeAttenuation?"#define USE_SIZEATTENUATION":"",g.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",g.logarithmicDepthBuffer&&i.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(a).join("\n"),i=[g.bumpMap||g.normalMap||g.flatShading||e.derivatives?"#extension GL_OES_standard_derivatives : enable":"",g.logarithmicDepthBuffer&&i.extensions.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"","precision "+g.precision+" float;","precision "+g.precision+" int;","#define SHADER_NAME "+e.__webglShader.name,t,"#define MAX_DIR_LIGHTS "+g.maxDirLights,"#define MAX_POINT_LIGHTS "+g.maxPointLights,"#define MAX_SPOT_LIGHTS "+g.maxSpotLights,"#define MAX_HEMI_LIGHTS "+g.maxHemiLights,"#define MAX_SHADOWS "+g.maxShadows,g.alphaTest?"#define ALPHATEST "+g.alphaTest:"",i.gammaInput?"#define GAMMA_INPUT":"",i.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+E,g.useFog&&g.fog?"#define USE_FOG":"",g.useFog&&g.fogExp?"#define FOG_EXP2":"",g.map?"#define USE_MAP":"",g.envMap?"#define USE_ENVMAP":"",g.envMap?"#define "+_:"",g.envMap?"#define "+T:"",g.envMap?"#define "+M:"",g.lightMap?"#define USE_LIGHTMAP":"",g.aoMap?"#define USE_AOMAP":"",g.emissiveMap?"#define USE_EMISSIVEMAP":"",g.bumpMap?"#define USE_BUMPMAP":"",g.normalMap?"#define USE_NORMALMAP":"",g.specularMap?"#define USE_SPECULARMAP":"",g.alphaMap?"#define USE_ALPHAMAP":"",g.vertexColors?"#define USE_COLOR":"",g.flatShading?"#define FLAT_SHADED":"",g.metal?"#define METAL":"",g.doubleSided?"#define DOUBLE_SIDED":"",g.flipSided?"#define FLIP_SIDED":"",g.shadowMapEnabled?"#define USE_SHADOWMAP":"",g.shadowMapEnabled?"#define "+S:"",g.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",0<g.pointLightShadows?"#define POINT_LIGHT_SHADOWS":"",g.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",g.logarithmicDepthBuffer&&i.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","\n"].filter(a).join("\n")),b=i+b,x=THREE.WebGLShader(y,y.VERTEX_SHADER,h+x),b=THREE.WebGLShader(y,y.FRAGMENT_SHADER,b),y.attachShader(v,x),y.attachShader(v,b),void 0===e.index0AttributeName?!0===g.morphTargets&&y.bindAttribLocation(v,0,"position"):y.bindAttribLocation(v,0,e.index0AttributeName),y.linkProgram(v),g=y.getProgramInfoLog(v),S=y.getShaderInfoLog(x),_=y.getShaderInfoLog(b),M=T=!0,!1===y.getProgramParameter(v,y.LINK_STATUS)?(T=!1,console.error("THREE.WebGLProgram: shader error: ",y.getError(),"gl.VALIDATE_STATUS",y.getProgramParameter(v,y.VALIDATE_STATUS),"gl.getProgramInfoLog",g,S,_)):""===g?(""===S||""===_)&&(M=!1):console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",g),M&&(this.diagnostics={runnable:T,material:e,programLog:g,vertexShader:{log:S,prefix:h},fragmentShader:{log:_,prefix:i}}),y.deleteShader(x),y.deleteShader(b);var u;this.getUniforms=function(){if(void 0===u){for(var t={},r=y.getProgramParameter(v,y.ACTIVE_UNIFORMS),a=0;a<r;a++){var o=y.getActiveUniform(v,a).name,i=y.getUniformLocation(v,o),e=o.lastIndexOf("[0]");-1!==e&&e===o.length-3&&(t[o.substr(0,e)]=i),t[o]=i}u=t}return u};var C;return this.getAttributes=function(){if(void 0===C){for(var e={},t=y.getProgramParameter(v,y.ACTIVE_ATTRIBUTES),r=0,a;r<t;r++)a=y.getActiveAttrib(v,r).name,e[a]=y.getAttribLocation(v,a);C=e}return C},this.destroy=function(){y.deleteProgram(v),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=o++,this.code=c,this.usedTimes=1,this.program=v,this.vertexShader=x,this.fragmentShader=b,this}}(),THREE.WebGLPrograms=function(r,a){var t=[],o={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"},i=["precision","supportsVertexTextures","map","envMap","envMapMode","lightMap","aoMap","emissiveMap","bumpMap","normalMap","displacementMap","specularMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","shadowMapEnabled","pointLightShadows","shadowMapType","shadowMapDebug","alphaTest","metal","doubleSided","flipSided"];this.getParameters=function(i,d,c,h){var l=o[i.type],s,g,y,f,x;s=x=f=y=g=0;for(var b=d.length,S;s<b;s++)S=d[s],!1!==S.visible&&(S instanceof THREE.DirectionalLight&&g++,S instanceof THREE.PointLight&&y++,S instanceof THREE.SpotLight&&f++,S instanceof THREE.HemisphereLight&&x++);for(var S=s=b=0,_=d.length,u;S<_;S++)u=d[S],u.castShadow&&((u instanceof THREE.SpotLight||u instanceof THREE.DirectionalLight)&&b++,u instanceof THREE.PointLight&&(b++,s++));return d=b,a.floatVertexTextures&&h&&h.skeleton&&h.skeleton.useVertexTexture?b=1024:(b=Math.floor((a.maxVertexUniforms-20)/4),void 0!==h&&h instanceof THREE.SkinnedMesh&&(b=Math.min(h.skeleton.bones.length,b),b<h.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+h.skeleton.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)"))),S=r.getPrecision(),null!==i.precision&&(S=a.getMaxPrecision(i.precision),S!==i.precision&&console.warn("THREE.WebGLRenderer.initMaterial:",i.precision,"not supported, using",S,"instead.")),{shaderID:l,precision:S,supportsVertexTextures:a.vertexTextures,map:!!i.map,envMap:!!i.envMap,envMapMode:i.envMap&&i.envMap.mapping,lightMap:!!i.lightMap,aoMap:!!i.aoMap,emissiveMap:!!i.emissiveMap,bumpMap:!!i.bumpMap,normalMap:!!i.normalMap,displacementMap:!!i.displacementMap,specularMap:!!i.specularMap,alphaMap:!!i.alphaMap,combine:i.combine,vertexColors:i.vertexColors,fog:c,useFog:i.fog,fogExp:c instanceof THREE.FogExp2,flatShading:i.shading===THREE.FlatShading,sizeAttenuation:i.sizeAttenuation,logarithmicDepthBuffer:a.logarithmicDepthBuffer,skinning:i.skinning,maxBones:b,useVertexTexture:a.floatVertexTextures&&h&&h.skeleton&&h.skeleton.useVertexTexture,morphTargets:i.morphTargets,morphNormals:i.morphNormals,maxMorphTargets:r.maxMorphTargets,maxMorphNormals:r.maxMorphNormals,maxDirLights:g,maxPointLights:y,maxSpotLights:f,maxHemiLights:x,maxShadows:d,pointLightShadows:s,shadowMapEnabled:r.shadowMap.enabled&&h.receiveShadow&&0<d,shadowMapType:r.shadowMap.type,shadowMapDebug:r.shadowMap.debug,alphaTest:i.alphaTest,metal:i.metal,doubleSided:i.side===THREE.DoubleSide,flipSided:i.side===THREE.BackSide}},this.getProgramCode=function(e,t){var r=[];if(t.shaderID?r.push(t.shaderID):(r.push(e.fragmentShader),r.push(e.vertexShader)),void 0!==e.defines)for(var a in e.defines)r.push(a),r.push(e.defines[a]);for(a=0;a<i.length;a++){var o=i[a];r.push(o),r.push(t[o])}return r.join()},this.acquireProgram=function(a,o,i){for(var e=0,n=t.length,s,d;e<n;e++)if(d=t[e],d.code===i){s=d,++s.usedTimes;break}return void 0===s&&(s=new THREE.WebGLProgram(r,i,a,o),t.push(s)),s},this.releaseProgram=function(e){if(0==--e.usedTimes){var r=t.indexOf(e);t[r]=t[t.length-1],t.pop(),e.destroy()}},this.programs=t},THREE.WebGLProperties=function(){var e={};this.get=function(t){t=t.uuid;var r=e[t];return void 0===r&&(r={},e[t]=r),r},this.delete=function(t){delete e[t.uuid]},this.clear=function(){e={}}},THREE.WebGLShader=function(){function t(e){e=e.split("\n");for(var t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}return function(r,a,o){var i=r.createShader(a);return r.shaderSource(i,o),r.compileShader(i),!1===r.getShaderParameter(i,r.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==r.getShaderInfoLog(i)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",a===r.VERTEX_SHADER?"vertex":"fragment",r.getShaderInfoLog(i),t(o)),i}}(),THREE.WebGLShadowMap=function(r,a,o){function i(t,r,o,i){var s=t.geometry,e=null,e=p,l=t.customDepthMaterial;return o&&(e=n,l=t.customDistanceMaterial),l?e=l:(t=t instanceof THREE.SkinnedMesh&&r.skinning,l=0,void 0!==s.morphTargets&&0<s.morphTargets.length&&r.morphTargets&&(l|=1),t&&(l|=2),e=e[l]),e.visible=r.visible,e.wireframe=r.wireframe,e.wireframeLinewidth=r.wireframeLinewidth,o&&void 0!==e.uniforms.lightPos&&e.uniforms.lightPos.value.copy(i),e}function S(e,t){if(!1!==e.visible){(e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Points)&&e.castShadow&&(!1===e.frustumCulled||!0===g.intersectsObject(e))&&!0===e.material.visible&&(e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),m.push(e));for(var r=e.children,a=0,o=r.length;a<o;a++)S(r[a],t)}}var e=r.context,d=r.state,g=new THREE.Frustum,c=new THREE.Matrix4;new THREE.Vector3,new THREE.Vector3;for(var l=new THREE.Vector3,h=new THREE.Vector3,m=[],p=[,,,,],n=[,,,,],f=[new THREE.Vector3(1,0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0)],s=[new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)],t=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],v=new THREE.Vector4,u=THREE.ShaderLib.depthRGBA,b=THREE.UniformsUtils.clone(u.uniforms),_=THREE.ShaderLib.distanceRGBA,x=THREE.UniformsUtils.clone(_.uniforms),T=0;4!=T;++T){var M=0!=(1&T),E=0!=(2&T),C=new THREE.ShaderMaterial({uniforms:b,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,morphTargets:M,skinning:E});C._shadowPass=!0,p[T]=C,M=new THREE.ShaderMaterial({uniforms:x,vertexShader:_.vertexShader,fragmentShader:_.fragmentShader,morphTargets:M,skinning:E}),M._shadowPass=!0,n[T]=M}var L=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=THREE.PCFShadowMap,this.cullFace=THREE.CullFaceFront,this.render=function(p){var u,b;if(!1!==L.enabled&&(!1!==L.autoUpdate||!1!==L.needsUpdate)){e.clearColor(1,1,1,1),d.disable(e.BLEND),d.enable(e.CULL_FACE),e.frontFace(e.CCW),e.cullFace(L.cullFace===THREE.CullFaceFront?e.FRONT:e.BACK),d.setDepthTest(!0),r.getViewport(v);for(var _=0,T=a.length,M;_<T;_++)if(M=a[_],!0===M.castShadow){var E=M.shadow,C=E.camera,P=E.mapSize;if(M instanceof THREE.PointLight){u=6,b=!0;var R=P.x/4,D=P.y/2;t[0].set(2*R,D,R,D),t[1].set(0,D,R,D),t[2].set(3*R,D,R,D),t[3].set(R,D,R,D),t[4].set(3*R,0,R,D),t[5].set(R,0,R,D)}else u=1,b=!1;for(null===E.map&&(R=THREE.LinearFilter,L.type===THREE.PCFSoftShadowMap&&(R=THREE.NearestFilter),E.map=new THREE.WebGLRenderTarget(P.x,P.y,{minFilter:R,magFilter:R,format:THREE.RGBAFormat}),E.matrix=new THREE.Matrix4,M instanceof THREE.SpotLight&&(C.aspect=P.x/P.y),C.updateProjectionMatrix()),P=E.map,E=E.matrix,h.setFromMatrixPosition(M.matrixWorld),C.position.copy(h),r.setRenderTarget(P),r.clear(),P=0;P<u;P++)for(b?(l.copy(C.position),l.add(f[P]),C.up.copy(s[P]),C.lookAt(l),R=t[P],r.setViewport(R.x,R.y,R.z,R.w)):(l.setFromMatrixPosition(M.target.matrixWorld),C.lookAt(l)),C.updateMatrixWorld(),C.matrixWorldInverse.getInverse(C.matrixWorld),E.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),E.multiply(C.projectionMatrix),E.multiply(C.matrixWorldInverse),c.multiplyMatrices(C.projectionMatrix,C.matrixWorldInverse),g.setFromMatrix(c),m.length=0,S(p,C),R=0,D=m.length;R<D;R++){var V=m[R],k=o.update(V),B=V.material;if(B instanceof THREE.MeshFaceMaterial)for(var F=k.groups,B=B.materials,G=0,N=F.length;G<N;G++){var I=F[G],O=B[I.materialIndex];!0===O.visible&&(O=i(V,O,b,h),r.renderBufferDirect(C,a,null,k,O,V,I))}else O=i(V,B,b,h),r.renderBufferDirect(C,a,null,k,O,V,null)}r.resetGLState()}r.setViewport(v.x,v.y,v.z,v.w),p=r.getClearColor(),u=r.getClearAlpha(),r.setClearColor(p,u),d.enable(e.BLEND),L.cullFace===THREE.CullFaceFront&&e.cullFace(e.BACK),r.resetGLState(),L.needsUpdate=!1}}},THREE.WebGLState=function(r,a,o){var i=this,S=new Uint8Array(16),e=new Uint8Array(16),g=new Uint8Array(16),d={},f=null,c=null,_=null,T=null,M=null,E=null,C=null,L=null,P=null,R=null,V=null,U=null,F=null,G=null,N=null,I=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),z={},O;this.init=function(){r.clearColor(0,0,0,1),r.clearDepth(1),r.clearStencil(0),this.enable(r.DEPTH_TEST),r.depthFunc(r.LEQUAL),r.frontFace(r.CCW),r.cullFace(r.BACK),this.enable(r.CULL_FACE),this.enable(r.BLEND),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA)},this.initAttributes=function(){for(var e=0,t=S.length;e<t;e++)S[e]=0},this.enableAttribute=function(t){S[t]=1,0===e[t]&&(r.enableVertexAttribArray(t),e[t]=1),0!==g[t]&&(a.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(t,0),g[t]=0)},this.enableAttributeAndDivisor=function(t,a,o){S[t]=1,0===e[t]&&(r.enableVertexAttribArray(t),e[t]=1),g[t]!==a&&(o.vertexAttribDivisorANGLE(t,a),g[t]=a)},this.disableUnusedAttributes=function(){for(var t=0,a=e.length;t<a;t++)e[t]!==S[t]&&(r.disableVertexAttribArray(t),e[t]=0)},this.enable=function(e){!0!==d[e]&&(r.enable(e),d[e]=!0)},this.disable=function(e){!1!==d[e]&&(r.disable(e),d[e]=!1)},this.getCompressedTextureFormats=function(){if(null===f&&(f=[],a.get("WEBGL_compressed_texture_pvrtc")||a.get("WEBGL_compressed_texture_s3tc")))for(var e=r.getParameter(r.COMPRESSED_TEXTURE_FORMATS),t=0;t<e.length;t++)f.push(e[t]);return f},this.setBlending=function(t,a,i,e,n,s,p){t!==c&&(t===THREE.NoBlending?this.disable(r.BLEND):t===THREE.AdditiveBlending?(this.enable(r.BLEND),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.SRC_ALPHA,r.ONE)):t===THREE.SubtractiveBlending?(this.enable(r.BLEND),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ZERO,r.ONE_MINUS_SRC_COLOR)):t===THREE.MultiplyBlending?(this.enable(r.BLEND),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ZERO,r.SRC_COLOR)):t===THREE.CustomBlending?this.enable(r.BLEND):(this.enable(r.BLEND),r.blendEquationSeparate(r.FUNC_ADD,r.FUNC_ADD),r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA)),c=t),t===THREE.CustomBlending?(n=n||a,s=s||i,p=p||e,(a!==_||n!==E)&&(r.blendEquationSeparate(o(a),o(n)),_=a,E=n),(i!==T||e!==M||s!==C||p!==L)&&(r.blendFuncSeparate(o(i),o(e),o(s),o(p)),T=i,M=e,C=s,L=p)):L=C=E=M=T=_=null},this.setDepthFunc=function(e){P!==e&&(e?e===THREE.NeverDepth?r.depthFunc(r.NEVER):e===THREE.AlwaysDepth?r.depthFunc(r.ALWAYS):e===THREE.LessDepth?r.depthFunc(r.LESS):e===THREE.LessEqualDepth?r.depthFunc(r.LEQUAL):e===THREE.EqualDepth?r.depthFunc(r.EQUAL):e===THREE.GreaterEqualDepth?r.depthFunc(r.GEQUAL):e===THREE.GreaterDepth?r.depthFunc(r.GREATER):e===THREE.NotEqualDepth?r.depthFunc(r.NOTEQUAL):r.depthFunc(r.LEQUAL):r.depthFunc(r.LEQUAL),P=e)},this.setDepthTest=function(e){e?this.enable(r.DEPTH_TEST):this.disable(r.DEPTH_TEST)},this.setDepthWrite=function(e){R!==e&&(r.depthMask(e),R=e)},this.setColorWrite=function(e){V!==e&&(r.colorMask(e,e,e,e),V=e)},this.setFlipSided=function(e){U!==e&&(e?r.frontFace(r.CW):r.frontFace(r.CCW),U=e)},this.setLineWidth=function(e){e!==F&&(r.lineWidth(e),F=e)},this.setPolygonOffset=function(e,t,a){e?this.enable(r.POLYGON_OFFSET_FILL):this.disable(r.POLYGON_OFFSET_FILL),e&&(G!==t||N!==a)&&(r.polygonOffset(t,a),G=t,N=a)},this.setScissorTest=function(e){e?this.enable(r.SCISSOR_TEST):this.disable(r.SCISSOR_TEST)},this.activeTexture=function(e){void 0===e&&(e=r.TEXTURE0+I-1),O!==e&&(r.activeTexture(e),O=e)},this.bindTexture=function(t,a){void 0===O&&i.activeTexture();var o=z[O];void 0===o&&(o={type:void 0,texture:void 0},z[O]=o),(o.type!==t||o.texture!==a)&&(r.bindTexture(t,a),o.type=t,o.texture=a)},this.compressedTexImage2D=function(){try{r.compressedTexImage2D.apply(r,arguments)}catch(e){console.error(e)}},this.texImage2D=function(){try{r.texImage2D.apply(r,arguments)}catch(e){console.error(e)}},this.reset=function(){for(var t=0;t<e.length;t++)1===e[t]&&(r.disableVertexAttribArray(t),e[t]=0);d={},U=V=R=c=f=null}},THREE.LensFlarePlugin=function(r,a){var o=r.context,i=r.state,n,b,S,y,x,_,P,R,V,U,G,I,W,j,B,F;this.render=function(e,t,s,l){if(0!==a.length){e=new THREE.Vector3;var p=l/s,d=.5*s,c=.5*l,m=16/l,u=new THREE.Vector2(m*p,m),h=new THREE.Vector3(1,1,0),g=new THREE.Vector2(1,1);if(void 0===W){var m=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),f=new Uint16Array([0,1,2,0,2,3]);G=o.createBuffer(),I=o.createBuffer(),o.bindBuffer(o.ARRAY_BUFFER,G),o.bufferData(o.ARRAY_BUFFER,m,o.STATIC_DRAW),o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,I),o.bufferData(o.ELEMENT_ARRAY_BUFFER,f,o.STATIC_DRAW),B=o.createTexture(),F=o.createTexture(),i.bindTexture(o.TEXTURE_2D,B),o.texImage2D(o.TEXTURE_2D,0,o.RGB,16,16,0,o.RGB,o.UNSIGNED_BYTE,null),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_S,o.CLAMP_TO_EDGE),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_T,o.CLAMP_TO_EDGE),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MAG_FILTER,o.NEAREST),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MIN_FILTER,o.NEAREST),i.bindTexture(o.TEXTURE_2D,F),o.texImage2D(o.TEXTURE_2D,0,o.RGBA,16,16,0,o.RGBA,o.UNSIGNED_BYTE,null),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_S,o.CLAMP_TO_EDGE),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_T,o.CLAMP_TO_EDGE),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MAG_FILTER,o.NEAREST),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MIN_FILTER,o.NEAREST);var m=(j=0<o.getParameter(o.MAX_VERTEX_TEXTURE_IMAGE_UNITS))?{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif ( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif ( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if ( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif ( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif ( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if ( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},f=o.createProgram(),v=o.createShader(o.FRAGMENT_SHADER),A=o.createShader(o.VERTEX_SHADER),L="precision "+r.getPrecision()+" float;\n";o.shaderSource(v,L+m.fragmentShader),o.shaderSource(A,L+m.vertexShader),o.compileShader(v),o.compileShader(A),o.attachShader(f,v),o.attachShader(f,A),o.linkProgram(f),W=f,V=o.getAttribLocation(W,"position"),U=o.getAttribLocation(W,"uv"),n=o.getUniformLocation(W,"renderType"),b=o.getUniformLocation(W,"map"),S=o.getUniformLocation(W,"occlusionMap"),y=o.getUniformLocation(W,"opacity"),x=o.getUniformLocation(W,"color"),_=o.getUniformLocation(W,"scale"),P=o.getUniformLocation(W,"rotation"),R=o.getUniformLocation(W,"screenPosition")}for(o.useProgram(W),i.initAttributes(),i.enableAttribute(V),i.enableAttribute(U),i.disableUnusedAttributes(),o.uniform1i(S,0),o.uniform1i(b,1),o.bindBuffer(o.ARRAY_BUFFER,G),o.vertexAttribPointer(V,2,o.FLOAT,!1,16,0),o.vertexAttribPointer(U,2,o.FLOAT,!1,16,8),o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,I),i.disable(o.CULL_FACE),o.depthMask(!1),f=0,v=a.length;f<v;f++)if(m=16/l,u.set(m*p,m),A=a[f],e.set(A.matrixWorld.elements[12],A.matrixWorld.elements[13],A.matrixWorld.elements[14]),e.applyMatrix4(t.matrixWorldInverse),e.applyProjection(t.projectionMatrix),h.copy(e),g.x=h.x*d+d,g.y=h.y*c+c,j||0<g.x&&g.x<s&&0<g.y&&g.y<l){i.activeTexture(o.TEXTURE0),i.bindTexture(o.TEXTURE_2D,null),i.activeTexture(o.TEXTURE1),i.bindTexture(o.TEXTURE_2D,B),o.copyTexImage2D(o.TEXTURE_2D,0,o.RGB,g.x-8,g.y-8,16,16,0),o.uniform1i(n,0),o.uniform2f(_,u.x,u.y),o.uniform3f(R,h.x,h.y,h.z),i.disable(o.BLEND),i.enable(o.DEPTH_TEST),o.drawElements(o.TRIANGLES,6,o.UNSIGNED_SHORT,0),i.activeTexture(o.TEXTURE0),i.bindTexture(o.TEXTURE_2D,F),o.copyTexImage2D(o.TEXTURE_2D,0,o.RGBA,g.x-8,g.y-8,16,16,0),o.uniform1i(n,1),i.disable(o.DEPTH_TEST),i.activeTexture(o.TEXTURE1),i.bindTexture(o.TEXTURE_2D,B),o.drawElements(o.TRIANGLES,6,o.UNSIGNED_SHORT,0),A.positionScreen.copy(h),A.customUpdateCallback?A.customUpdateCallback(A):A.updateLensFlares(),o.uniform1i(n,2),i.enable(o.BLEND);for(var L=0,w=A.lensFlares.length,T;L<w;L++)T=A.lensFlares[L],.001<T.opacity&&.001<T.scale&&(h.x=T.x,h.y=T.y,h.z=T.z,m=T.size*T.scale/l,u.x=m*p,u.y=m,o.uniform3f(R,h.x,h.y,h.z),o.uniform2f(_,u.x,u.y),o.uniform1f(P,T.rotation),o.uniform1f(y,T.opacity),o.uniform3f(x,T.color.r,T.color.g,T.color.b),i.setBlending(T.blending,T.blendEquation,T.blendSrc,T.blendDst),r.setTexture(T.texture,1),o.drawElements(o.TRIANGLES,6,o.UNSIGNED_SHORT,0))}i.enable(o.CULL_FACE),i.enable(o.DEPTH_TEST),o.depthMask(!0),r.resetGLState()}}},THREE.SpritePlugin=function(r,a){function o(e,t){return e.z===t.z?t.id-e.id:t.z-e.z}var i=r.context,x=r.state,b=new THREE.Vector3,S=new THREE.Quaternion,_=new THREE.Vector3,C,P,D,V,U,B,F,G,N,I,W,j,X,Y,O,Z,$,ee,te,re,Q;this.render=function(e,t){if(0!==a.length){if(void 0===re){var n=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),s=new Uint16Array([0,1,2,0,2,3]);ee=i.createBuffer(),te=i.createBuffer(),i.bindBuffer(i.ARRAY_BUFFER,ee),i.bufferData(i.ARRAY_BUFFER,n,i.STATIC_DRAW),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,te),i.bufferData(i.ELEMENT_ARRAY_BUFFER,s,i.STATIC_DRAW);var n=i.createProgram(),s=i.createShader(i.VERTEX_SHADER),l=i.createShader(i.FRAGMENT_SHADER);i.shaderSource(s,["precision "+r.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n")),i.shaderSource(l,["precision "+r.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n")),i.compileShader(s),i.compileShader(l),i.attachShader(n,s),i.attachShader(n,l),i.linkProgram(n),re=n,Z=i.getAttribLocation(re,"position"),$=i.getAttribLocation(re,"uv"),C=i.getUniformLocation(re,"uvOffset"),P=i.getUniformLocation(re,"uvScale"),D=i.getUniformLocation(re,"rotation"),V=i.getUniformLocation(re,"scale"),U=i.getUniformLocation(re,"color"),B=i.getUniformLocation(re,"map"),F=i.getUniformLocation(re,"opacity"),G=i.getUniformLocation(re,"modelViewMatrix"),N=i.getUniformLocation(re,"projectionMatrix"),I=i.getUniformLocation(re,"fogType"),W=i.getUniformLocation(re,"fogDensity"),j=i.getUniformLocation(re,"fogNear"),X=i.getUniformLocation(re,"fogFar"),Y=i.getUniformLocation(re,"fogColor"),O=i.getUniformLocation(re,"alphaTest"),n=document.createElement("canvas"),n.width=8,n.height=8,s=n.getContext("2d"),s.fillStyle="white",s.fillRect(0,0,8,8),Q=new THREE.Texture(n),Q.needsUpdate=!0}i.useProgram(re),x.initAttributes(),x.enableAttribute(Z),x.enableAttribute($),x.disableUnusedAttributes(),x.disable(i.CULL_FACE),x.enable(i.BLEND),i.bindBuffer(i.ARRAY_BUFFER,ee),i.vertexAttribPointer(Z,2,i.FLOAT,!1,16,0),i.vertexAttribPointer($,2,i.FLOAT,!1,16,8),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,te),i.uniformMatrix4fv(N,!1,t.projectionMatrix.elements),x.activeTexture(i.TEXTURE0),i.uniform1i(B,0),s=n=0,(l=e.fog)?(i.uniform3f(Y,l.color.r,l.color.g,l.color.b),l instanceof THREE.Fog?(i.uniform1f(j,l.near),i.uniform1f(X,l.far),i.uniform1i(I,1),s=n=1):l instanceof THREE.FogExp2&&(i.uniform1f(W,l.density),i.uniform1i(I,2),s=n=2)):(i.uniform1i(I,0),s=n=0);for(var l=0,p=a.length,d;l<p;l++)d=a[l],d.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,d.matrixWorld),d.z=-d.modelViewMatrix.elements[14];a.sort(o);for(var c=[],l=0,p=a.length;l<p;l++){var d=a[l],m=d.material;i.uniform1f(O,m.alphaTest),i.uniformMatrix4fv(G,!1,d.modelViewMatrix.elements),d.matrixWorld.decompose(b,S,_),c[0]=_.x,c[1]=_.y,d=0,e.fog&&m.fog&&(d=s),n!==d&&(i.uniform1i(I,d),n=d),null===m.map?(i.uniform2f(C,0,0),i.uniform2f(P,1,1)):(i.uniform2f(C,m.map.offset.x,m.map.offset.y),i.uniform2f(P,m.map.repeat.x,m.map.repeat.y)),i.uniform1f(F,m.opacity),i.uniform3f(U,m.color.r,m.color.g,m.color.b),i.uniform1f(D,m.rotation),i.uniform2fv(V,c),x.setBlending(m.blending,m.blendEquation,m.blendSrc,m.blendDst),x.setDepthTest(m.depthTest),x.setDepthWrite(m.depthWrite),m.map&&m.map.image&&m.map.image.width?r.setTexture(m.map,0):r.setTexture(Q,0),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0)}x.enable(i.CULL_FACE),r.resetGLState()}}},THREE.CurveUtils={tangentQuadraticBezier:function(e,t,r,a){return 2*(1-e)*(r-t)+2*e*(a-r)},tangentCubicBezier:function(t,r,a,o,i){return-3*r*(1-t)*(1-t)+3*a*(1-t)*(1-t)-6*t*a*(1-t)+6*t*o*(1-t)-3*t*t*o+3*t*t*i},tangentSpline:function(e){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(t,r,o,i,n){t=.5*(o-t),i=.5*(i-r);var e=n*n;return(2*r-2*o+t+i)*n*e+(-3*r+3*o-2*t-i)*e+t*n+r}},THREE.GeometryUtils={merge:function(e,t,r){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var a;t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),a=t.matrix,t=t.geometry),e.merge(t,a,r)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(t,r,o,i){console.warn("THREE.ImageUtils.loadTexture is being deprecated. Use THREE.TextureLoader() instead.");var n=new THREE.TextureLoader;return n.setCrossOrigin(this.crossOrigin),t=n.load(t,o,void 0,i),r&&(t.mapping=r),t},loadTextureCube:function(t,r,o,i){console.warn("THREE.ImageUtils.loadTextureCube is being deprecated. Use THREE.CubeTextureLoader() instead.");var n=new THREE.CubeTextureLoader;return n.setCrossOrigin(this.crossOrigin),t=n.load(t,o,void 0,i),r&&(t.mapping=r),t},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}},THREE.SceneUtils={createMultiMaterialObject:function(t,r){for(var a=new THREE.Group,o=0,i=r.length;o<i;o++)a.add(new THREE.Mesh(t,r[o]));return a},detach:function(e,t,r){e.applyMatrix(t.matrixWorld),t.remove(e),r.add(e)},attach:function(e,t,r){var a=new THREE.Matrix4;a.getInverse(r.matrixWorld),e.applyMatrix(a),t.remove(e),r.add(e)}},THREE.ShapeUtils={area:function(t){for(var r=t.length,a=0,o=r-1,i=0;i<r;o=i++)a+=t[o].x*t[i].y-t[i].x*t[o].y;return .5*a},triangulate:function(){var r=Number.EPSILON;return function(o,a){var i=o.length;if(3>i)return null;var b=[],d=[],e=[],g,S,_;if(0<THREE.ShapeUtils.area(o))for(S=0;S<i;S++)d[S]=S;else for(S=0;S<i;S++)d[S]=i-1-S;var T=2*i;for(S=i-1;2<i;){if(0>=T--){console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()");break}g=S,i<=g&&(g=0),S=g+1,i<=S&&(S=0),_=S+1,i<=_&&(_=0);var M;a:{var E=M=void 0,L=void 0,P=void 0,R=void 0,V=void 0,U=void 0,G=void 0,I=void 0,E=o[d[g]].x,L=o[d[g]].y,P=o[d[S]].x,R=o[d[S]].y,V=o[d[_]].x,U=o[d[_]].y;if(r>(P-E)*(U-L)-(R-L)*(V-E))M=!1;else{var O=void 0,H=void 0,W=void 0,j=void 0,X=void 0,Y=void 0,K=void 0,Q=void 0,Z=void 0,$=void 0,Z=Q=K=I=G=void 0,O=V-P,H=U-R,W=E-V,j=L-U,X=P-E,Y=R-L;for(M=0;M<i;M++)if(G=o[d[M]].x,I=o[d[M]].y,(G!==E||I!==L)&&(G!==P||I!==R)&&(G!==V||I!==U)&&(K=G-E,Q=I-L,Z=G-P,$=I-R,G-=V,I-=U,Z=O*$-H*Z,K=X*Q-Y*K,Q=W*I-j*G,Z>=-r&&Q>=-r&&K>=-r)){M=!1;break a}M=!0}}if(M){for(b.push([o[d[g]],o[d[S]],o[d[_]]]),e.push([d[g],d[S],d[_]]),g=S,_=S+1;_<i;g++,_++)d[g]=d[_];i--,T=2*i}}return a?e:b}}(),triangulateShape:function(t,r){function o(e,t,r){return e.x===t.x?e.y<t.y?e.y<=r.y&&r.y<=t.y:t.y<=r.y&&r.y<=e.y:e.x<t.x?e.x<=r.x&&r.x<=t.x:t.x<=r.x&&r.x<=e.x}function i(t,r,i,n,e){var c=r.x-t.x,y=r.y-t.y,x=n.x-i.x,v=n.y-i.y,S=t.x-i.x,m=t.y-i.y,p=y*x-c*v,_=y*S-c*m;if(u(p)>s){if(0<p){if(0>_||_>p)return[];if(x=v*S-x*m,0>x||x>p)return[]}else{if(0<_||_<p)return[];if(x=v*S-x*m,0<x||x<p)return[]}return 0===x?e&&(0===_||_===p)?[]:[t]:x===p?e&&(0===_||_===p)?[]:[r]:0===_?[i]:_===p?[n]:(e=x/p,[{x:t.x+e*c,y:t.y+e*y}])}return 0!=_||v*S!=x*m?[]:(y=0===c&&0===y,x=0===x&&0===v,y&&x)?t.x!==i.x||t.y!==i.y?[]:[t]:y?o(i,n,t)?[t]:[]:x?o(t,r,i)?[i]:[]:(0===c?(t.y<r.y?(c=t,x=t.y,y=r,t=r.y):(c=r,x=r.y,y=t,t=t.y),i.y<n.y?(r=i,p=i.y,v=n,i=n.y):(r=n,p=n.y,v=i,i=i.y)):(t.x<r.x?(c=t,x=t.x,y=r,t=r.x):(c=r,x=r.x,y=t,t=t.x),i.x<n.x?(r=i,p=i.x,v=n,i=n.x):(r=n,p=n.x,v=i,i=i.x)),x<=p?t<p?[]:t===p?e?[]:[r]:t<=i?[r,y]:[r,v]:x>i?[]:x===i?e?[]:[c]:t<=i?[c,y]:[c,v])}function n(t,r,o,i){var n=r.x-t.x,l=r.y-t.y;r=o.x-t.x,o=o.y-t.y;var p=i.x-t.x;return i=i.y-t.y,t=n*o-l*r,n=n*i-l*p,u(t)>s?(r=p*o-i*r,0<t?0<=n&&0<=r:0<=n||0<=r):0<n}var s=Number.EPSILON,u=Math.abs,e={},a,d,c,m,y;for(c=t.concat(),a=0,d=r.length;a<d;a++)Array.prototype.push.apply(c,r[a]);for(a=0,d=c.length;a<d;a++)y=c[a].x+":"+c[a].y,void 0!==e[y]&&console.warn("THREE.Shape: Duplicate point",y),e[y]=a;a=function(e,t){function r(e,t){var r=s.length-1,a=e-1;0>a&&(a=r);var o=e+1;return(o>r&&(o=0),r=n(s[e],s[a],s[o],u[t]),!!r)&&(r=u.length-1,a=t-1,0>a&&(a=r),o=t+1,o>r&&(o=0),!!(r=n(u[t],u[a],u[o],s[e])))}function a(t,r){var a,o;for(a=0;a<s.length;a++)if(o=a+1,o%=s.length,o=i(t,r,s[a],s[o],!0),0<o.length)return!0;return!1}function o(r,a){var o,n,s,l;for(o=0;o<d.length;o++)for(n=t[d[o]],s=0;s<n.length;s++)if(l=s+1,l%=n.length,l=i(r,a,n[s],n[l],!0),0<l.length)return!0;return!1}var s=e.concat(),d=[],l=[],c=0,u,g,f,x,v,b,S,_,T;for(g=t.length;c<g;c++)d.push(c);S=0;for(var M=2*d.length;0<d.length;){if(M--,0>M){console.log("Infinite Loop! Holes left:"+d.length+", Probably Hole outside Shape!");break}for(f=S;f<s.length;f++){for(x=s[f],g=-1,c=0;c<d.length;c++)if(v=d[c],b=x.x+":"+x.y+":"+v,void 0===l[b]){for(u=t[v],_=0;_<u.length;_++)if(v=u[_],r(f,_)&&!a(x,v)&&!o(x,v)){g=_,d.splice(c,1),S=s.slice(0,f+1),v=s.slice(f),_=u.slice(g),T=u.slice(0,g+1),s=S.concat(_).concat(T).concat(v),S=f;break}if(0<=g)break;l[b]=!0}if(0<=g)break}}return s}(t,r);var x=THREE.ShapeUtils.triangulate(a,!1);for(a=0,d=x.length;a<d;a++)for(m=x[a],c=0;3>c;c++)y=m[c].x+":"+m[c].y,y=e[y],void 0!==y&&(m[c]=y);return x.concat()},isClockWise:function(e){return 0>THREE.ShapeUtils.area(e)},b2:function(){return function(t,r,a,o){var i=1-t;return i*i*r+2*(1-t)*t*a+t*t*o}}(),b3:function(){return function(t,r,a,o,i){var e=1-t,n=1-t;return e*e*e*r+3*n*n*t*a+3*(1-t)*t*t*o+t*t*t*i}}()},THREE.Audio=function(e){THREE.Object3D.call(this),this.type="Audio",this.context=e.context,this.source=this.context.createBufferSource(),this.source.onended=this.onEnded.bind(this),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.panner=this.context.createPanner(),this.panner.connect(this.gain),this.autoplay=!1,this.startTime=0,this.playbackRate=1,this.isPlaying=!1},THREE.Audio.prototype=Object.create(THREE.Object3D.prototype),THREE.Audio.prototype.constructor=THREE.Audio,THREE.Audio.prototype.load=function(e){var t=this,r=new XMLHttpRequest;return r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){t.context.decodeAudioData(this.response,function(e){t.source.buffer=e,t.autoplay&&t.play()})},r.send(),this},THREE.Audio.prototype.play=function(){if(!0===this.isPlaying)console.warn("THREE.Audio: Audio is already playing.");else{var e=this.context.createBufferSource();e.buffer=this.source.buffer,e.loop=this.source.loop,e.onended=this.source.onended,e.start(0,this.startTime),e.playbackRate.value=this.playbackRate,this.isPlaying=!0,this.source=e,this.connect()}},THREE.Audio.prototype.pause=function(){this.source.stop(),this.startTime=this.context.currentTime},THREE.Audio.prototype.stop=function(){this.source.stop(),this.startTime=0},THREE.Audio.prototype.connect=function(){void 0===this.filter?this.source.connect(this.panner):(this.source.connect(this.filter),this.filter.connect(this.panner))},THREE.Audio.prototype.disconnect=function(){void 0===this.filter?this.source.disconnect(this.panner):(this.source.disconnect(this.filter),this.filter.disconnect(this.panner))},THREE.Audio.prototype.setFilter=function(e){!0===this.isPlaying?(this.disconnect(),this.filter=e,this.connect()):this.filter=e},THREE.Audio.prototype.getFilter=function(){return this.filter},THREE.Audio.prototype.setPlaybackRate=function(e){this.playbackRate=e,!0===this.isPlaying&&(this.source.playbackRate.value=this.playbackRate)},THREE.Audio.prototype.getPlaybackRate=function(){return this.playbackRate},THREE.Audio.prototype.onEnded=function(){this.isPlaying=!1},THREE.Audio.prototype.setLoop=function(e){this.source.loop=e},THREE.Audio.prototype.getLoop=function(){return this.source.loop},THREE.Audio.prototype.setRefDistance=function(e){this.panner.refDistance=e},THREE.Audio.prototype.getRefDistance=function(){return this.panner.refDistance},THREE.Audio.prototype.setRolloffFactor=function(e){this.panner.rolloffFactor=e},THREE.Audio.prototype.getRolloffFactor=function(){return this.panner.rolloffFactor},THREE.Audio.prototype.setVolume=function(e){this.gain.gain.value=e},THREE.Audio.prototype.getVolume=function(){return this.gain.gain.value},THREE.Audio.prototype.updateMatrixWorld=function(){var e=new THREE.Vector3;return function(t){THREE.Object3D.prototype.updateMatrixWorld.call(this,t),e.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(e.x,e.y,e.z)}}(),THREE.AudioListener=function(){THREE.Object3D.call(this),this.type="AudioListener",this.context=new(window.AudioContext||window.webkitAudioContext)},THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype),THREE.AudioListener.prototype.constructor=THREE.AudioListener,THREE.AudioListener.prototype.updateMatrixWorld=function(){var t=new THREE.Vector3,r=new THREE.Quaternion,a=new THREE.Vector3,o=new THREE.Vector3;return function(i){THREE.Object3D.prototype.updateMatrixWorld.call(this,i),i=this.context.listener;var n=this.up;this.matrixWorld.decompose(t,r,a),o.set(0,0,-1).applyQuaternion(r),i.setPosition(t.x,t.y,t.z),i.setOrientation(o.x,o.y,o.z,n.x,n.y,n.z)}}(),THREE.Curve=function(){},THREE.Curve.prototype={constructor:THREE.Curve,getPoint:function(){return console.warn("THREE.Curve: Warning, getPoint() not implemented!"),null},getPointAt:function(e){return e=this.getUtoTmapping(e),this.getPoint(e)},getPoints:function(e){e||(e=5);var t=[],r;for(r=0;r<=e;r++)t.push(this.getPoint(r/e));return t},getSpacedPoints:function(e){e||(e=5);var t=[],r;for(r=0;r<=e;r++)t.push(this.getPointAt(r/e));return t},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(t){if(t||(t=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var r=[],o=this.getPoint(0),i=0,n,s;for(r.push(0),s=1;s<=t;s++)n=this.getPoint(s/t),i+=n.distanceTo(o),r.push(i),o=n;return this.cacheArcLengths=r},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,r){var a=this.getLengths(),o=0,i=a.length,e;e=r?r:t*a[i-1];for(var n=0,s=i-1,p;n<=s;)if(o=Math.floor(n+(s-n)/2),p=a[o]-e,0>p)n=o+1;else if(0<p)s=o-1;else{s=o;break}return(o=s,a[o]===e)?o/(i-1):(n=a[o],a=(o+(e-n)/(a[o+1]-n))/(i-1))},getTangent:function(e){var t=e-1E-4;return e+=1E-4,0>t&&(t=0),1<e&&(e=1),t=this.getPoint(t),this.getPoint(e).clone().sub(t).normalize()},getTangentAt:function(e){return e=this.getUtoTmapping(e),this.getTangent(e)}},THREE.Curve.Utils=THREE.CurveUtils,THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},THREE.CurvePath=function(){this.curves=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.constructor=THREE.CurvePath,THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t=e*this.getLength(),r=this.getCurveLengths(),o=0;o<r.length;){if(r[o]>=t)return e=this.curves[o],t=1-(r[o]-t)/e.getLength(),e.getPointAt(t);o++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],t=0,r=0,a=this.curves.length;r<a;r++)t+=this.curves[r].getLength(),e.push(t);return this.cacheLengths=e},THREE.CurvePath.prototype.createPointsGeometry=function(e){return e=this.getPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){return e=this.getSpacedPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createGeometry=function(t){for(var r=new THREE.Geometry,a=0,o=t.length,i;a<o;a++)i=t[a],r.vertices.push(new THREE.Vector3(i.x,i.y,i.z||0));return r},THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.Path.prototype.constructor=THREE.Path,THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){this.actions.push({action:"moveTo",args:[e,t]})},THREE.Path.prototype.lineTo=function(e,t){var r=this.actions[this.actions.length-1].args,r=new THREE.LineCurve(new THREE.Vector2(r[r.length-2],r[r.length-1]),new THREE.Vector2(e,t));this.curves.push(r),this.actions.push({action:"lineTo",args:[e,t]})},THREE.Path.prototype.quadraticCurveTo=function(t,r,a,o){var i=this.actions[this.actions.length-1].args,i=new THREE.QuadraticBezierCurve(new THREE.Vector2(i[i.length-2],i[i.length-1]),new THREE.Vector2(t,r),new THREE.Vector2(a,o));this.curves.push(i),this.actions.push({action:"quadraticCurveTo",args:[t,r,a,o]})},THREE.Path.prototype.bezierCurveTo=function(t,r,a,o,i,e){var n=this.actions[this.actions.length-1].args,n=new THREE.CubicBezierCurve(new THREE.Vector2(n[n.length-2],n[n.length-1]),new THREE.Vector2(t,r),new THREE.Vector2(a,o),new THREE.Vector2(i,e));this.curves.push(n),this.actions.push({action:"bezierCurveTo",args:[t,r,a,o,i,e]})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,r=[new THREE.Vector2(r[r.length-2],r[r.length-1])];Array.prototype.push.apply(r,e),r=new THREE.SplineCurve(r),this.curves.push(r),this.actions.push({action:"splineThru",args:t})},THREE.Path.prototype.arc=function(t,r,a,o,i,e){var n=this.actions[this.actions.length-1].args;this.absarc(t+n[n.length-2],r+n[n.length-1],a,o,i,e)},THREE.Path.prototype.absarc=function(t,r,a,o,i,e){this.absellipse(t,r,a,a,o,i,e)},THREE.Path.prototype.ellipse=function(t,r,a,o,i,e,n,s){var p=this.actions[this.actions.length-1].args;this.absellipse(t+p[p.length-2],r+p[p.length-1],a,o,i,e,n,s)},THREE.Path.prototype.absellipse=function(t,r,o,i,n,e,s,p){var d=[t,r,o,i,n,e,s,p||0];t=new THREE.EllipseCurve(t,r,o,i,n,e,s,p),this.curves.push(t),t=t.getPoint(1),d.push(t.x),d.push(t.y),this.actions.push({action:"ellipse",args:d})},THREE.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var t=[],r=0;r<e;r++)t.push(this.getPoint(r/e));return t},THREE.Path.prototype.getPoints=function(r,o){var i=Number.EPSILON,y=Math.abs,b=Math.sin,S=Math.cos;r=r||12;for(var _=THREE.ShapeUtils.b2,T=THREE.ShapeUtils.b3,d=[],e=0,M=this.actions.length,v,E,C,A,L,P,R,V,U,F;e<M;e++){U=this.actions[e];var G=U.args;switch(U.action){case"moveTo":d.push(new THREE.Vector2(G[0],G[1]));break;case"lineTo":d.push(new THREE.Vector2(G[0],G[1]));break;case"quadraticCurveTo":for(v=G[2],E=G[3],L=G[0],P=G[1],0<d.length?(U=d[d.length-1],R=U.x,V=U.y):(U=this.actions[e-1].args,R=U[U.length-2],V=U[U.length-1]),G=1;G<=r;G++)F=G/r,U=_(F,R,L,v),F=_(F,V,P,E),d.push(new THREE.Vector2(U,F));break;case"bezierCurveTo":for(v=G[4],E=G[5],L=G[0],P=G[1],C=G[2],A=G[3],0<d.length?(U=d[d.length-1],R=U.x,V=U.y):(U=this.actions[e-1].args,R=U[U.length-2],V=U[U.length-1]),G=1;G<=r;G++)F=G/r,U=T(F,R,L,C,v),F=T(F,V,P,A,E),d.push(new THREE.Vector2(U,F));break;case"splineThru":for(U=this.actions[e-1].args,F=[new THREE.Vector2(U[U.length-2],U[U.length-1])],U=r*G[0].length,F=F.concat(G[0]),F=new THREE.SplineCurve(F),G=1;G<=U;G++)d.push(F.getPointAt(G/U));break;case"arc":for(v=G[0],E=G[1],P=G[2],C=G[3],U=G[4],L=!!G[5],R=U-C,V=2*r,G=1;G<=V;G++)F=G/V,L||(F=1-F),F=C+F*R,U=v+P*S(F),F=E+P*b(F),d.push(new THREE.Vector2(U,F));break;case"ellipse":v=G[0],E=G[1],P=G[2],A=G[3],C=G[4],U=G[5],L=!!G[6];var N=G[7];R=U-C,V=2*r;var w,z;for(0!==N&&(w=S(N),z=b(N)),G=1;G<=V;G++){if(F=G/V,L||(F=1-F),F=C+F*R,U=v+P*S(F),F=E+A*b(F),0!==N){var I=U;U=(I-v)*w-(F-E)*z+v,F=(I-v)*z+(F-E)*w+E}d.push(new THREE.Vector2(U,F))}}}return _=d[d.length-1],y(_.x-d[0].x)<i&&y(_.y-d[0].y)<i&&d.splice(d.length-1,1),o&&d.push(d[0]),d},THREE.Path.prototype.toShapes=function(r,a){function o(t){for(var r=[],a=0,o=t.length;a<o;a++){var i=t[a],e=new THREE.Shape;e.actions=i.actions,e.curves=i.curves,r.push(e)}return r}function i(t,r){for(var a=r.length,o=!1,i=a-1,n=0;n<a;i=n++){var s=r[i],p=r[n],c=p.x-s.x,m=p.y-s.y;if(Math.abs(m)>Number.EPSILON){if(0>m&&(s=r[n],c=-c,p=r[i],m=-m),!(t.y<s.y||t.y>p.y))if(t.y!==s.y){if(i=m*(t.x-s.x)-c*(t.y-s.y),0===i)return!0;0>i||(o=!o)}else if(t.x===s.x)return!0;}else if(t.y===s.y&&(p.x<=t.x&&t.x<=s.x||s.x<=t.x&&t.x<=p.x))return!0}return o}var d=THREE.ShapeUtils.isClockWise,c=function(t){for(var r=[],a=new THREE.Path,o=0,i=t.length;o<i;o++){var e=t[o],n=e.args,e=e.action;"moveTo"===e&&0!==a.actions.length&&(r.push(a),a=new THREE.Path),a[e].apply(a,n)}return 0!==a.actions.length&&r.push(a),r}(this.actions);if(0===c.length)return[];if(!0===a)return o(c);var u=[],y,x,b;if(1===c.length)return x=c[0],b=new THREE.Shape,b.actions=x.actions,b.curves=x.curves,u.push(b),u;var S=!d(c[0].getPoints()),S=r?!S:S;b=[];var _=[],p=[],T=0,M;_[T]=void 0,p[T]=[];for(var E=0,C=c.length;E<C;E++)x=c[E],M=x.getPoints(),y=d(M),(y=r?!y:y)?(!S&&_[T]&&T++,_[T]={s:new THREE.Shape,p:M},_[T].s.actions=x.actions,_[T].s.curves=x.curves,S&&T++,p[T]=[]):p[T].push({h:x,p:M[0]});if(!_[0])return o(c);if(1<_.length){for(E=!1,x=[],d=0,c=_.length;d<c;d++)b[d]=[];for(d=0,c=_.length;d<c;d++)for(y=p[d],S=0;S<y.length;S++){for(T=y[S],M=!0,C=0;C<_.length;C++)i(T.p,_[C].p)&&(d!==C&&x.push({froms:d,tos:C,hole:S}),M?(M=!1,b[C].push(T)):E=!0);M&&b[d].push(T)}0<x.length&&(E||(p=b))}for(E=0,d=_.length;E<d;E++)for(b=_[E].s,u.push(b),x=p[E],c=0,y=x.length;c<y;c++)b.holes.push(x[c].h);return u},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.constructor=THREE.Shape,THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){for(var t=[],r=0,a=this.holes.length;r<a;r++)t[r]=this.holes[r].getPoints(e);return t},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.extractAllPoints(e)},THREE.Shape.Utils=THREE.ShapeUtils,THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.constructor=THREE.LineCurve,THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,r){this.v0=e,this.v1=t,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve,THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t=THREE.ShapeUtils.b2;return new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y))},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t=THREE.CurveUtils.tangentQuadraticBezier;return new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y)).normalize()},THREE.CubicBezierCurve=function(e,t,r,a){this.v0=e,this.v1=t,this.v2=r,this.v3=a},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve,THREE.CubicBezierCurve.prototype.getPoint=function(e){var t=THREE.ShapeUtils.b3;return new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y))},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t=THREE.CurveUtils.tangentCubicBezier;return new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y)).normalize()},THREE.SplineCurve=function(e){this.points=null==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.constructor=THREE.SplineCurve,THREE.SplineCurve.prototype.getPoint=function(t){var r=this.points;t*=r.length-1;var o=Math.floor(t);t-=o;var i=r[0===o?o:o-1],n=r[o],e=r[o>r.length-2?r.length-1:o+1],r=r[o>r.length-3?r.length-1:o+2],o=THREE.CurveUtils.interpolate;return new THREE.Vector2(o(i.x,n.x,e.x,r.x,t),o(i.y,n.y,e.y,r.y,t))},THREE.EllipseCurve=function(t,r,a,o,i,e,n,s){this.aX=t,this.aY=r,this.xRadius=a,this.yRadius=o,this.aStartAngle=i,this.aEndAngle=e,this.aClockwise=n,this.aRotation=s||0},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve,THREE.EllipseCurve.prototype.getPoint=function(t){var r=Math.PI,o=Math.sin,i=Math.cos,n=this.aEndAngle-this.aStartAngle;0>n&&(n+=2*r),n>2*r&&(n-=2*r),n=!0===this.aClockwise?this.aEndAngle+(1-t)*(2*r-n):this.aStartAngle+t*n,t=this.aX+this.xRadius*i(n);var s=this.aY+this.yRadius*o(n);if(0!==this.aRotation){var n=i(this.aRotation),l=o(this.aRotation),p=t;t=(p-this.aX)*n-(s-this.aY)*l+this.aX,s=(p-this.aX)*l+(s-this.aY)*n+this.aY}return new THREE.Vector2(t,s)},THREE.ArcCurve=function(t,r,a,o,i,e){THREE.EllipseCurve.call(this,t,r,a,a,o,i,e)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.ArcCurve.prototype.constructor=THREE.ArcCurve,THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,r){this.v0=e,this.v1=t,this.v2=r},function(e){var t=THREE.ShapeUtils.b2;return new THREE.Vector3(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y),t(e,this.v0.z,this.v1.z,this.v2.z))}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,r,a){this.v0=e,this.v1=t,this.v2=r,this.v3=a},function(e){var t=THREE.ShapeUtils.b3;return new THREE.Vector3(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z))}),THREE.SplineCurve3=THREE.Curve.create(function(e){console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3"),this.points=null==e?[]:e},function(t){var r=this.points;t*=r.length-1;var o=Math.floor(t);t-=o;var i=r[0==o?o:o-1],n=r[o],e=r[o>r.length-2?r.length-1:o+1],r=r[o>r.length-3?r.length-1:o+2],o=THREE.CurveUtils.interpolate;return new THREE.Vector3(o(i.x,n.x,e.x,r.x,t),o(i.y,n.y,e.y,r.y,t),o(i.z,n.z,e.z,r.z,t))}),THREE.CatmullRomCurve3=function(){function t(){}var r=Math.pow,o=new THREE.Vector3,i=new t,s=new t,d=new t;return t.prototype.init=function(e,t,r,a){this.c0=e,this.c1=r,this.c2=-3*e+3*t-2*r-a,this.c3=2*e-2*t+r+a},t.prototype.initNonuniformCatmullRom=function(t,r,o,i,n,e,s){t=((r-t)/n-(o-t)/(n+e)+(o-r)/e)*e,i=((o-r)/e-(i-r)/(e+s)+(i-o)/s)*e,this.init(r,o,t,i)},t.prototype.initCatmullRom=function(t,r,a,o,i){this.init(r,a,i*(a-t),i*(o-r))},t.prototype.calc=function(e){var t=e*e;return this.c0+this.c1*e+this.c2*t+this.c3*t*e},THREE.Curve.create(function(e){this.points=e||[]},function(e){var t=this.points,c,u;u=t.length,2>u&&console.log("duh, you need at least 2 points"),e*=u-1,c=Math.floor(e),e-=c,0===e&&c===u-1&&(c=u-2,e=1);var g,y,x;if(0===c?(o.subVectors(t[0],t[1]).add(t[0]),g=o):g=t[c-1],y=t[c],x=t[c+1],c+2<u?t=t[c+2]:(o.subVectors(t[u-1],t[u-2]).add(t[u-2]),t=o),void 0===this.type||"centripetal"===this.type||"chordal"===this.type){var v="chordal"===this.type?.5:.25;u=r(g.distanceToSquared(y),v),c=r(y.distanceToSquared(x),v),v=r(x.distanceToSquared(t),v),1E-4>c&&(c=1),1E-4>u&&(u=c),1E-4>v&&(v=c),i.initNonuniformCatmullRom(g.x,y.x,x.x,t.x,u,c,v),s.initNonuniformCatmullRom(g.y,y.y,x.y,t.y,u,c,v),d.initNonuniformCatmullRom(g.z,y.z,x.z,t.z,u,c,v)}else"catmullrom"===this.type&&(u=void 0===this.tension?.5:this.tension,i.initCatmullRom(g.x,y.x,x.x,t.x,u),s.initCatmullRom(g.y,y.y,x.y,t.y,u),d.initCatmullRom(g.z,y.z,x.z,t.z,u));return new THREE.Vector3(i.calc(e),s.calc(e),d.calc(e))})}(),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=null==e?[]:e},function(t){var r=Math.floor,o=this.points;t*=o.length-0;var i=r(t);t-=i;var i=i+(0<i?0:(r(Math.abs(i)/o.length)+1)*o.length),n=o[(i-1)%o.length],s=o[i%o.length],e=o[(i+1)%o.length],o=o[(i+2)%o.length],i=THREE.CurveUtils.interpolate;return new THREE.Vector3(i(n.x,s.x,e.x,o.x,t),i(n.y,s.y,e.y,o.y,t),i(n.z,s.z,e.z,o.z,t))}),THREE.BoxGeometry=function(t,r,a,o,i,n){function s(r,o,i,n,s,p,m,h){var t=l.widthSegments,S=l.heightSegments,_=s/2,T=p/2,M=l.vertices.length,E;"x"===r&&"y"===o||"y"===r&&"x"===o?E="z":"x"===r&&"z"===o||"z"===r&&"x"===o?(E="y",S=l.depthSegments):("z"===r&&"y"===o||"y"===r&&"z"===o)&&(E="x",t=l.depthSegments);var L=t+1,y=S+1,P=s/t,A=p/S,R=new THREE.Vector3;for(R[E]=0<m?1:-1,s=0;s<y;s++)for(p=0;p<L;p++){var V=new THREE.Vector3;V[r]=(p*P-_)*i,V[o]=(s*A-T)*n,V[E]=m,l.vertices.push(V)}for(s=0;s<S;s++)for(p=0;p<t;p++)T=p+L*s,r=p+L*(s+1),o=p+1+L*(s+1),i=p+1+L*s,n=new THREE.Vector2(p/t,1-s/S),m=new THREE.Vector2(p/t,1-(s+1)/S),E=new THREE.Vector2((p+1)/t,1-(s+1)/S),_=new THREE.Vector2((p+1)/t,1-s/S),T=new THREE.Face3(T+M,r+M,i+M),T.normal.copy(R),T.vertexNormals.push(R.clone(),R.clone(),R.clone()),T.materialIndex=h,l.faces.push(T),l.faceVertexUvs[0].push([n,m,_]),T=new THREE.Face3(r+M,o+M,i+M),T.normal.copy(R),T.vertexNormals.push(R.clone(),R.clone(),R.clone()),T.materialIndex=h,l.faces.push(T),l.faceVertexUvs[0].push([m.clone(),E,_.clone()])}THREE.Geometry.call(this),this.type="BoxGeometry",this.parameters={width:t,height:r,depth:a,widthSegments:o,heightSegments:i,depthSegments:n},this.widthSegments=o||1,this.heightSegments=i||1,this.depthSegments=n||1;var l=this;o=t/2,i=r/2,n=a/2,s("z","y",-1,-1,a,r,o,0),s("z","y",1,-1,a,r,-o,1),s("x","z",1,1,t,a,i,2),s("x","z",1,-1,t,a,-i,3),s("x","y",1,-1,t,r,n,4),s("x","y",-1,-1,t,r,-n,5),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry,THREE.BoxGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.BoxGeometry(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)},THREE.CubeGeometry=THREE.BoxGeometry,THREE.CircleGeometry=function(e,t,r,a){THREE.Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:a},this.fromBufferGeometry(new THREE.CircleBufferGeometry(e,t,r,a))},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry,THREE.CircleGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.CircleGeometry(e.radius,e.segments,e.thetaStart,e.thetaLength)},THREE.CircleBufferGeometry=function(t,r,o,i){THREE.BufferGeometry.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:r,thetaStart:o,thetaLength:i},t=t||50,r=void 0===r?8:Math.max(3,r),o=void 0===o?0:o,i=void 0===i?2*Math.PI:i;var n=r+2,s=new Float32Array(3*n),p=new Float32Array(3*n),n=new Float32Array(2*n);p[2]=1,n[0]=.5,n[1]=.5;for(var u=0,g=3,y=2,f;u<=r;u++,g+=3,y+=2)f=o+u/r*i,s[g]=t*Math.cos(f),s[g+1]=t*Math.sin(f),p[g+2]=1,n[y]=(s[g]/t+1)/2,n[y+1]=(s[g+1]/t+1)/2;for(o=[],g=1;g<=r;g++)o.push(g,g+1,0);this.setIndex(new THREE.BufferAttribute(new Uint16Array(o),1)),this.addAttribute("position",new THREE.BufferAttribute(s,3)),this.addAttribute("normal",new THREE.BufferAttribute(p,3)),this.addAttribute("uv",new THREE.BufferAttribute(n,2)),this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),t)},THREE.CircleBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.CircleBufferGeometry.prototype.constructor=THREE.CircleBufferGeometry,THREE.CircleBufferGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.CircleBufferGeometry(e.radius,e.segments,e.thetaStart,e.thetaLength)},THREE.CylinderGeometry=function(r,o,i,S,_,T,M,E){var C=Math.sqrt;THREE.Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:r,radiusBottom:o,height:i,radialSegments:S,heightSegments:_,openEnded:T,thetaStart:M,thetaLength:E},r=void 0===r?20:r,o=void 0===o?20:o,i=void 0===i?100:i,S=S||8,_=_||1,T=void 0!==T&&T,M=void 0===M?0:M,E=void 0===E?2*Math.PI:E;var L=i/2,l=[],p=[],n,P;for(P=0;P<=_;P++){var R=[],V=[],U=P/_,F=U*(o-r)+r;for(n=0;n<=S;n++){var G=n/S,N=new THREE.Vector3;N.x=F*Math.sin(G*E+M),N.y=-U*i+L,N.z=F*Math.cos(G*E+M),this.vertices.push(N),R.push(this.vertices.length-1),V.push(new THREE.Vector2(G,1-U))}l.push(R),p.push(V)}for(i=(o-r)/i,n=0;n<S;n++)for(0===r?(M=this.vertices[l[1][n]].clone(),E=this.vertices[l[1][n+1]].clone()):(M=this.vertices[l[0][n]].clone(),E=this.vertices[l[0][n+1]].clone()),M.setY(C(M.x*M.x+M.z*M.z)*i).normalize(),E.setY(C(E.x*E.x+E.z*E.z)*i).normalize(),P=0;P<_;P++){var R=l[P][n],V=l[P+1][n],U=l[P+1][n+1],F=l[P][n+1],G=M.clone(),N=M.clone(),I=E.clone(),O=E.clone(),x=p[P][n].clone(),H=p[P+1][n].clone(),W=p[P+1][n+1].clone(),j=p[P][n+1].clone();this.faces.push(new THREE.Face3(R,V,F,[G,N,O])),this.faceVertexUvs[0].push([x,H,j]),this.faces.push(new THREE.Face3(V,U,F,[N.clone(),I,O.clone()])),this.faceVertexUvs[0].push([H.clone(),W,j.clone()])}if(!1===T&&0<r)for(this.vertices.push(new THREE.Vector3(0,L,0)),n=0;n<S;n++)R=l[0][n],V=l[0][n+1],U=this.vertices.length-1,G=new THREE.Vector3(0,1,0),N=new THREE.Vector3(0,1,0),I=new THREE.Vector3(0,1,0),x=p[0][n].clone(),H=p[0][n+1].clone(),W=new THREE.Vector2(H.x,0),this.faces.push(new THREE.Face3(R,V,U,[G,N,I],void 0,1)),this.faceVertexUvs[0].push([x,H,W]);if(!1===T&&0<o)for(this.vertices.push(new THREE.Vector3(0,-L,0)),n=0;n<S;n++)R=l[_][n+1],V=l[_][n],U=this.vertices.length-1,G=new THREE.Vector3(0,-1,0),N=new THREE.Vector3(0,-1,0),I=new THREE.Vector3(0,-1,0),x=p[_][n+1].clone(),H=p[_][n].clone(),W=new THREE.Vector2(H.x,1),this.faces.push(new THREE.Face3(R,V,U,[G,N,I],void 0,2)),this.faceVertexUvs[0].push([x,H,W]);this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry,THREE.CylinderGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.CylinderGeometry(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)},THREE.EdgesGeometry=function(t,r){function a(e,t){return e-t}THREE.BufferGeometry.call(this);var o=Math.cos(THREE.Math.degToRad(void 0===r?1:r)),i=[0,0],s={},d=["a","b","c"],c;t instanceof THREE.BufferGeometry?(c=new THREE.Geometry,c.fromBufferGeometry(t)):c=t.clone(),c.mergeVertices(),c.computeFaceNormals();var u=c.vertices;c=c.faces;for(var l=0,g=c.length;l<g;l++)for(var m=c[l],p=0;3>p;p++){i[0]=m[d[p]],i[1]=m[d[(p+1)%3]],i.sort(a);var y=i.toString();void 0===s[y]?s[y]={vert1:i[0],vert2:i[1],face1:l,face2:void 0}:s[y].face2=l}for(y in i=[],s)(d=s[y],void 0===d.face2||c[d.face1].normal.dot(c[d.face2].normal)<=o)&&(l=u[d.vert1],i.push(l.x),i.push(l.y),i.push(l.z),l=u[d.vert2],i.push(l.x),i.push(l.y),i.push(l.z));this.addAttribute("position",new THREE.BufferAttribute(new Float32Array(i),3))},THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry,THREE.ExtrudeGeometry=function(e,t){"undefined"!=typeof e&&(THREE.Geometry.call(this),this.type="ExtrudeGeometry",e=Array.isArray(e)?e:[e],this.addShapeList(e,t),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry,THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var r=e.length,a=0;a<r;a++)this.addShape(e[a],t)},THREE.ExtrudeGeometry.prototype.addShape=function(r,a){function o(e,t,r){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(r).add(e)}function i(t,r,o){var i=Math.sign,n=1,n=t.x-r.x,s=t.y-r.y,e=o.x-t.x,p=o.y-t.y,m=n*n+s*s;if(Math.abs(n*p-s*e)>S){var u=_(m),g=_(e*e+p*p),m=r.x-s/u;if(r=r.y+n/u,e=((o.x-p/g-m)*p-(o.y+e/g-r)*e)/(n*p-s*e),o=m+n*e-t.x,t=r+s*e-t.y,n=o*o+t*t,2>=n)return new THREE.Vector2(o,t);n=_(n/2)}else t=!1,n>S?e>S&&(t=!0):n<-S?e<-S&&(t=!0):i(s)===i(p)&&(t=!0),t?(o=-s,t=n,n=_(m)):(o=n,t=s,n=_(m/2));return new THREE.Vector2(o/n,t/n)}function d(t,r){var a,o;for(R=t.length;0<=--R;){a=R,o=R-1,0>o&&(o=t.length-1);for(var i=0,n=j+2*V,i=0;i<n;i++){var s=L*i,p=L*(i+1),m=r+a+s,s=r+o+s,u=r+o+p,p=r+a+p,m=m+J,s=s+J,u=u+J,p=p+J;ae.faces.push(new THREE.Face3(m,s,p,null,null,1)),ae.faces.push(new THREE.Face3(s,u,p,null,null,1)),m=Z.generateSideWallUV(ae,m,s,u,p),ae.faceVertexUvs[0].push([m[0],m[1],m[3]]),ae.faceVertexUvs[0].push([m[1],m[2],m[3]])}}}function e(e,t,r){ae.vertices.push(new THREE.Vector3(e,t,r))}function c(e,t,r){e+=J,t+=J,r+=J,ae.faces.push(new THREE.Face3(e,t,r,null,null,0)),e=Z.generateTopUV(ae,e,t,r),ae.faceVertexUvs[0].push(e)}var S=Number.EPSILON,g=Math.PI,f=Math.sin,_=Math.sqrt,b=void 0===a.amount?100:a.amount,h=void 0===a.bevelThickness?6:a.bevelThickness,P=void 0===a.bevelSize?h-2:a.bevelSize,V=void 0===a.bevelSegments?3:a.bevelSegments,I=void 0===a.bevelEnabled||a.bevelEnabled,W=void 0===a.curveSegments?12:a.curveSegments,j=void 0===a.steps?1:a.steps,q=a.extrudePath,Y=!1,Z=void 0===a.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:a.UVGenerator,u,$,ee,te,re;q&&(u=q.getSpacedPoints(j),Y=!0,I=!1,$=void 0===a.frames?new THREE.TubeGeometry.FrenetFrames(q,j,!1):a.frames,ee=new THREE.Vector3,te=new THREE.Vector3,re=new THREE.Vector3),I||(P=h=V=0);var ae=this,J=this.vertices.length,q=r.extractPoints(W),W=q.shape,F=q.holes,C,oe,ie;if(q=!THREE.ShapeUtils.isClockWise(W)){for(W=W.reverse(),oe=0,ie=F.length;oe<ie;oe++)C=F[oe],THREE.ShapeUtils.isClockWise(C)&&(F[oe]=C.reverse());q=!1}var ne=THREE.ShapeUtils.triangulateShape(W,F),N=W;for(oe=0,ie=F.length;oe<ie;oe++)C=F[oe],W=W.concat(C);var L=W.length,T=ne.length,q=[],R=0,se,le,pe,de,ce,me;for(pe=N.length,se=pe-1,le=R+1;R<pe;R++,se++,le++)se===pe&&(se=0),le===pe&&(le=0),q[R]=i(N[R],N[se],N[le]);var ue=[],he=q.concat(),ge;for(oe=0,ie=F.length;oe<ie;oe++){for(C=F[oe],ge=[],R=0,pe=C.length,se=pe-1,le=R+1;R<pe;R++,se++,le++)se===pe&&(se=0),le===pe&&(le=0),ge[R]=i(C[R],C[se],C[le]);ue.push(ge),he=he.concat(ge)}for(se=0;se<V;se++){for(pe=se/V,de=h*(1-pe),le=P*f(pe*g/2),R=0,pe=N.length;R<pe;R++)ce=o(N[R],q[R],le),e(ce.x,ce.y,-de);for(oe=0,ie=F.length;oe<ie;oe++)for(C=F[oe],ge=ue[oe],R=0,pe=C.length;R<pe;R++)ce=o(C[R],ge[R],le),e(ce.x,ce.y,-de)}for(le=P,R=0;R<L;R++)ce=I?o(W[R],he[R],le):W[R],Y?(te.copy($.normals[0]).multiplyScalar(ce.x),ee.copy($.binormals[0]).multiplyScalar(ce.y),re.copy(u[0]).add(te).add(ee),e(re.x,re.y,re.z)):e(ce.x,ce.y,0);for(pe=1;pe<=j;pe++)for(R=0;R<L;R++)ce=I?o(W[R],he[R],le):W[R],Y?(te.copy($.normals[pe]).multiplyScalar(ce.x),ee.copy($.binormals[pe]).multiplyScalar(ce.y),re.copy(u[pe]).add(te).add(ee),e(re.x,re.y,re.z)):e(ce.x,ce.y,b/j*pe);for(se=V-1;0<=se;se--){for(pe=se/V,de=h*(1-pe),le=P*f(pe*g/2),R=0,pe=N.length;R<pe;R++)ce=o(N[R],q[R],le),e(ce.x,ce.y,b+de);for(oe=0,ie=F.length;oe<ie;oe++)for(C=F[oe],ge=ue[oe],R=0,pe=C.length;R<pe;R++)ce=o(C[R],ge[R],le),Y?e(ce.x,ce.y+u[j-1].y,u[j-1].x+de):e(ce.x,ce.y,b+de)}(function(){if(I){var e;for(e=0*L,R=0;R<T;R++)me=ne[R],c(me[2]+e,me[1]+e,me[0]+e);for(e=j+2*V,e*=L,R=0;R<T;R++)me=ne[R],c(me[0]+e,me[1]+e,me[2]+e)}else{for(R=0;R<T;R++)me=ne[R],c(me[2],me[1],me[0]);for(R=0;R<T;R++)me=ne[R],c(me[0]+L*j,me[1]+L*j,me[2]+L*j)}})(),function(){var e=0;for(d(N,e),e+=N.length,oe=0,ie=F.length;oe<ie;oe++)C=F[oe],d(C,e),e+=C.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,r,o){return e=e.vertices,t=e[t],r=e[r],o=e[o],[new THREE.Vector2(t.x,t.y),new THREE.Vector2(r.x,r.y),new THREE.Vector2(o.x,o.y)]},generateSideWallUV:function(t,r,o,i,n){return t=t.vertices,r=t[r],o=t[o],i=t[i],n=t[n],.01>Math.abs(r.y-o.y)?[new THREE.Vector2(r.x,1-r.z),new THREE.Vector2(o.x,1-o.z),new THREE.Vector2(i.x,1-i.z),new THREE.Vector2(n.x,1-n.z)]:[new THREE.Vector2(r.y,1-r.z),new THREE.Vector2(o.y,1-o.z),new THREE.Vector2(i.y,1-i.z),new THREE.Vector2(n.y,1-n.z)]}},THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),this.type="ShapeGeometry",!1===Array.isArray(e)&&(e=[e]),this.addShapeList(e,t),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry,THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var r=0,a=e.length;r<a;r++)this.addShape(e[r],t);return this},THREE.ShapeGeometry.prototype.addShape=function(t,r){void 0===r&&(r={});var a=r.material,o=void 0===r.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:r.UVGenerator,i=this.vertices.length,n,s,p;n=t.extractPoints(void 0===r.curveSegments?12:r.curveSegments);var d=n.shape,c=n.holes;if(!THREE.ShapeUtils.isClockWise(d))for(d=d.reverse(),n=0,s=c.length;n<s;n++)p=c[n],THREE.ShapeUtils.isClockWise(p)&&(c[n]=p.reverse());var u=THREE.ShapeUtils.triangulateShape(d,c);for(n=0,s=c.length;n<s;n++)p=c[n],d=d.concat(p);for(c=d.length,s=u.length,n=0;n<c;n++)p=d[n],this.vertices.push(new THREE.Vector3(p.x,p.y,0));for(n=0;n<s;n++)c=u[n],d=c[0]+i,p=c[1]+i,c=c[2]+i,this.faces.push(new THREE.Face3(d,p,c,null,null,a)),this.faceVertexUvs[0].push(o.generateTopUV(this,d,p,c))},THREE.LatheGeometry=function(r,a,o,i){THREE.Geometry.call(this),this.type="LatheGeometry",this.parameters={points:r,segments:a,phiStart:o,phiLength:i},a=a||12,o=o||0,i=i||2*Math.PI;for(var u=1/(r.length-1),e=1/a,g=0,y=a;g<=y;g++)for(var x=o+g*e*i,v=Math.cos(x),S=Math.sin(x),x=0,_=r.length;x<_;x++){var T=r[x],M=new THREE.Vector3;M.x=v*T.x-S*T.y,M.y=S*T.x+v*T.y,M.z=T.z,this.vertices.push(M)}for(o=r.length,g=0,y=a;g<y;g++)for(x=0,_=r.length-1;x<_;x++){a=S=x+o*g,i=S+o;var v=S+1+o,S=S+1,T=g*e,M=x*u,E=T+e,s=M+u;this.faces.push(new THREE.Face3(a,i,S)),this.faceVertexUvs[0].push([new THREE.Vector2(T,M),new THREE.Vector2(E,M),new THREE.Vector2(T,s)]),this.faces.push(new THREE.Face3(i,v,S)),this.faceVertexUvs[0].push([new THREE.Vector2(E,M),new THREE.Vector2(E,s),new THREE.Vector2(T,s)])}this.mergeVertices(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry,THREE.PlaneGeometry=function(e,t,r,a){THREE.Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:a},this.fromBufferGeometry(new THREE.PlaneBufferGeometry(e,t,r,a))},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry,THREE.PlaneGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.PlaneGeometry(e.width,e.height,e.widthSegments,e.heightSegments)},THREE.PlaneBufferGeometry=function(r,o,i,u){var y=Math.floor;THREE.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:r,height:o,widthSegments:i,heightSegments:u};var x=r/2,v=o/2;i=y(i)||1,u=y(u)||1;var S=i+1,f=u+1,_=r/i,T=o/u;o=new Float32Array(3*(S*f)),r=new Float32Array(3*(S*f));for(var M=new Float32Array(2*(S*f)),m=0,E=0,C=0;C<f;C++)for(var A=C*T-v,s=0;s<S;s++)o[m]=s*_-x,o[m+1]=-A,r[m+2]=1,M[E]=s/i,M[E+1]=1-C/u,m+=3,E+=2;for(m=0,x=new(65535<o.length/3?Uint32Array:Uint16Array)(6*(i*u)),C=0;C<u;C++)for(s=0;s<i;s++)v=s+S*(C+1),f=s+1+S*(C+1),_=s+1+S*C,x[m]=s+S*C,x[m+1]=v,x[m+2]=_,x[m+3]=v,x[m+4]=f,x[m+5]=_,m+=6;this.setIndex(new THREE.BufferAttribute(x,1)),this.addAttribute("position",new THREE.BufferAttribute(o,3)),this.addAttribute("normal",new THREE.BufferAttribute(r,3)),this.addAttribute("uv",new THREE.BufferAttribute(M,2))},THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry,THREE.PlaneBufferGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.PlaneBufferGeometry(e.width,e.height,e.widthSegments,e.heightSegments)},THREE.RingGeometry=function(t,r,o,i,n,s){var u=Math.max;THREE.Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:r,thetaSegments:o,phiSegments:i,thetaStart:n,thetaLength:s},t=t||0,r=r||50,n=void 0===n?0:n,s=void 0===s?2*Math.PI:s,o=void 0===o?8:u(3,o),i=void 0===i?8:u(1,i);var y=[],h=t,x=(r-t)/i,v;for(t=0;t<i+1;t++){for(v=0;v<o+1;v++){var S=new THREE.Vector3,_=n+v/o*s;S.x=h*Math.cos(_),S.y=h*Math.sin(_),this.vertices.push(S),y.push(new THREE.Vector2((S.x/r+1)/2,(S.y/r+1)/2))}h+=x}for(r=new THREE.Vector3(0,0,1),t=0;t<i;t++)for(n=t*(o+1),v=0;v<o;v++)s=_=v+n,x=_+o+1,S=_+o+2,this.faces.push(new THREE.Face3(s,x,S,[r.clone(),r.clone(),r.clone()])),this.faceVertexUvs[0].push([y[s].clone(),y[x].clone(),y[S].clone()]),s=_,x=_+o+2,S=_+1,this.faces.push(new THREE.Face3(s,x,S,[r.clone(),r.clone(),r.clone()])),this.faceVertexUvs[0].push([y[s].clone(),y[x].clone(),y[S].clone()]);this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),h)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry.prototype.constructor=THREE.RingGeometry,THREE.RingGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.RingGeometry(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)},THREE.SphereGeometry=function(t,r,a,o,i,e,n){THREE.Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:r,heightSegments:a,phiStart:o,phiLength:i,thetaStart:e,thetaLength:n},this.fromBufferGeometry(new THREE.SphereBufferGeometry(t,r,a,o,i,e,n))},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry,THREE.SphereGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.SphereGeometry(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)},THREE.SphereBufferGeometry=function(r,o,i,y,S,_,T){var M=Math.PI,E=Math.sin,C=Math.cos,A=Math.floor,L=Math.max;THREE.BufferGeometry.call(this),this.type="SphereBufferGeometry",this.parameters={radius:r,widthSegments:o,heightSegments:i,phiStart:y,phiLength:S,thetaStart:_,thetaLength:T},r=r||50,o=L(3,A(o)||8),i=L(2,A(i)||6),y=void 0===y?0:y,S=void 0===S?2*M:S,_=void 0===_?0:_,T=void 0===T?M:T;for(var P=_+T,h=(o+1)*(i+1),R=new THREE.BufferAttribute(new Float32Array(3*h),3),V=new THREE.BufferAttribute(new Float32Array(3*h),3),h=new THREE.BufferAttribute(new Float32Array(2*h),2),m=0,k=[],n=new THREE.Vector3,U=0;U<=i;U++){for(var F=[],t=U/i,v=0;v<=o;v++){var G=v/o,w=-r*C(y+G*S)*E(_+t*T),D=r*C(_+t*T),x=r*E(y+G*S)*E(_+t*T);n.set(w,D,x).normalize(),R.setXYZ(m,w,D,x),V.setXYZ(m,n.x,n.y,n.z),h.setXY(m,G,1-t),F.push(m),m++}k.push(F)}for(y=[],U=0;U<i;U++)for(v=0;v<o;v++)S=k[U][v+1],T=k[U][v],m=k[U+1][v],n=k[U+1][v+1],(0!==U||0<_)&&y.push(S,T,n),(U!==i-1||P<M)&&y.push(T,m,n);this.setIndex(new(65535<R.count?THREE.Uint32Attribute:THREE.Uint16Attribute)(y,1)),this.addAttribute("position",R),this.addAttribute("normal",V),this.addAttribute("uv",h),this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),r)},THREE.SphereBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.SphereBufferGeometry.prototype.constructor=THREE.SphereBufferGeometry,THREE.SphereBufferGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.SphereBufferGeometry(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)},THREE.TorusGeometry=function(t,r,o,i,s){var u=Math.PI,y=Math.sin,x=Math.cos;THREE.Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:r,radialSegments:o,tubularSegments:i,arc:s},t=t||100,r=r||40,o=o||8,i=i||6,s=s||2*u;for(var v=new THREE.Vector3,S=[],f=[],h=0;h<=o;h++)for(var _=0;_<=i;_++){var T=_/i*s,M=2*(h/o*u);v.x=t*x(T),v.y=t*y(T);var p=new THREE.Vector3;p.x=(t+r*x(M))*x(T),p.y=(t+r*x(M))*y(T),p.z=r*y(M),this.vertices.push(p),S.push(new THREE.Vector2(_/i,h/o)),f.push(p.clone().sub(v).normalize())}for(h=1;h<=o;h++)for(_=1;_<=i;_++)t=(i+1)*h+_-1,r=(i+1)*(h-1)+_-1,s=(i+1)*(h-1)+_,v=(i+1)*h+_,T=new THREE.Face3(t,r,v,[f[t].clone(),f[r].clone(),f[v].clone()]),this.faces.push(T),this.faceVertexUvs[0].push([S[t].clone(),S[r].clone(),S[v].clone()]),T=new THREE.Face3(r,s,v,[f[r].clone(),f[s].clone(),f[v].clone()]),this.faces.push(T),this.faceVertexUvs[0].push([S[r].clone(),S[s].clone(),S[v].clone()]);this.computeFaceNormals()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry,THREE.TorusGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.TorusGeometry(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)},THREE.TorusKnotGeometry=function(r,o,i,y,x,S,_){function T(t,r,o,i,n){var e=E(t),s=M(t);return t*=r/o,r=E(t),e*=.5*(i*(2+r)),s=.5*(i*(2+r)*s),i=.5*(n*i*M(t)),new THREE.Vector3(e,s,i)}var h=Math.PI,M=Math.sin,E=Math.cos;THREE.Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:r,tube:o,radialSegments:i,tubularSegments:y,p:x,q:S,heightScale:_},r=r||100,o=o||40,i=i||64,y=y||8,x=x||2,S=S||3,_=_||1;for(var C=Array(i),l=new THREE.Vector3,A=new THREE.Vector3,L=new THREE.Vector3,w=0;w<i;++w){C[w]=Array(y);var P=2*(w/i)*x*h,R=T(P,S,x,r,_),P=T(P+.01,S,x,r,_);for(l.subVectors(P,R),A.addVectors(P,R),L.crossVectors(l,A),A.crossVectors(L,l),L.normalize(),A.normalize(),P=0;P<y;++P){var s=2*(P/y)*h,D=-o*E(s),s=o*M(s),v=new THREE.Vector3;v.x=R.x+D*A.x+s*L.x,v.y=R.y+D*A.y+s*L.y,v.z=R.z+D*A.z+s*L.z,C[w][P]=this.vertices.push(v)-1}}for(w=0;w<i;++w)for(P=0;P<y;++P)x=(w+1)%i,S=(P+1)%y,r=C[w][P],o=C[x][P],x=C[x][S],S=C[w][S],_=new THREE.Vector2(w/i,P/y),l=new THREE.Vector2((w+1)/i,P/y),A=new THREE.Vector2((w+1)/i,(P+1)/y),L=new THREE.Vector2(w/i,(P+1)/y),this.faces.push(new THREE.Face3(r,o,S)),this.faceVertexUvs[0].push([_,l,L]),this.faces.push(new THREE.Face3(o,x,S)),this.faceVertexUvs[0].push([l.clone(),A,L.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry,THREE.TorusKnotGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.TorusKnotGeometry(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.p,e.q,e.heightScale)},THREE.TubeGeometry=function(r,o,i,y,x,S){THREE.Geometry.call(this),this.type="TubeGeometry",this.parameters={path:r,segments:o,radius:i,radialSegments:y,closed:x,taper:S},o=o||64,i=i||1,y=y||8,x=x||!1,S=S||THREE.TubeGeometry.NoTaper;var _=[],f=o+1,T=new THREE.Vector3,M,E,C,A,L,P,R,D,V,U;for(D=new THREE.TubeGeometry.FrenetFrames(r,o,x),V=D.normals,U=D.binormals,this.tangents=D.tangents,this.normals=V,this.binormals=U,D=0;D<f;D++)for(_[D]=[],C=D/(f-1),R=r.getPointAt(C),M=V[D],E=U[D],L=i*S(C),C=0;C<y;C++)A=2*(C/y)*Math.PI,P=-L*Math.cos(A),A=L*Math.sin(A),T.copy(R),T.x+=P*M.x+A*E.x,T.y+=P*M.y+A*E.y,T.z+=P*M.z+A*E.z,_[D][C]=this.vertices.push(new THREE.Vector3(T.x,T.y,T.z))-1;for(D=0;D<o;D++)for(C=0;C<y;C++)S=x?(D+1)%o:D+1,f=(C+1)%y,r=_[D][C],i=_[S][C],S=_[S][f],f=_[D][f],T=new THREE.Vector2(D/o,C/y),V=new THREE.Vector2((D+1)/o,C/y),U=new THREE.Vector2((D+1)/o,(C+1)/y),M=new THREE.Vector2(D/o,(C+1)/y),this.faces.push(new THREE.Face3(r,i,f)),this.faceVertexUvs[0].push([T,V,M]),this.faces.push(new THREE.Face3(i,S,f)),this.faceVertexUvs[0].push([V.clone(),U,M.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry,THREE.TubeGeometry.prototype.clone=function(){return new this.constructor(this.parameters.path,this.parameters.segments,this.parameters.radius,this.parameters.radialSegments,this.parameters.closed,this.parameters.taper)},THREE.TubeGeometry.NoTaper=function(){return 1},THREE.TubeGeometry.SinusoidalTaper=function(e){return Math.sin(Math.PI*e)},THREE.TubeGeometry.FrenetFrames=function(t,r,o){var i=Math.acos,n=Math.abs,s=new THREE.Vector3,c=[],e=[],u=[],g=new THREE.Vector3,h=new THREE.Matrix4;r+=1;var l,y,f;for(this.tangents=c,this.normals=e,this.binormals=u,l=0;l<r;l++)y=l/(r-1),c[l]=t.getTangentAt(y),c[l].normalize();for(e[0]=new THREE.Vector3,u[0]=new THREE.Vector3,t=Number.MAX_VALUE,l=n(c[0].x),y=n(c[0].y),f=n(c[0].z),l<=t&&(t=l,s.set(1,0,0)),y<=t&&(t=y,s.set(0,1,0)),f<=t&&s.set(0,0,1),g.crossVectors(c[0],s).normalize(),e[0].crossVectors(c[0],g),u[0].crossVectors(c[0],e[0]),l=1;l<r;l++)e[l]=e[l-1].clone(),u[l]=u[l-1].clone(),g.crossVectors(c[l-1],c[l]),g.length()>Number.EPSILON&&(g.normalize(),s=i(THREE.Math.clamp(c[l-1].dot(c[l]),-1,1)),e[l].applyMatrix4(h.makeRotationAxis(g,s))),u[l].crossVectors(c[l],e[l]);if(o)for(s=i(THREE.Math.clamp(e[0].dot(e[r-1]),-1,1)),s/=r-1,0<c[0].dot(g.crossVectors(e[0],e[r-1]))&&(s=-s),l=1;l<r;l++)e[l].applyMatrix4(h.makeRotationAxis(c[l],s*l)),u[l].crossVectors(c[l],e[l])},THREE.PolyhedronGeometry=function(r,o,i,u){function y(e){var t=e.normalize().clone();t.index=S.vertices.push(t)-1;var r=h(e.z,-e.x)/2/x+.5;return e=h(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/x+.5,t.uv=new THREE.Vector2(r,1-e),t}function e(e,r,a,o){o=new THREE.Face3(e.index,r.index,a.index,[e.clone(),r.clone(),a.clone()],void 0,o),S.faces.push(o),t.copy(e).add(r).add(a).divideScalar(3),o=h(t.z,-t.x),S.faceVertexUvs[0].push([f(e.uv,e,o),f(r.uv,r,o),f(a.uv,a,o)])}function g(r,a){for(var o=Math.pow(2,a),i=y(S.vertices[r.a]),l=y(S.vertices[r.b]),c=y(S.vertices[r.c]),u=[],h=r.materialIndex,n=0;n<=o;n++){u[n]=[];for(var g=y(i.clone().lerp(c,n/o)),p=y(l.clone().lerp(c,n/o)),f=o-n,s=0;s<=f;s++)u[n][s]=0==s&&n===o?g:y(g.clone().lerp(p,s/f))}for(n=0;n<o;n++)for(s=0;s<2*(o-n)-1;s++)i=Math.floor(s/2),0==s%2?e(u[n][i+1],u[n+1][i],u[n][i],h):e(u[n][i+1],u[n+1][i+1],u[n+1][i],h)}function f(e,t,r){return 0>r&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(r/2/x+.5,e.y)),e.clone()}var h=Math.atan2,x=Math.PI;THREE.Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:r,indices:o,radius:i,detail:u},i=i||1,u=u||0;for(var S=this,l=0,_=r.length;l<_;l+=3)y(new THREE.Vector3(r[l],r[l+1],r[l+2]));r=this.vertices;for(var T=[],M=l=0,_=o.length;l<_;l+=3,M++){var E=r[o[l]],C=r[o[l+1]],s=r[o[l+2]];T[M]=new THREE.Face3(E.index,C.index,s.index,[E.clone(),C.clone(),s.clone()],void 0,M)}for(var t=new THREE.Vector3,l=0,_=T.length;l<_;l++)g(T[l],u);for(l=0,_=this.faceVertexUvs[0].length;l<_;l++)o=this.faceVertexUvs[0][l],u=o[0].x,r=o[1].x,T=o[2].x,M=Math.max(u,r,T),E=Math.min(u,r,T),.9<M&&.1>E&&(.2>u&&(o[0].x+=1),.2>r&&(o[1].x+=1),.2>T&&(o[2].x+=1));for(l=0,_=this.vertices.length;l<_;l++)this.vertices[l].multiplyScalar(i);this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),i)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry,THREE.PolyhedronGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.PolyhedronGeometry(e.vertices,e.indices,e.radius,e.detail)},THREE.DodecahedronGeometry=function(e,t){var r=(1+2.23606797749979)/2,a=1/r;THREE.PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-a,-r,0,-a,r,0,a,-r,0,a,r,-a,-r,0,-a,r,0,a,-r,0,a,r,0,-r,0,-a,r,0,-a,-r,0,a,r,0,a],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}},THREE.DodecahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry,THREE.DodecahedronGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.DodecahedronGeometry(e.radius,e.detail)},THREE.IcosahedronGeometry=function(e,t){var r=(1+2.23606797749979)/2;THREE.PolyhedronGeometry.call(this,[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}},THREE.IcosahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry,THREE.IcosahedronGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.IcosahedronGeometry(e.radius,e.detail)},THREE.OctahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}},THREE.OctahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry,THREE.OctahedronGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.OctahedronGeometry(e.radius,e.detail)},THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}},THREE.TetrahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry,THREE.TetrahedronGeometry.prototype.clone=function(){var e=this.parameters;return new THREE.TetrahedronGeometry(e.radius,e.detail)},THREE.ParametricGeometry=function(t,r,o){THREE.Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:r,stacks:o};var i=this.vertices,c=this.faces,e=this.faceVertexUvs[0],u=r+1,m,g,y,x;for(m=0;m<=o;m++)for(x=m/o,g=0;g<=r;g++)y=g/r,y=t(y,x),i.push(y);var v,b,S,_;for(m=0;m<o;m++)for(g=0;g<r;g++)t=m*u+g,i=m*u+g+1,x=(m+1)*u+g+1,y=(m+1)*u+g,v=new THREE.Vector2(g/r,m/o),b=new THREE.Vector2((g+1)/r,m/o),S=new THREE.Vector2((g+1)/r,(m+1)/o),_=new THREE.Vector2(g/r,(m+1)/o),c.push(new THREE.Face3(t,i,y)),e.push([v,b,_]),c.push(new THREE.Face3(i,x,y)),e.push([b.clone(),S,_.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry,THREE.WireframeGeometry=function(t){function r(e,t){return e-t}THREE.BufferGeometry.call(this);var o=[0,0],i={},s=["a","b","c"];if(t instanceof THREE.Geometry){var u=t.vertices,y=t.faces,x=0,v=new Uint32Array(6*y.length);t=0;for(var b=y.length;t<b;t++)for(var S=y[t],_=0;3>_;_++){o[0]=S[s[_]],o[1]=S[s[(_+1)%3]],o.sort(r);var T=o.toString();void 0===i[T]&&(v[2*x]=o[0],v[2*x+1]=o[1],i[T]=!0,x++)}for(o=new Float32Array(6*x),t=0,b=x;t<b;t++)for(_=0;2>_;_++)i=u[v[2*t+_]],x=6*t+3*_,o[x+0]=i.x,o[x+1]=i.y,o[x+2]=i.z;this.addAttribute("position",new THREE.BufferAttribute(o,3))}else if(t instanceof THREE.BufferGeometry){if(null!==t.index){for(b=t.index.array,u=t.attributes.position,s=t.drawcalls,x=0,0===s.length&&t.addGroup(0,b.length),v=new Uint32Array(2*b.length),y=0,S=s.length;y<S;++y){t=s[y],_=t.start,T=t.count,t=_;for(var M=_+T;t<M;t+=3)for(_=0;3>_;_++)o[0]=b[t+_],o[1]=b[t+(_+1)%3],o.sort(r),T=o.toString(),void 0===i[T]&&(v[2*x]=o[0],v[2*x+1]=o[1],i[T]=!0,x++)}for(o=new Float32Array(6*x),t=0,b=x;t<b;t++)for(_=0;2>_;_++)x=6*t+3*_,i=v[2*t+_],o[x+0]=u.getX(i),o[x+1]=u.getY(i),o[x+2]=u.getZ(i)}else for(u=t.attributes.position.array,x=u.length/3,v=x/3,o=new Float32Array(6*x),t=0,b=v;t<b;t++)for(_=0;3>_;_++)x=18*t+6*_,v=9*t+3*_,o[x+0]=u[v],o[x+1]=u[v+1],o[x+2]=u[v+2],i=9*t+3*((_+1)%3),o[x+3]=u[i],o[x+4]=u[i+1],o[x+5]=u[i+2];this.addAttribute("position",new THREE.BufferAttribute(o,3))}},THREE.WireframeGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.WireframeGeometry.prototype.constructor=THREE.WireframeGeometry,THREE.AxisHelper=function(e){e=e||1;var t=new Float32Array([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e]),r=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);e=new THREE.BufferGeometry,e.addAttribute("position",new THREE.BufferAttribute(t,3)),e.addAttribute("color",new THREE.BufferAttribute(r,3)),t=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),THREE.LineSegments.call(this,e,t)},THREE.AxisHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.AxisHelper.prototype.constructor=THREE.AxisHelper,THREE.ArrowHelper=function(){var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var r=new THREE.CylinderGeometry(0,.5,1,5,1);return r.translate(0,-.5,0),function(a,o,i,n,s,l){THREE.Object3D.call(this),void 0===n&&(n=16776960),void 0===i&&(i=1),void 0===s&&(s=.2*i),void 0===l&&(l=.2*s),this.position.copy(o),s<i&&(this.line=new THREE.Line(t,new THREE.LineBasicMaterial({color:n})),this.line.matrixAutoUpdate=!1,this.add(this.line)),this.cone=new THREE.Mesh(r,new THREE.MeshBasicMaterial({color:n})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(a),this.setLength(i,s,l)}}(),THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper,THREE.ArrowHelper.prototype.setDirection=function(){var e=new THREE.Vector3,t;return function(r){.99999<r.y?this.quaternion.set(0,0,0,1):-.99999>r.y?this.quaternion.set(1,0,0,0):(e.set(r.z,0,-r.x).normalize(),t=Math.acos(r.y),this.quaternion.setFromAxisAngle(e,t))}}(),THREE.ArrowHelper.prototype.setLength=function(e,t,r){void 0===t&&(t=.2*e),void 0===r&&(r=.2*t),t<e&&(this.line.scale.set(1,e-t,1),this.line.updateMatrix()),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(e){void 0!==this.line&&this.line.material.color.set(e),this.cone.material.color.set(e)},THREE.BoxHelper=function(e){var t=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),a=new THREE.BufferGeometry;a.setIndex(new THREE.BufferAttribute(t,1)),a.addAttribute("position",new THREE.BufferAttribute(r,3)),THREE.LineSegments.call(this,a,new THREE.LineBasicMaterial({color:16776960})),void 0!==e&&this.update(e)},THREE.BoxHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.BoxHelper.prototype.constructor=THREE.BoxHelper,THREE.BoxHelper.prototype.update=function(){var t=new THREE.Box3;return function(r){if(t.setFromObject(r),!t.empty()){r=t.min;var a=t.max,o=this.geometry.attributes.position,i=o.array;i[0]=a.x,i[1]=a.y,i[2]=a.z,i[3]=r.x,i[4]=a.y,i[5]=a.z,i[6]=r.x,i[7]=r.y,i[8]=a.z,i[9]=a.x,i[10]=r.y,i[11]=a.z,i[12]=a.x,i[13]=a.y,i[14]=r.z,i[15]=r.x,i[16]=a.y,i[17]=r.z,i[18]=r.x,i[19]=r.y,i[20]=r.z,i[21]=a.x,i[22]=r.y,i[23]=r.z,o.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),THREE.BoundingBoxHelper=function(e,t){var r=void 0===t?8947848:t;this.object=e,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:r,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper,THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(t){function r(e,t,r){o(e,r),o(t,r)}function o(t,r){i.vertices.push(new THREE.Vector3),i.colors.push(new THREE.Color(r)),void 0===e[t]&&(e[t]=[]),e[t].push(i.vertices.length-1)}var i=new THREE.Geometry,a=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),e={};r("n1","n2",16755200),r("n2","n4",16755200),r("n4","n3",16755200),r("n3","n1",16755200),r("f1","f2",16755200),r("f2","f4",16755200),r("f4","f3",16755200),r("f3","f1",16755200),r("n1","f1",16755200),r("n2","f2",16755200),r("n3","f3",16755200),r("n4","f4",16755200),r("p","n1",16711680),r("p","n2",16711680),r("p","n3",16711680),r("p","n4",16711680),r("u1","u2",43775),r("u2","u3",43775),r("u3","u1",43775),r("c","t",16777215),r("p","c",3355443),r("cn1","cn2",3355443),r("cn3","cn4",3355443),r("cf1","cf2",3355443),r("cf3","cf4",3355443),THREE.LineSegments.call(this,i,a),this.camera=t,this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=e,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.CameraHelper.prototype.constructor=THREE.CameraHelper,THREE.CameraHelper.prototype.update=function(){function t(t,n,s,p){if(r.set(n,s,p).unproject(o),t=i[t],void 0!==t)for(n=0,s=t.length;n<s;n++)e.vertices[t[n]].copy(r)}var r=new THREE.Vector3,o=new THREE.Camera,e,i;return function(){e=this.geometry,i=this.pointMap,o.projectionMatrix.copy(this.camera.projectionMatrix),t("c",0,0,-1),t("t",0,0,1),t("n1",-1,-1,-1),t("n2",1,-1,-1),t("n3",-1,1,-1),t("n4",1,1,-1),t("f1",-1,-1,1),t("f2",1,-1,1),t("f3",-1,1,1),t("f4",1,1,1),t("u1",.7,1.1,-1),t("u2",-.7,1.1,-1),t("u3",0,2,-1),t("cf1",-1,0,1),t("cf2",1,0,1),t("cf3",0,-1,1),t("cf4",0,1,1),t("cn1",-1,0,-1),t("cn2",1,0,-1),t("cn3",0,-1,-1),t("cn4",0,1,-1),e.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,t=t||1;var r=new THREE.Geometry;r.vertices.push(new THREE.Vector3(-t,t,0),new THREE.Vector3(t,t,0),new THREE.Vector3(t,-t,0),new THREE.Vector3(-t,-t,0),new THREE.Vector3(-t,t,0));var a=new THREE.LineBasicMaterial({fog:!1});a.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Line(r,a),this.add(this.lightPlane),r=new THREE.Geometry,r.vertices.push(new THREE.Vector3,new THREE.Vector3),a=new THREE.LineBasicMaterial({fog:!1}),a.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(r,a),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper,THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),r.subVectors(t,e),this.lightPlane.lookAt(r),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(r),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(e,t,r){t=void 0===t?16777215:t,THREE.LineSegments.call(this,new THREE.EdgesGeometry(e.geometry,r),new THREE.LineBasicMaterial({color:t})),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},THREE.EdgesHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper,THREE.FaceNormalsHelper=function(e,t,r,o){this.object=e,this.size=void 0===t?1:t,e=void 0===r?16776960:r,o=void 0===o?1:o,t=0,r=this.object.geometry,r instanceof THREE.Geometry?t=r.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead."),r=new THREE.BufferGeometry,t=new THREE.Float32Attribute(6*t,3),r.addAttribute("position",t),THREE.LineSegments.call(this,r,new THREE.LineBasicMaterial({color:e,linewidth:o})),this.matrixAutoUpdate=!1,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper,THREE.FaceNormalsHelper.prototype.update=function(){var t=new THREE.Vector3,r=new THREE.Vector3,a=new THREE.Matrix3;return function(){this.object.updateMatrixWorld(!0),a.getNormalMatrix(this.object.matrixWorld);for(var o=this.object.matrixWorld,i=this.geometry.attributes.position,e=this.object.geometry,n=e.vertices,e=e.faces,s=0,d=0,c=e.length;d<c;d++){var u=e[d],m=u.normal;t.copy(n[u.a]).add(n[u.b]).add(n[u.c]).divideScalar(3).applyMatrix4(o),r.copy(m).applyMatrix3(a).normalize().multiplyScalar(this.size).add(t),i.setXYZ(s,t.x,t.y,t.z),s+=1,i.setXYZ(s,r.x,r.y,r.z),s+=1}return i.needsUpdate=!0,this}}(),THREE.GridHelper=function(t,r){var a=new THREE.Geometry,o=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var i=-t;i<=t;i+=r){a.vertices.push(new THREE.Vector3(-t,0,i),new THREE.Vector3(t,0,i),new THREE.Vector3(i,0,-t),new THREE.Vector3(i,0,t));var n=0===i?this.color1:this.color2;a.colors.push(n,n,n,n)}THREE.LineSegments.call(this,a,o)},THREE.GridHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.GridHelper.prototype.constructor=THREE.GridHelper,THREE.GridHelper.prototype.setColors=function(e,t){this.color1.set(e),this.color2.set(t),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var r=new THREE.SphereGeometry(t,4,2);r.rotateX(-Math.PI/2);for(var a=0;8>a;a++)r.faces[a].color=this.colors[4>a?0:1];a=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0}),this.lightSphere=new THREE.Mesh(r,a),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper,THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(e,t){this.light=e,this.light.updateMatrixWorld();var r=new THREE.SphereGeometry(t,4,2),a=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});a.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,r,a),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper,THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SkeletonHelper=function(e){this.bones=this.getBoneList(e);for(var t=new THREE.Geometry,r=0;r<this.bones.length;r++)this.bones[r].parent instanceof THREE.Bone&&(t.vertices.push(new THREE.Vector3),t.vertices.push(new THREE.Vector3),t.colors.push(new THREE.Color(0,0,1)),t.colors.push(new THREE.Color(0,1,0)));t.dynamic=!0,r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0}),THREE.LineSegments.call(this,t,r),this.root=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.update()},THREE.SkeletonHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper,THREE.SkeletonHelper.prototype.getBoneList=function(e){var t=[];e instanceof THREE.Bone&&t.push(e);for(var r=0;r<e.children.length;r++)t.push.apply(t,this.getBoneList(e.children[r]));return t},THREE.SkeletonHelper.prototype.update=function(){for(var t=this.geometry,r=new THREE.Matrix4().getInverse(this.root.matrixWorld),a=new THREE.Matrix4,o=0,i=0,n;i<this.bones.length;i++)n=this.bones[i],n.parent instanceof THREE.Bone&&(a.multiplyMatrices(r,n.matrixWorld),t.vertices[o].setFromMatrixPosition(a),a.multiplyMatrices(r,n.parent.matrixWorld),t.vertices[o+1].setFromMatrixPosition(a),o+=2);t.verticesNeedUpdate=!0,t.computeBoundingSphere()},THREE.SpotLightHelper=function(e){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,e=new THREE.CylinderGeometry(0,1,1,8,1,!0),e.translate(0,-.5,0),e.rotateX(-Math.PI/2);var t=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(e,t),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper,THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){var r=this.light.distance?this.light.distance:1E4,a=r*Math.tan(this.light.angle);this.cone.scale.set(a,a,r),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(e,t,r,o){this.object=e,this.size=void 0===t?1:t,e=void 0===r?16711680:r,o=void 0===o?1:o,t=0,r=this.object.geometry,r instanceof THREE.Geometry?t=3*r.faces.length:r instanceof THREE.BufferGeometry&&(t=r.attributes.normal.count),r=new THREE.BufferGeometry,t=new THREE.Float32Attribute(6*t,3),r.addAttribute("position",t),THREE.LineSegments.call(this,r,new THREE.LineBasicMaterial({color:e,linewidth:o})),this.matrixAutoUpdate=!1,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper,THREE.VertexNormalsHelper.prototype.update=function(){var t=new THREE.Vector3,r=new THREE.Vector3,a=new THREE.Matrix3;return function(){var o=["a","b","c"];this.object.updateMatrixWorld(!0),a.getNormalMatrix(this.object.matrixWorld);var i=this.object.matrixWorld,e=this.geometry.attributes.position,c=this.object.geometry;if(c instanceof THREE.Geometry)for(var u=c.vertices,g=c.faces,l=c=0,y=g.length;l<y;l++)for(var m=g[l],p=0,x=m.vertexNormals.length,v;p<x;p++)v=m.vertexNormals[p],t.copy(u[m[o[p]]]).applyMatrix4(i),r.copy(v).applyMatrix3(a).normalize().multiplyScalar(this.size).add(t),e.setXYZ(c,t.x,t.y,t.z),c+=1,e.setXYZ(c,r.x,r.y,r.z),c+=1;else if(c instanceof THREE.BufferGeometry)for(o=c.attributes.position,u=c.attributes.normal,p=c=0,x=o.count;p<x;p++)t.set(o.getX(p),o.getY(p),o.getZ(p)).applyMatrix4(i),r.set(u.getX(p),u.getY(p),u.getZ(p)),r.applyMatrix3(a).normalize().multiplyScalar(this.size).add(t),e.setXYZ(c,t.x,t.y,t.z),c+=1,e.setXYZ(c,r.x,r.y,r.z),c+=1;return e.needsUpdate=!0,this}}(),THREE.WireframeHelper=function(e,t){var r=void 0===t?16777215:t;THREE.LineSegments.call(this,new THREE.WireframeGeometry(e.geometry),new THREE.LineBasicMaterial({color:r})),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},THREE.WireframeHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper,THREE.ImmediateRenderObject=function(e){THREE.Object3D.call(this),this.material=e,this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject,THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length;this.createAnimation("__default",0,r-1,r/1),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh,THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,r,a){t={start:t,end:r,length:r-t+1,fps:a,duration:(r-t)/a,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[e]=t,this.animationsList.push(t)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(t){for(var r=/([a-z]+)_?(\d+)/,a={},o=this.geometry,e=0,i=o.morphTargets.length,n,s;e<i;e++)if(s=o.morphTargets[e].name.match(r),s&&1<s.length){var p=s[1];a[p]||(a[p]={start:1/0,end:-Infinity}),s=a[p],e<s.start&&(s.start=e),e>s.end&&(s.end=e),n||(n=p)}for(p in a)s=a[p],this.createAnimation(p,s.start,s.end,t);this.firstAnimation=n},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){(e=this.animationsMap[e])&&(e.direction=1,e.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){(e=this.animationsMap[e])&&(e.direction=-1,e.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var r=this.animationsMap[e];r&&(r.fps=t,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var r=this.animationsMap[e];r&&(r.duration=t,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var r=this.animationsMap[e];r&&(r.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var r=this.animationsMap[e];r&&(r.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;return(e=this.animationsMap[e])&&(t=e.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;return(e=this.animationsMap[e])&&(t=e.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("THREE.MorphBlendMesh: animation["+e+"] undefined in .playAnimation()")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){(e=this.animationsMap[e])&&(e.active=!1)},THREE.MorphBlendMesh.prototype.update=function(t){for(var r=0,a=this.animationsList.length,o;r<a;r++)if(o=this.animationsList[r],o.active){var i=o.duration/o.length;o.time+=o.direction*t,o.mirroredLoop?(o.time>o.duration||0>o.time)&&(o.direction*=-1,o.time>o.duration&&(o.time=o.duration,o.directionBackwards=!0),0>o.time&&(o.time=0,o.directionBackwards=!1)):(o.time%=o.duration,0>o.time&&(o.time+=o.duration));var n=o.start+THREE.Math.clamp(Math.floor(o.time/i),0,o.length-1),s=o.weight;n!==o.currentFrame&&(this.morphTargetInfluences[o.lastFrame]=0,this.morphTargetInfluences[o.currentFrame]=1*s,this.morphTargetInfluences[n]=0,o.lastFrame=o.currentFrame,o.currentFrame=n),i=o.time%i/i,o.directionBackwards&&(i=1-i),o.currentFrame===o.lastFrame?this.morphTargetInfluences[o.currentFrame]=s:(this.morphTargetInfluences[o.currentFrame]=i*s,this.morphTargetInfluences[o.lastFrame]=(1-i)*s)}};